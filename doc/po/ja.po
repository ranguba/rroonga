# ja.po for rroonga Reference.
# Copyright (C) 2011 Kouhei Sutou
# This file is distributed under the same license as the rroonga package.
# Kouhei Sutou <kou@clear-code.com>, 2011.
msgid ""
msgstr ""
"Project-Id-Version: rroonga 2.1.0\n"
"PO-Revision-Date: 2017-04-29 11:52+0900\n"
"Last-Translator: Masafumi Yokoyama <yokoyama@clear-code.com>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Poedit 1.8.11\n"

msgid "# README"
msgstr "# はじめに"

msgid ""
"[![Gem Version](https://badge.fury.io/rb/rroonga.svg)](http://badge.fury.io/rb"
"/rroonga)"
msgstr ""

msgid "## Name"
msgstr "## 名前"

msgid "Rroonga"
msgstr ""

msgid "## Description"
msgstr "## 説明"

msgid ""
"Ruby bindings for Groonga that provide full text search and\n"
"column store features."
msgstr "全文検索機能とカラムストア機能を提供するGroongaのRubyバインディングです。"

msgid ""
"Rroonga is an extension library to use Groonga's DB-API\n"
"layer. Rroonga provides Rubyish readable and writable API\n"
"not C like API. You can use Groonga's fast and highly\n"
"functional features from Ruby with Rubyish form."
msgstr ""
"GroongaのいわゆるDB-API層をRubyから使うための拡張ライブラリです。GroongaのAPIをそのままRubyレベルに提供するのではなく、Rub"
"yらしく読み書きしやすいAPIとして提供します。高速・高機能なGroongaをRubyらしい書き方で利用できます。"

msgid "See the following URL about Groonga."
msgstr "Groongaに関する情報は以下のURLを参照して下さい。"

msgid "* [The Groonga official site](http://groonga.org/)"
msgstr "* [Groonga公式サイト](http://groonga.org/ja/)"

msgid "## Authors"
msgstr "## 作者"

msgid ""
"* Kouhei Sutou `<kou@clear-code.com>`\n"
"* Tasuku SUENAGA `<a@razil.jp>`\n"
"* Daijiro MORI `<morita@razil.jp>`\n"
"* Yuto HAYAMIZU `<y.hayamizu@gmail.com>`\n"
"* SHIDARA Yoji `<dara@shidara.net>`\n"
"* yoshihara haruka `<yoshihara@clear-code.com>`"
msgstr ""

msgid "## License"
msgstr "## ライセンス"

msgid "LGPL 2.1. See license/LGPL for details."
msgstr "LGPL 2.1です。詳しくはlicense/LGPLをご覧ください。"

msgid ""
"(Kouhei Sutou has a right to change the license including\n"
"contributed patches.)"
msgstr "（コントリビュートされたパッチなども含み、Kouhei Sutouがライセンスを変更する権利を持ちます。）"

msgid "## Dependencies"
msgstr "## 依存ソフトウェア"

msgid ""
"* Ruby\n"
"* Groonga"
msgstr ""

msgid "## Install"
msgstr "## インストール"

msgid "    % sudo gem install rroonga"
msgstr ""

msgid "## Documents"
msgstr "## ドキュメント"

msgid ""
"* [Reference manual in English](http://ranguba.org/rroonga/en/)\n"
"* [Reference manual in Japanese](http://ranguba.org/rroonga/ja/)"
msgstr ""
"* [リファレンスマニュアル（英語）](http://ranguba.org/rroonga/en/)\n"
"* [リファレンスマニュアル（日本語）](http://ranguba.org/rroonga/ja/)"

msgid "## Mailing list"
msgstr "## メーリングリスト"

msgid ""
"* English: [groonga-talk](http://lists.sourceforge.net/mailman/listinfo/groong"
"a-talk)\n"
"* Japanese: [groonga-dev](http://lists.sourceforge.jp/mailman/listinfo/groonga"
"-dev)"
msgstr ""
"* 英語: [groonga-talk](http://lists.sourceforge.net/mailman/listinfo/groonga-tal"
"k)\n"
"* 日本語: [groonga-dev](http://lists.sourceforge.jp/mailman/listinfo/groonga-dev)"

msgid "## Thanks"
msgstr "## 感謝"

msgid ""
"* Daijiro MORI: sent patches to support the latest Groonga.\n"
"* Tasuku SUENAGA: sent patches and bug reports.\n"
"* niku: sent bug reports.\n"
"* dara:\n"
"  * wrote tests.\n"
"  * fixed bugs.\n"
"* id:mat_aki: sent bug reports.\n"
"* @yune_kotomi: sent a bug report.\n"
"* m_seki: sent bug reports.\n"
"* ono matope: sent bug reports.\n"
"* @kamipo: send a bug report.\n"
"* ongaeshi: sent a patch to build gem on Windows.\n"
"* mallowlabs: send a patch."
msgstr ""

msgid "# How to Cross compile Rroonga"
msgstr ""

msgid "## For rake-compiler-dock"
msgstr ""

msgid ""
"`rake-compiler-dock` depends `docker` and some platform requires docker client"
" such as `docker-machine`.\n"
"Please install `docker` and docker client before cross compiling with `rake-co"
"mpiler-dock`."
msgstr ""

msgid "### cross compiling with rake-compiler-dock"
msgstr ""

msgid "execute following rake task:"
msgstr ""

msgid ""
"```bash\n"
"$ bundle exec rake build:windows\n"
"```"
msgstr ""

msgid ""
"Then, `pkg` directory is created. And cross compiled gems move into `pkg` dire"
"ctory."
msgstr ""

msgid "## Manual procedure for Debian GNU/Linux like Linux distribution Users"
msgstr ""

msgid "This is the manual procedure without rake-compiler-dock."
msgstr ""

msgid "### apt"
msgstr ""

msgid ""
"* mingw-w64\n"
"* build-essential"
msgstr ""

msgid "### prepare ruby and rubygems"
msgstr ""

msgid ""
"```bash\n"
"$ rbenv install 1.9.3-p547\n"
"$ gem install rubygems-update\n"
"$ update_rubygems\n"
"$ gem install bundler\n"
"$ rbenv install 2.0.0-p576\n"
"$ gem install bundler\n"
"$ rbenv install 2.1.3\n"
"$ gem install bundler\n"
"```"
msgstr ""

msgid "### bundle install"
msgstr ""

msgid ""
"```bash\n"
"$ rbenv local 1.9.3-p547\n"
"$ bundle install [--path vendor/bundle]\n"
"$ rbenv local 2.0.0-p576\n"
"$ bundle install [--path vendor/bundle]\n"
"$ rbenv local 2.1.3\n"
"$ bundle install [--path vendor/bundle]\n"
"```"
msgstr ""

msgid "### rake-compiler"
msgstr ""

msgid ""
"```bash\n"
"$ rbenv local 1.9.3-p547\n"
"$ bundle exec rake-compiler cross-ruby HOST=i686-w64-mingw32 VERSION=1.9.3-p54"
"7 [EXTS=--without-extensions]\n"
"$ bundle exec rake-compiler cross-ruby HOST=x86_64-w64-mingw32 VERSION=1.9.3-p"
"547 [EXTS=--without-extensions]\n"
"$ rbenv local 2.0.0-p576\n"
"$ bundle exec rake-compiler cross-ruby HOST=i686-w64-mingw32 VERSION=2.0.0-p57"
"6 [EXTS=--without-extensions]\n"
"$ bundle exec rake-compiler cross-ruby HOST=x86_64-w64-mingw32 VERSION=2.0.0-p"
"576 [EXTS=--without-extensions]\n"
"[$ rbenv local 2.1.3]\n"
"$ bundle exec rake-compiler cross-ruby HOST=i686-w64-mingw32 VERSION=2.1.3 [EX"
"TS=--without-extensions]\n"
"$ bundle exec rake-compiler cross-ruby HOST=x86_64-w64-mingw32 VERSION=2.1.3 ["
"EXTS=--without-extensions]\n"
"```"
msgstr ""

msgid "### cross compile"
msgstr ""

msgid ""
"```bash\n"
"$ rbenv local 1.9.3-p547\n"
"$ bundle exec rake:build\n"
"$ bundle exec rake RUBY_CC_VERSION=1.9.3:2.0.0:2.1.3 cross clean native gem\n"
"$ bundle exec rake clean:groonga\n"
"$ bundle exec rake RUBY_CC_VERSION=1.9.3:2.0.0:2.1.3 cross RROONGA_USE_GROONGA"
"_X64=true clean native gem\n"
"```"
msgstr ""

msgid "# Install"
msgstr "# インストール"

msgid "This document describes how to install Rroonga."
msgstr "Rroongaのインストール方法について説明します。"

msgid ""
"You can install Rroonga by RubyGems. It is the standard way for Ruby\n"
"libraries."
msgstr "RroongaはRubyライブラリの基本的なインストール方法であるRubyGems経由でインストールすることができます。"

msgid ""
"Rroonga is depends on Groonga. So you need to install both Groonga and\n"
"Rroonga. You can't install Groonga by RubyGems because it isn't Ruby\n"
"library. But don't worry. Rroonga provides the following options for\n"
"easy to install:"
msgstr ""
"RroongaはGroongaに依存しているため、GroongaとRroongaの両方をインストールする必要があります。GroongaはRubyライブラリで"
"はないためRubyGemsからインストールすることができません。でも大丈夫です。Rroongaは簡単にインストールする方法を提供しています。"

msgid ""
"* Rroonga downloads, builds and installs Groonga automatically. You\n"
"  don't need to do them explicitly.\n"
"* Rroonga uses Groonga installed by your packaging system."
msgstr ""
"* Rroongaと一緒に自動でGroongaをインストールする方法\n"
"* Groongaのバイナリパッケージを事前にインストールする方法"

msgid "The following sections describe the above in detail."
msgstr "以下で詳しい方法を説明します。"

msgid "## Install with auto Groonga build"
msgstr "## Groongaの自動ビルド付きでインストール"

msgid ""
"Rroonga searches Groonga on install. If Rroonga can't find Groonga,\n"
"Rroonga downloads, builds and installs Groonga automatically."
msgstr "Rroongaインストール時にGroongaを探します。Groongaが見つからなかった場合にダウンロード、ビルド、インストールが自動的に行われます。"

msgid ""
"Type the following command to install Rroonga and Groonga. You don't\n"
"need to install Groonga explicitly:"
msgstr "以下のコマンドでRroongaとGroongaがインストールされます。明示的にGroongaをインストールする必要はありません。"

msgid "    % gem install rroonga"
msgstr ""

msgid "## Install with Groonga package"
msgstr "## Groongaパッケージを別途インストール"

msgid ""
"You can use Groonga package on you packaging system instead of building\n"
"Groonga by yourself. There are the following advantages for this option:"
msgstr "自力でGroongaをビルドする代わりに各環境のパッケージシステムのGroongaパッケージを使うことができます。以下の時に便利です:"

msgid ""
"* It reduces installation time.\n"
"* It doesn't fail on building Groonga."
msgstr ""
"* インストール時間を短縮したい\n"
"* Groongaのビルドに失敗する"

msgid "### Windows"
msgstr ""

msgid ""
"Rroonga gem for Windows includes both pre-compiled Rroonga and Groonga\n"
"in the gem. So what you need to do is you just install rroonga gem."
msgstr ""
"Windows用のRrroonga gemには事前にコンパイルされたRroongaとGroongaが両方入っています。そのため、以下のコマンドを実行するだけ"
"でインストールできます。"

msgid "Type the following command on Ruby console:"
msgstr "以下のコマンドを入力して下さい。"

msgid "    > gem install rroonga"
msgstr ""

msgid ""
"This document assumes that you're using [RubyInstaller for\n"
"Windows](http://rubyinstaller.org/) ."
msgstr "このドキュメントでは [RubyInstaller for Windows](http://rubyinstaller.org/) を想定しています。"

msgid "### OS X"
msgstr ""

msgid "There are Groonga packages for OS X environment."
msgstr "OS X環境用のGroongaパッケージがあります。"

msgid "#### MacPorts"
msgstr ""

msgid ""
"If you're using [MacPorts](http://www.macports.org/) , type the\n"
"following\n"
"commands on your terminal:"
msgstr "[MacPorts](http://www.macports.org/) を使っている人は以下のコマンドを入力して下さい。"

msgid ""
"    % sudo port install groonga\n"
"    % sudo gem install rroonga"
msgstr ""

msgid "#### Homebrew"
msgstr ""

msgid ""
"If you're using [Homebrew](http://brew.sh/) , type the following\n"
"commands\n"
"on your terminal:"
msgstr "[Homebrew](http://brew.sh/) を使っている人は以下のコマンドを入力して下さい。"

msgid ""
"    % brew install groonga\n"
"    % gem install rroonga"
msgstr ""

msgid "### Debian GNU/Linux"
msgstr ""

msgid ""
"You can install the Groonga package by apt. See [Groonga\n"
"documentation](http://groonga.org/docs/install/debian.html) how to set\n"
"apt-line up."
msgstr ""
"aptを使ってGroongaパッケージをインストールすることができます。[Groongaのドキュメント](http://groonga.org/ja/doc"
"s/install/debian.html) にapt-lineの設定があります。"

msgid ""
"Type the following commands on your terminal after you finish to set\n"
"apt-line up."
msgstr "apt-lineの設定が終わったら、ターミナル上で以下のコマンドを実行して下さい。"

msgid ""
"    % sudo apt-get install -y libgroonga-dev\n"
"    % sudo gem install rroonga"
msgstr ""

msgid "### Ubuntu"
msgstr ""

msgid ""
"You can install the Groonga package by apt. See [Groonga\n"
"documentation](http://groonga.org/docs/install/ubuntu.html) how to set\n"
"apt-line up."
msgstr ""
"aptを使ってGroongaパッケージをインストールすることができます。[Groongaのドキュメント](http://groonga.org/ja/doc"
"s/install/ubuntu.html) にapt-lineの設定があります。"

msgid "### CentOS"
msgstr ""

msgid ""
"You can install the Groonga package by yum. See [Groonga\n"
"documentation](http://groonga.org/docs/install/centos.html) how to set\n"
"yum repository up."
msgstr ""
"yumを使ってGroongaパッケージをインストールすることができます。[Groongaのドキュメント](http://groonga.org/ja/doc"
"s/install/centos.html) にyumレポジトリの設定があります。"

msgid ""
"But you need to install Ruby 1.9.3 or later by yourself. Both CentOS 5\n"
"and 6 ship Ruby 1.8. Rroonga doesn't support Ruby 1.8."
msgstr ""
"事前にRuby 1.9.3 以降をインストールして下さい。CentOS 5 と 6 はRuby 1.8 で動いていますが、RroongaはRuby 1.8 "
"をサポートしません。"

msgid ""
"Type the following commands on your terminal after you finish to set\n"
"yum\n"
"repository up and installing Ruby 1.9.3 or later."
msgstr "yumレポジトリの設定とRuby 1.9.3 以降のインストールが終わったら、ターミナル上で以下のコマンドを実行して下さい。"

msgid ""
"    % sudo yum install groonga-devel -y\n"
"    % gem install rroonga"
msgstr ""

msgid "### Fedora"
msgstr ""

msgid ""
"You can install the Groonga package by yum. The Groonga package is\n"
"included in the official Fedora repository."
msgstr ""
"yumを使ってRroongaをインストールすることができます。\n"
"Groongaパッケージは公式のFedoraレポジトリに含まれています。"

msgid ""
"    % sudo yum install groonga-devel -y\n"
"    % sudo gem install rroonga"
msgstr ""

msgid "## Links"
msgstr "## リンク"

msgid "* [2. Install - Groonga documentation](http://groonga.org/docs/install.html)"
msgstr "* [2. インストール - Groonga ドキュメント](http://groonga.org/ja/docs/install.html)"

msgid "# NEWS"
msgstr "# お知らせ"

msgid "## 12.1.0: 2022-12-05 {#version-12-1-0}"
msgstr ""

msgid "### Fixes"
msgstr "### 修正"

msgid ""
"  * [{Groonga::PatriciaTrie}] Fixed a bug that `Groonga::PatriciaTrie#scan` re"
"turned wrong offsets if there are many hit words. [GitHub#207][Patch by Naoya"
" Murakami]"
msgstr ""
"  * [{Groonga::PatriciaTrie}] 大量のワードがヒットするとき、 `Groonga::PatriciaTrie#scan`"
" が誤ったオフセットを返却する問題を修正しました。[GitHub#207][村上さんのパッチ提供]"

msgid "### Thanks"
msgstr "### 感謝"

msgid "  * Naoya Murakami"
msgstr "  * 村上さん"

msgid "## 12.0.8: 2022-09-28 {#version-12-0-8}"
msgstr ""

msgid "### Improvements"
msgstr "### 改善"

msgid "  * Add support for creating a {Groonga::PatriciaTrie} without database."
msgstr ""

msgid "## 12.0.2: 2022-04-04 {#version-12-0-2}"
msgstr ""

msgid ""
"  * Added support for `:weight_float32` for vector column. This\n"
"    requires Groonga 12.0.2 or later."
msgstr ""

msgid "  * Removed needless `Groonga::IndexColumn#with_weight?`."
msgstr ""

msgid ""
"  * Added support for `:missing_mode` and `:invalid_mode` for scalar\n"
"    column and vector column. This requires Groonga 12.0.2 or later."
msgstr ""

msgid "## 12.0.0: 2022-02-09 {#version-12-0-0}"
msgstr ""

msgid "  * Added support for Ruby 3.1."
msgstr ""

msgid "## 11.0.6: 2021-09-24 {#version-11-0-6}"
msgstr ""

msgid ""
"  * Installed Groonga automatically when native package isn't\n"
"    installed automatically.\n"
"    [GitHub#204][Patch by skawaji]"
msgstr ""

msgid "  * skawaji"
msgstr ""

msgid "## 11.0.0: 2021-02-09 {#version-11-0-0}"
msgstr ""

msgid "  * {Groonga::ConnectionReset} Added."
msgstr ""

msgid "  * {Groonga::Context.open} Added."
msgstr ""

msgid "  * Added support for Ractor."
msgstr ""

msgid "  * {Groonga::Database} Accept path like object in .open/.create."
msgstr ""

msgid "## 10.0.6: 2020-09-01 {#version-10-0-6}"
msgstr ""

msgid "  * Fixed a bug that failed `gem install rroonga` in Windows version."
msgstr "  * Windows版で `gem install rroonga` に失敗する問題を修正しました。"

msgid "## 10.0.2: 2020-04-29 {#version-10-0-2}"
msgstr ""

msgid "  * Added support for Float32 in Groonga 10.0.2."
msgstr ""

msgid ""
"  * [doc] Fixed markup of a image in tutorial [GitHub#192][Patched by takahash"
"im]"
msgstr ""

msgid "  * takahashim"
msgstr ""

msgid "## 10.0.1: 2020-04-02 {#version-10-0-1}"
msgstr ""

msgid "  * Added support for creating a table with normalizer with options"
msgstr ""

msgid "  * Windows: Added Ruby 2.7 support."
msgstr ""

msgid "  * Windows: Dropped Ruby 2.3."
msgstr ""

msgid "    * This version has been EOL."
msgstr ""

msgid "  * Dropped fat gem support."
msgstr ""

msgid "## 9.0.7: 2019-08-29 {#version-9-0-7}"
msgstr ""

msgid "  * {Groonga::Object#lexicon?} Added."
msgstr ""

msgid "  * {Groonga::IndexColumn} Added support \"INDEX_LARGE\"."
msgstr ""

msgid "  * {Groonga::IndexCursor#set_min?} Added."
msgstr ""

msgid "  * {Groonga::IndexCursor#set_min=} Added."
msgstr ""

msgid "  * {Groonga::Context#force_match_escalation?} Added."
msgstr ""

msgid "  * {Groonga::Context#force_match_escalation=} Added."
msgstr ""

msgid "  * {Groonga::Object#id_accessor?} Added."
msgstr ""

msgid "  * {Groonga::Logger.flags} Added support for thread id option."
msgstr ""

msgid "  * {Groonga::Object#bulk?} Added."
msgstr ""

msgid "  * {Groonga::Object#value_accessor?} Added."
msgstr ""

msgid ""
"  * {Groonga::Table} Delegate support_score? from Groonga::Record to Groonga::"
"Table."
msgstr ""

msgid "  * Groonga::Flashable Added support dependent option."
msgstr ""

msgid "  * {Groonga::Object#score_accessor?} Added."
msgstr ""

msgid "  * {Groonga::Object#nsubrecs_accessor? } Added."
msgstr ""

msgid "  * Translate a part of explanation of Groonga::Table into English."
msgstr ""

msgid "## 9.0.3: 2019-05-10 {#version-9-0-3}"
msgstr ""

msgid "  * Windows: Added Ruby 2.6 support."
msgstr ""

msgid "## 9.0.2: 2019-05-10 {#version-9-0-2}"
msgstr ""

msgid "  * Disable groonga-httpd by default."
msgstr ""

msgid ""
"  * Added support for \"--with-groonga-configure-options\".\n"
"    [GitHub#146][Reported by Tomás Pollak]"
msgstr ""

msgid ""
"  * Groonga::RegexpExpressionBuilder: Added support (?-mix:XXX) for searching "
"of regular expression.\n"
"    [groonga-dev,04694][Reported by Masatoshi SEKI]"
msgstr ""

msgid "  * Use \"groonga-latest.tar.gz\" for build Groonga."
msgstr ""

msgid "  * {Groonga::Schema#create_lexicon}: Added."
msgstr ""

msgid "  * Tomás Pollak"
msgstr ""

msgid "  * Masatoshi SEKI"
msgstr ""

msgid "## 7.1.1: 2018-01-30 {#version-7-1-1}"
msgstr ""

msgid "  * Added Groonga 7.1.1 support. Groonga 7.1.0 or older aren't supported."
msgstr "  * Groonga 7.1.1をサポートしました。Groonga 7.1.0以前はサポートしません。"

msgid "  * Added Apache Arrow support:"
msgstr ""

msgid "    * {Groonga::Table#load_arrow}"
msgstr ""

msgid "    * {Groonga::Table#dump_arrow}"
msgstr ""

msgid ""
"  * Windows: Added Ruby 2.4 or later support.\n"
"    [groonga-dev,04565][Reported by ongaeshi]"
msgstr ""

msgid "  * {Groonga::ColumnCache}: Added."
msgstr ""

msgid "  * {Groonga::Expression#parse}: Added `:no_syntax_error` option."
msgstr ""

msgid "  * {Groonga::Context#support_arrow?}: Added."
msgstr ""

msgid "  * {Groonga::Procedure#stable?}: Added."
msgstr ""

msgid "  * {Groonga::Array}: Removed queue support."
msgstr ""

msgid "  * {Groonga::QueryLogger.flags}: Added."
msgstr ""

msgid "  * {Groonga::QueryLogger.flags=}: Added."
msgstr ""

msgid "  * {Groonga::Object#corrupt?}: Added."
msgstr ""

msgid "  * {Groonga::Object#disk_usage}: Added."
msgstr ""

msgid "  * naofumi-fujii"
msgstr ""

msgid "  * ongaeshi"
msgstr "  * おんがえしさん"

msgid "## 7.0.2: 2017-04-29 {#version-7-0-2}"
msgstr ""

msgid "  * Supported Groonga 7.0.2. Groonga 7.0.1 or older aren't supported."
msgstr ""

msgid ""
"  * {Groonga::IndexColumn#open_cursor}: Supported opening a cursor by\n"
"    token."
msgstr ""

msgid "  * {Groonga::IndexColumn#[]}: Supported a token."
msgstr ""

msgid "  * {Groonga::InvertedIndexCursor#closed?}: Added."
msgstr ""

msgid "  * {Groonga::Table::KeySupport#key?}: Added."
msgstr ""

msgid ""
"  * {Groonga::Table::KeySupport#has_key?}: Deprecated. Use\n"
"    {Groonga::Table::KeySupport#key?} instead."
msgstr ""

msgid "  * {Groonga::DataColumn#apply_window_function}: Supported `:group_keys`."
msgstr ""

msgid "  * {Groonga::Column#weight_vector?}: Added."
msgstr ""

msgid "  * {Groonga::DataColumn#apply_expression}: Added."
msgstr ""

msgid "  * {Groonga::Column#data?}: Added."
msgstr ""

msgid "  * {Groonga::DefaultCache}: Added."
msgstr ""

msgid "## 6.1.3: 2017-01-12 {#version-6-1-3}"
msgstr ""

msgid "  * Supported Groonga 6.1.3. Groonga 6.1.0 or older aren't supported."
msgstr "  * Groonga 6.1.3をサポートしました。Groonga 6.1.0以前はサポートしません。"

msgid "  * Added {Groonga::Context#support_zstd?}."
msgstr "  * {Groonga::Context#support_zstd?}を追加しました。"

msgid "  * Added {Groonga::ZstdError}."
msgstr "  * {Groonga::ZstdError}を追加しました。"

msgid ""
"  * Supported Zstandard compression.\n"
"    If Zstandard is available in your enviromemt, you can use Zstandard\n"
"    compression for columns. How to use:"
msgstr ""
"  * Zstandardによる圧縮をサポートしました。\n"
"    Zstandardが有効になっている環境の場合、Zstandardによってカラムを圧縮できます。\n"
"  使い方:"

msgid ""
"          Groonga::Schema.define do |schema|\n"
"            schema.create_table(\"Posts\") do |table|\n"
"              table.short_text(\"title\", :compress => :zstandard)\n"
"              # shortened form\n"
"              # table.short_text(\"title\", :compress => :zstd)\n"
"            end\n"
"          end"
msgstr ""

msgid "  * Added PID for {Groonga::Logger::Flags}."
msgstr "  * {Groonga::Logger::Flags}にPIDを追加しました。"

msgid "  * Added {Groonga::Logger.flags}."
msgstr "  * {Groonga::Logger.flags}を追加しました。"

msgid "  * Added {Groonga::Logger.flags=}."
msgstr "  * {Groonga::Logger.flags=}を追加しました。"

msgid "## 6.1.0: 2016-11-07 {#version-6-1-0}"
msgstr ""

msgid ""
"  * {Groonga::Table#define_index_column}: Added `:size` option to\n"
"    support small or medium size of index column. Specify `:small` or\n"
"    `:medium` to customize it."
msgstr ""
"  * {Groonga::Table#define_index_column}: 小さなサイズや中サイズのインデックスカラムを作成するために `:size"
"` オプションをサポートしました。 このオプションには `:small` や `:medium` を指定します。"

msgid "## 6.0.9: 2016-10-07 {#version-6-0-9}"
msgstr ""

msgid ""
"  * Supported Groonga 6.0.9. Groonga 6.0.8 or older aren't supported.\n"
"  * {Groonga::Database#remove_force}: Added a new method that removes\n"
"    broken object.\n"
"  * {Groonga::ID.builtin_type?}: Added a new predicate method that checks\n"
"    whether the given ID is ID for builtin_type object or not."
msgstr ""
"  * Groonga 6.0.9をサポートしました。Groonga 6.0.8以前はサポートしません。\n"
"  * {Groonga::Database#remove_force}: 壊れたオブジェクトを削除するメソッドを追加しました。\n"
"  * {Groonga::ID.builtin_type?}: 組み込み型かどうかチェックする述語メソッドを追加しました。"

msgid "## 6.0.7: 2016-08-13 {#version-6-0-7}"
msgstr ""

msgid "  * Supported Groonga 6.0.7. Groonga 6.0.5 or older aren't supported."
msgstr "  * Groonga 6.0.7をサポートしました。Groonga 6.0.5以前はサポートしません。"

msgid ""
"  * Improved integration with libraries that uses `at_exit` such as\n"
"    test-unit."
msgstr ""

msgid "  * {Groonga::FixSizeColumn#inspect}: Fixed wrong flags."
msgstr ""

msgid "  * {Groonga::VariableSizeColumn#inspect}: Fixed wrong flags."
msgstr ""

msgid "## 6.0.5: 2016-07-15 {#version-6-0-5}"
msgstr ""

msgid "  * Supported Groonga 6.0.5. Groonga 6.0.4 or older aren't supported."
msgstr "  * Groonga 6.0.5をサポートしました。Groonga 6.0.4以前はサポートしません。"

msgid ""
"  * {Groonga::ID}: Added a module that provided object ID related\n"
"    features."
msgstr ""

msgid ""
"  * {Groonga::ID.builtin?}: Added a new predicate method that checks\n"
"    whether the given ID is ID for builtin object or not."
msgstr ""

msgid "  * {Groonga::ID::NIL}: Added a new constant that represents invalid ID."
msgstr ""

msgid "  * {Groonga::ID::MAX}: Added a new constant that represents the maximum ID."
msgstr ""

msgid ""
"  * {Groonga::Name}: Added a new module that provides object name\n"
"    related features."
msgstr ""

msgid ""
"  * {Groonga::Name.column?}: Added a new predicate method that checks\n"
"    whether the given name is column object name or not."
msgstr ""

msgid "  * {Groonga::Object#column?}: Added a new predicate for column."
msgstr ""

msgid ""
"  * {Groonga::Object#reference_column?}: Added a new predicate for\n"
"    column that uses table as value type."
msgstr ""

msgid ""
"  * {Groonga::Object#index_column?}: Added a new predicate for\n"
"    index column."
msgstr ""

msgid ""
"  * {Groonga::Object#touch}: Added a new method that updates the last\n"
"    modified time of the object."
msgstr ""

msgid ""
"  * {Groonga::Object#last_modified}: Added a new method that returns\n"
"    the last modified time of the object."
msgstr ""

msgid ""
"  * {Groonga::Object#dirty?}: Added a new method that checks whether\n"
"    the object is changed after the last flush."
msgstr ""

msgid "## 6.0.4: 2016-06-14 {#version-6-0-4}"
msgstr ""

msgid "  * Supported Groonga 6.0.4. Groonga 6.0.3 or older aren't supported."
msgstr "  * Groonga 6.0.4をサポートしました。Groonga 6.0.3以前はサポートしません。"

msgid "  * {Groonga::WindowFunctionError}: Added a new error class."
msgstr ""

msgid ""
"  * {Groonga::ProcedureType::WINDOW_FUNCTION}: Added a new procedure\n"
"    type for window function."
msgstr ""

msgid ""
"  * {Groonga::Object#window_function_procedure?}: Added a new\n"
"    predicate for window function."
msgstr ""

msgid ""
"  * {Groonga::DataColumn#apply_window_function}: Added a new\n"
"    method to apply a window function."
msgstr ""

msgid "## 6.0.2: 2016-05-18 {#version-6-0-2}"
msgstr ""

msgid "  * Supported Groonga 6.0.2. Groonga 6.0.1 or older aren't supported."
msgstr "  * Groonga 6.0.2をサポートしました。Groonga 6.0.1以前はサポートしません。"

msgid "  * {Groonga::Table#select}: Supported nested array as conditions."
msgstr ""

msgid ""
"  * Supported HTTP proxy with authentication on install.\n"
"    [GitHub#129] [Patch by ngram]"
msgstr ""

msgid "  * {Groonga::Cancel}: Added a new error class."
msgstr ""

msgid "  * {Groonga::Table#select}: Supported passing Hash as function argument."
msgstr ""

msgid ""
"  * {Groonga::Hash.create}: Added `:key_large` option to create hash\n"
"    table that supports 1TiB total key size."
msgstr ""

msgid ""
"  * {Groonga::Type#text_family?}: Added a new predicate that returns\n"
"    `true` for `ShortText`, `Text` and `LongText` types."
msgstr ""

msgid ""
"  * {Groonga::Type#number_family?}: Added a new predicate that returns\n"
"    `true` for `UInt8`, `Int8`, ..., `UInt64`, `Int64` and `Float`\n"
"    types."
msgstr ""

msgid ""
"  * {Groonga::Type#builtin?}: Added a new predicate that returns\n"
"    `true` for builtin types such as `Int32`."
msgstr ""

msgid ""
"  * {Groonga::Object#remove}: Added `:dependent` option to remove all\n"
"    tables and columns that depend on the object."
msgstr ""

msgid ""
"  * {Groonga::RequestCanceler}: Added an interface that cancels one or\n"
"    more requests."
msgstr ""

msgid ""
"  * {Groonga::RequestTimer}: Added an interface that provides request\n"
"    timeout feature."
msgstr ""

msgid "## 6.0.0: 2016-03-06 {#version-6-0-0}"
msgstr ""

msgid "  * Supported Groonga 6.0.0. Groonga 5.1.2 or older aren't supported."
msgstr "  * Groonga 6.0.0をサポートしました。Groonga 5.1.2以前はサポートしません。"

msgid "  * Supported `-` operator as {Groonga::Operator::AND_NOT}."
msgstr "  * {Groonga::Operator::AND_NOT}のオペレーターとして`-`をサポートしました。"

msgid ""
"  * `grndump`: Added `:max_records` option.\n"
"    [Patch by Genki Takiuchi]"
msgstr ""
"  * `grndump`: `:max_records`オプションを追加しました。\n"
"    [Genki Takiuchiさんがパッチ提供]"

msgid ""
"  * {Groonga::Table#select}: Supported integer and time as function\n"
"    call arguments."
msgstr "  * {Groonga::Table#select}: 関数呼び出しの引数に数値・時刻を指定できるようになりました。"

msgid ""
"  * {Groonga::Table#select}: Disabled auto conversion to record ID\n"
"    from number object in condition block. If you want to specify\n"
"    record ID as right hand side value, you need to pass\n"
"    {Groonga::Record}. The number object is treated as key not ID from\n"
"    this release. Because we couldn't specify Int/UInt family type key\n"
"    as number object. The number object was always treated as ID not\n"
"    key."
msgstr ""
"  * {Groonga::Table#select}: 条件ブロック内で数値オブジェクトを自動でレコードIDに変換することをやめました。右辺値としてレコー"
"ドIDを指定したい場合は、{Groonga::Record}オブジェクトを渡してください。このリリースから数値オブジェクトをIDではなくキーとして扱います。"
"なぜなら、過去のリリースでは数値オブジェクトをInt/UInt関連の型のキーとして指定できなかったからです。数値オブジェクトは常にキーではなくIDとして扱わ"
"れていました。"

msgid ""
"    It's backward incompatible change but we introduced the\n"
"    change. Because we marked this behavior as a bug."
msgstr "    これは非互換な変更ですがこの変更をいれました。それは、この動作はバグと判断したためです。"

msgid ""
"  * Supported `require \"rroonga\"` for `Bundler.require`.\n"
"    [Patch by Fumiaki MATSUSHIMA]"
msgstr ""
"  * `Bundler.require`のために`require \"rroonga\"`をサポートしました。\n"
"    [Fumiaki MATSUSHIMAさんがパッチ提供]"

msgid "  * Added {Groonga::Plugin.names}."
msgstr "  * {Groonga::Plugin.names}を追加しました。"

msgid "  * Added {Groonga::Config#delete}."
msgstr "  * {Groonga::Config#delete}を追加しました。"

msgid "  * Added {Groonga::Config#each}."
msgstr "  * {Groonga::Config#each}を追加しました。"

msgid "  * Added {Groonga::Index}. It has index column and section."
msgstr "  * {Groonga::Index}を追加しました。これはインデックスカラムとセクションを含みます。"

msgid ""
"  * Added {Groonga::Column#find_indexes}.\n"
"    It returns an array of {Groonga::Index}."
msgstr ""
"  * {Groonga::Column#find_indexes}を追加しました。\n"
"    これは{Groonga::Index}の配列を返します。"

msgid ""
"  * Mark {Groonga::Column#indexes} as deprecated.\n"
"    Use {Groonga::Column#find_indexes} instead."
msgstr ""
"  * {Groonga::Column#indexes}を非推奨にしました。\n"
"    代わりに{Groonga::Column#find_indexes}を使ってください。"

msgid "  * Added {Groonga.error_message}."
msgstr "  * {Groonga.error_message}を追加しました。"

msgid ""
"  * Supported method style function call in {Groonga::Table#select}\n"
"    block. It's Rubyish API."
msgstr "  * {Groonga::Table#select}のブロック内でメソッドスタイルの関数呼び出しをサポートしました。これはRubyらしいAPIです。"

msgid "    Example:"
msgstr "    例:"

msgid ""
"        @shops.select do |record|\n"
"          record.location.geo_in_rectangle(\"35.7185,139.7912\",\n"
"                                           \"35.7065,139.8069\")\n"
"        end"
msgstr ""

msgid "  * Genki Takiuchi"
msgstr "  * Genki Takiuchiさん"

msgid "  * Fumiaki MATSUSHIMA"
msgstr "  * Fumiaki MATSUSHIMAさん"

msgid "## 5.1.1: 2016-01-18 {#version-5-1-1}"
msgstr ""

msgid ""
"  * Supported Groonga 5.1.1. Groonga 5.0.9 or older aren't supported.\n"
"  * Supported accessor in {Groonga::Table#geo_sort}.\n"
"  * Improved performance of searching with empty condition.\n"
"  * Added {Groonga::Object#accessor?}.\n"
"  * Added {Groonga::Object#key_accessor?}.\n"
"  * Added {Groonga::Database#reindex}.\n"
"  * Added {Groonga::Table::KeySupport#reindex}.\n"
"  * Added {Groonga::FixSizeColumn#reindex}.\n"
"  * Added {Groonga::VariableSizeColumn#reindex}.\n"
"  * Added {Groonga::IndexColumn#reindex}.\n"
"  * Added {Groonga.package_label}.\n"
"  * Renamed {Groonga::Conf} to {Groonga::Config}.\n"
"  * Renamed {Groonga::Context#conf} to {Groonga::Context#config}."
msgstr ""

msgid "## 5.0.9: 2015-11-10 {#version-5-0-9}"
msgstr ""

msgid ""
"  * Supported Groonga 5.0.9. Groonga 5.0.8 or older aren't supported.\n"
"  * Added {Groonga::Context#conf} that returns {Groonga::Conf}.\n"
"  * Added {Groonga::Conf#[]} that returns a database level configuration value"
".\n"
"  * Added {Groonga::Conf#[]=} that sets a database level configuration value.\n"
"  * Added {Groonga::Table#geo_sort=} that sorts by geo point."
msgstr ""

msgid "## 5.0.8: 2015-10-07 {#version-5-0-8}"
msgstr ""

msgid ""
"  * Changed to use `gmake` preferentially for auto Groonga build.\n"
"  * Supported Groonga 5.0.8. Groonga 5.0.7 or older aren't supported.\n"
"  * Added {Groonga::Context#opened?} that checks whether object with\n"
"    the specified ID is opened or not.\n"
"  * Supported calling a function in {Groonga::Table#select} by\n"
"    `record.call(\"function\", arg1, arg2, ...)`.\n"
"  * Windows: Changed to cross compile system to\n"
"    [rake-compiler-dock](https://github.com/rake-compiler/rake-compiler-dock)\n"
"    from Vagrant based cross compile system.\n"
"    [GitHub#108] [Patch by Hiroshi Hatake]"
msgstr ""

msgid "  * Hiroshi Hatake"
msgstr ""

msgid "## 5.0.5: 2015-09-09 {#version-5-0-5}"
msgstr ""

msgid ""
"  * Supported Groonga 5.0.7. Groonga 5.0.6 or older aren't supported.\n"
"  * Added {Groonga::Object#selector_only_procedure?}.\n"
"  * Supported {Groonga::Table#open_cursor} with `:order_by => :key`\n"
"    against {Groonga::DoubleArrayTrie}.\n"
"  * Added {Groonga::Database#unmap}.\n"
"  * Added {Groonga::Thread.limit}.\n"
"  * Added {Groonga::Thread.limit=}.\n"
"  * Added {Groonga::Thread.limit_getter=}.\n"
"  * Added {Groonga::Thread.limit_setter=}.\n"
"  * Added {Groonga::WindowsEventLogger.register}.\n"
"  * Added {Groonga::Logger.max_level}.\n"
"  * Added {Groonga::Logger.max_level=}."
msgstr ""

msgid ""
"  * `grndump`: Fixed an error when `--order-by=key` is specified\n"
"    against database that has `Groonga::Array` or `Groonga::Hash`."
msgstr ""

msgid "## 5.0.4: 2015-07-13 {#version-5-0-4}"
msgstr ""

msgid ""
"  * Supported Groonga 5.0.5. Groonga 5.0.4 or older aren't supported.\n"
"  * Added {Groonga::Flushable#flush} to bind `grn_obj_flush()` and `grn_obj_fl"
"ush_recursive()`.\n"
"  * Included {Groonga::Flushable} module to {Groonga::Table}.\n"
"  * Included {Groonga::Flushable} module to {Groonga::Column}.\n"
"  * Included {Groonga::Flushable} module to {Groonga::Database}."
msgstr ""

msgid "## 5.0.3: 2015-06-10 {#version-5-0-3}"
msgstr ""

msgid ""
"  * Removed deprecated option \"rubyforge_project\" from .gemspec.\n"
"    [GitHub#95][Patch by takiy33]\n"
"  * [groonga-database-inspect] Added column value type.\n"
"  * [groonga-database-inspect] Added sources of index column.\n"
"  * [groonga-database-inspect] Added the number of sources of index column.\n"
"  * [groonga-database-inspect] Added `--log-path` option.\n"
"  * [groonga-database-inspect] Reduced memory usage.\n"
"  * [windows] Updated bundled Groonga version to 5.0.4."
msgstr ""

msgid "  * takiy33"
msgstr ""

msgid "## 5.0.2: 2015-05-18 {#version-5-0-2}"
msgstr ""

msgid ""
"  * Added {Groonga::Plugin.ruby_suffix}.\n"
"  * {Groonga::Hash} is used as the default table type when `:key_type`\n"
"    is specified in {Groonga::Schema}. {Groonga::Array} was used as\n"
"    the default table type. It's a backward incompatible change. But\n"
"    nobody will not stumped. Because `:key_type` is specified but\n"
"    `:type` isn't specified case is a bug of user's program.\n"
"  * Added {Groonga::Logger.log}.\n"
"  * Added {Groonga::Logger.rotate_threshold_size}.\n"
"  * Added {Groonga::Logger.rotate_threshold_size=}.\n"
"  * Added {Groonga::QueryLogger.log}.\n"
"  * Added {Groonga::QueryLogger.rotate_threshold_size}.\n"
"  * Added {Groonga::QueryLogger.rotate_threshold_size=}.\n"
"  * Implemented {Groonga::QueryLogger::Flags.parse}."
msgstr ""

msgid "## 5.0.1: 2015-04-14 {#version-5-0-1}"
msgstr ""

msgid ""
"  * Supported Groonga 5.0.2. Groonga 5.0.1 or older aren't supported.\n"
"  * Added {Groonga::Expression#estimate_size}.\n"
"  * Added closed check in `#encoding`. [GitHub#54] [Reported by yui-knk]\n"
"  * [windows] Supported Ruby 2.2.\n"
"  * Supported `Groonga::Normalizer.normalize(\"\")`. [GitHub#55]\n"
"    [Reported by Tasuku SUENAGA]\n"
"  * Added {Groonga::ScorerError}.\n"
"  * Added shortcuts for `TokenRegexp` to `Groonga::Schema`.\n"
"  * Added {Groonga::Operator::REGEXP}.\n"
"  * Added {Groonga::Plugin.unregister}.\n"
"  * Added {Groonga::Context#unregister_plugin}.\n"
"  * Changed {Groonga::Operator} to class from module. It's a backward\n"
"    incompatible change but nobody will not be effected.\n"
"  * Removed unused `:id` option from the followings:\n"
"    * {Groonga::Column#clear_lock}\n"
"    * {Groonga::Column#locked?}\n"
"    * {Groonga::Table#clear_lock}\n"
"    * {Groonga::Table#locked?}\n"
"  * Added {Groonga::EqualOperator#exec}.\n"
"  * Added {Groonga::NotEqualOperator#exec}.\n"
"  * Added {Groonga::LessOperator#exec}.\n"
"  * Added {Groonga::GreaterOperator#exec}.\n"
"  * Added {Groonga::LessEqualOperator#exec}.\n"
"  * Added {Groonga::GreaterEqualOperator#exec}.\n"
"  * Added {Groonga::MatchOperator#exec}.\n"
"  * Added {Groonga::PrefixOperator#exec}.\n"
"  * Added {Groonga::RegexpOperator#exec}.\n"
"  * Added {Groonga::ProcedureType::TOKEN_FILTER}.\n"
"  * Added {Groonga::ProcedureType::SCORER}.\n"
"  * Added {Groonga::Operator#to_s}.\n"
"  * Supported {Groonga::IndexColumn#estimate_size} against query.\n"
"  * Supported {Groonga::IndexColumn#estimate_size} against lexicon cursor.\n"
"  * Added {Groonga::Object#table?}.\n"
"  * Added {Groonga::Object#procedure?}.\n"
"  * Added {Groonga::Object#function_procedure?}.\n"
"  * Added {Groonga::Object#selector_procedure?}.\n"
"  * Added {Groonga::Object#scorer_procedure?}.\n"
"  * Supported regular expression in {Groonga::Table#select} block."
msgstr ""

msgid ""
"  * yui-knk\n"
"  * Tasuku SUENAGA"
msgstr ""

msgid "## 5.0.0: 2015-02-16 {#version-5-0-0}"
msgstr ""

msgid ""
"* Supported Groonga 5.0.0. Groonga 4.1.1 or older aren't supported.\n"
"* Added flags for {Groonga::Normalizer.normalize}.\n"
"  [GitHub#44] [Patch by Tasuku SUENAGA a.k.a. gunyarakun]"
msgstr ""

msgid ""
"      Groonga::Normalizer.normalize(\"AbC Def　gh\")                         #=> "
"\"abcdefgh\"\n"
"      Groonga::Normalizer.normalize(\"AbC Def　gh\", :remove_blank => true)  #=> "
"\"abcdefgh\"\n"
"      Groonga::Normalizer.normalize(\"AbC Def　gh\", :remove_blank => false) #=> "
"\"abc def gh\""
msgstr ""

msgid ""
"* Supported drilldown by multiple keys in {Groonga::Table#group}.\n"
"* Supported calculation for drilldown in {Groonga::Table#group}."
msgstr ""

msgid "* Tasuku SUENAGA a.k.a. gunyarakun"
msgstr ""

msgid "## 4.0.8: 2015-01-08 {#version-4-0-8}"
msgstr ""

msgid ""
"* Supported Groonga 4.0.9. Groonga 4.0.8 or older aren't supported.\n"
"* Added {Groonga::Column#truncate}. [GitHub#41] [Patch by Hiroshi Hatake]\n"
"* Added {Groonga::Database#recover}."
msgstr ""

msgid "* Fixed a typo in {Groonga::GeoPoint#==}."
msgstr ""

msgid "* Hiroshi Hatake"
msgstr ""

msgid "## 4.0.7: 2014-12-12 {#version-4-0-7}"
msgstr ""

msgid ""
"* Supported Groonga 4.0.8. Groonga 4.0.7 or older aren't supported.\n"
"* Added `:reuse_posting_object` option to\n"
"  {Groonga::IndexCursor#each}. The option improves performance by\n"
"  reducing memory allocation. The option is disabled by default because\n"
"  reusing the same object isn't Rubyish.\n"
"* Added {Groonga::IndexColumn#estimate_size}. [GitHub#38]\n"
"* Accepted string for integer, unsigned integer and float type key."
msgstr ""

msgid "## 4.0.6: 2014-11-06 {#version-4-0-6}"
msgstr ""

msgid ""
"* Supported Groonga 4.0.7. [GitHub#28]\n"
"  * Changed {Groonga::Context#support_lzo?} always returns `false`.\n"
"  * Added {Groonga::Context#support_lz4?}.\n"
"  * Supported `:lz4` in {Groonga::Table#define_column} options.\n"
"  * Supported `:lz4` in {Groonga::VariableSizeColumn#compressed?} options.\n"
"  * Added {Groonga::LZ4Error}.\n"
"  * [grndump] Supported `COMPRESS_ZLIB` and `COMPRESS_LZ4` flags.\n"
"  * Added {Groonga::Table::KeySupport#token_filters}.\n"
"  * Added {Groonga::Table::KeySupport#token_filters=}.\n"
"  * Supported `:token_filters` in {Groonga::Hash.create} options.\n"
"  * Supported `:token_filters` in {Groonga::PatriciaTrie.create} options.\n"
"  * Supported `:token_filters` in {Groonga::DoubleArrayTrie.create} options.\n"
"  * Supported `:token_filters` in {Groonga::Schema.create_table} options.\n"
"  * Added {Groonga::TokenFilterError}.\n"
"  * [grndump] Supported token filters.\n"
"* Added {Groonga::Expression#keywords}. [GitHub#30]\n"
"* Stopped to require logger object as the first argument of\n"
"  {Groonga::Logger.register} when block is specified."
msgstr ""

msgid ""
"* [doc] Removed deprecated example.\n"
"  [GitHub#26] [Patch by ongaeshi]\n"
"* Fixed a bug that a column assignment raises an error when\n"
"  you assign value with type A and then assign value type B again.\n"
"  [GitHub#27] [Patch by Daisuke Goto]\n"
"* Fixed a memory leak in {Groonga::PatriciaTrie#open_near_cursor}.\n"
"* Fixed a bug that you can access a column renamed by\n"
"  {Groonga::Column#rename} with old name.\n"
"  [GitHub#29] [Patch by Daisuke Goto]\n"
"* [doc] Fixed wrong option name of {Groonga::Logger.register}."
msgstr ""

msgid ""
"* ongaeshi\n"
"* Daisuke Goto"
msgstr ""

msgid "## 4.0.5: 2014-10-05 {#version-4-0-5}"
msgstr ""

msgid ""
"* [windows] Added cross build task.\n"
"* Added {Groonga::DoubleArrayTrie#update}.\n"
"  [GitHub#24] [Patch by Masafumi Yokoyama]\n"
"* Added {Groonga::Record#rename}.\n"
"* [windows] Disabled debug flags."
msgstr ""
"* [windows] クロスビルド用タスクを追加。\n"
"* {Groonga::DoubleArrayTrie#update} を追加。\n"
"  [GitHub#24] [Masafumi Yokoyamaさんがパッチ提供]\n"
"* {Groonga::Record#rename} を追加。\n"
"* [windows] デバッグフラグを無効にした。"

msgid ""
"* Added `:id => true` option to {Groonga::Table::KeySupport#delete}.\n"
"  `Groonga::Table::KeySupport#delete` accepts both ID and key. If passed\n"
"  value is integer, it is handled as ID. But we can use `Int32` as key.\n"
"  In the case, we can't delete a record by key. Therefore, we added\n"
"  `Groonga::Table::KeySupport#delete(id, :id => true)` API. It introduces\n"
"  a backward incompatibility, but it is OK because the current API is a\n"
"  bug."
msgstr ""
"* {Groonga::Table::KeySupport#delete}に `:id => true` オプションを追加。`Groonga::Table:"
":KeySupport#delete` はIDとキーの両方を受け入れていて、数値が渡されたときはIDとして扱われます。しかし、キーには数値も使えます。その場"
"合、キーによる削除ができません。そこで、 `Groonga::Table::KeySupport#delete(id, :id => true)` というA"
"PIを追加しました。この変更は後方互換性がありませんが、現在のAPIはバグなので許容します。"

msgid "* Masafumi Yokoyama"
msgstr "* Masafumi Yokoyamaさん"

msgid "## 4.0.4: 2014-08-29 {#version-4-0-4}"
msgstr ""

msgid ""
"* Supported Groonga 4.0.4 or later. Groonga 4.0.3 or older are not supported.\n"
"* Added {Groonga::ProcedureType} that has constants as GRN_PROC_XXX.\n"
"* Added {Groonga::Procedure#type} as grn_proc_get_type()."
msgstr ""

msgid ""
"      procedure = Groonga[\"TokenBigram\"]\n"
"      p procedure.type == Groonga::ProcedureType::TOKENIZER  #=> true"
msgstr ""

msgid ""
"* Avoided a crash when {Groonga::Record#inspect} is called on exit.\n"
"  [GitHub#18] [Reported by Ippei Obayashi]\n"
"* Updated Free Software Foundation address. [Masafumi Yokoyama]\n"
"* Supported reference weight vector. It requires Groonga 4.0.4 or later.\n"
"* Updated homepage in gemspec to use ranguba.org. [Masafumi Yokoyama]\n"
"* Reduce memory usage without GC."
msgstr ""

msgid "* Fixed a GC related crash when GC is run while {Groonga::Table#group}."
msgstr "* GCに関連したクラッシュを修正。（{Groonga::Table#group}中にGCが動いた場合など）"

msgid ""
"* Ippei Obayashi\n"
"* uu59\n"
"* cosmo0920"
msgstr ""
"* Ippei Obayashiさん\n"
"* uu59さん\n"
"* cosmo0920さん"

msgid "## 4.0.3: 2014-06-04 {#version-4-0-3}"
msgstr ""

msgid ""
"* [windows] Fixed a bug that Rroonga reports load error by\n"
"  bundling the fixed version Groonga package.\n"
"  [groonga-dev,02398][Reported by Masafumi Yokoyama]"
msgstr ""
"* [windows] load errorが発生する問題を修正。これはGroongaの問題だったので問題を修正したGroongaをバンドルしなおした。\n"
"  [groonga-dev,02398][Masafumi Yokoyama報告]"

msgid "## 4.0.2: 2014-05-29 {#version-4-0-2}"
msgstr ""

msgid ""
"* Removed needless `--key_type` option in dump.\n"
"  [Reported by Genki Takiuchi]\n"
"* Added sources information to {Groonga::IndexColumn#inspect}.\n"
"* Enabled `with_section` flag for multiple column index by default.\n"
"  See {Groonga::Schema::TableDefinition#index}.\n"
"* Enabled `with_position` flag for index of a table that has a default\n"
"  tokenizer by default. You need to specify `:with_position => false`\n"
"  explicitly to disable `with_position` flag for `TokenDelimit`.\n"
"  `TokenDelimit` is a tokenizer that doesn't need `with_position` flag.\n"
"  See {Groonga::Schema.create_table}."
msgstr ""
"* dump中の不必要な `--key_type` オプションを削除。\n"
"  [Genki Takiuchiさんが報告]\n"
"* {Groonga::IndexColumn#inspect}にソースの情報を追加。\n"
"* マルチカラムインデックスではデフォルトで `with_section` フラグを有効にした。\n"
"  参考:  {Groonga::Schema::TableDefinition#index}。\n"
"* トークナイザーを持っているテーブルでは、デフォルトで `with_position` フラグを\n"
"  有効にした。 `TokenDelimit` トークナイザーをして `with_position` フラグを無効に\n"
"  するためには明示的に `:with_position => false` を指定すること。\n"
"  なお、 `TokenDelimit` は `with_position` フラグが不要なトークナイザーである。\n"
"  参考: {Groonga::Schema.create_table}。"

msgid ""
"* [GitHub#16] Fixed a memory leak of {Groonga::Table#column}.\n"
"  [Reported by rutice]"
msgstr ""
"* [GitHub#16] {Groonga::Table#column}のメモリリークを修正。\n"
"  [ruticeさんが報告]"

msgid ""
"* rutice\n"
"* Genki Takiuchi"
msgstr ""
"* ruticeさん\n"
"* Genki Takiuchiさん"

msgid "## 4.0.1: 2014-04-04 {#version-4-0-1}"
msgstr ""

msgid ""
"* Supported Groonga 4.0.1. Groonga 4.0.0 or older are not supported.\n"
"* Supported no weight match column case."
msgstr ""

msgid ""
"      table.select do |record|\n"
"        match_target = record.match_target do |target|\n"
"          target.column\n"
"        end\n"
"        match_target =~ keyword\n"
"      end"
msgstr ""

msgid ""
"* Supported weight vector.\n"
"* grndump: Changed to use `--normalizer` instead of `KEY_NORMALIZE`.\n"
"  Old Groonga can't restore dumped database.\n"
"* {Groonga::IndexColumn#search}: Added `mode` option.\n"
"* {Groonga::IndexColumn#search}: Added `weight` option.\n"
"* Accepted String as option key."
msgstr ""

msgid "* Fixed a bug that index dump drops index options in Ruby syntax."
msgstr "* Ruby構文でのインデックスダンプ時にインデックスオプション情報が抜けてしまう問題を修正。"

msgid "## 4.0.0: 2014-02-09 {#version-4-0-0}"
msgstr ""

msgid ""
"* Supported Groonga 4.0.0. Groonga 3.1.2 or older are not supported.\n"
"* Added install document. [Patch by ongaeshi]"
msgstr ""
"* Groonga 4.0.0対応。Groonga 3.1.2以前のサポートを廃止。\n"
"* インストールドキュメントを追加。[おんがえしさんがパッチ提供]"

msgid "* ongaeshi"
msgstr "* おんがえしさん"

msgid "## 3.1.2: 2014-01-29 {#version-3-1-2}"
msgstr ""

msgid ""
"* Supported Groonga 3.1.2. Groonga 3.1.1 or older are not supported.\n"
"* Added {Groonga::Table#support_value?}.\n"
"* Added {Groonga::Record#support_value?}.\n"
"* Added `_value` value to {Groonga::Record#attributes} result.\n"
"  [groonga-dev,02046] [Suggested by ongaeshi]\n"
"* Added column values to {Groonga::Record#inspect} result.\n"
"  [groonga-dev,02048] [Suggested by ongaeshi]\n"
"* grndump: Added `--dump-indexes` option that controls schema for\n"
"  indexes output. It is useful to dump only schema for indexes.\n"
"* Added {Groonga.lock_timeout}.\n"
"* Added {Groonga.lock_timeout=}."
msgstr ""
"* Groonga 3.1.2対応。Groonga 3.1.1以前の対応を終了。\n"
"* {Groonga::Table#support_value?}を追加。\n"
"* {Groonga::Record#support_value?}を追加。\n"
"* `_value` の値を{Groonga::Record#attributes}の結果に追加。\n"
"  [groonga-dev,02046] [おんがえしさんが提案]\n"
"* カラムの値を{Groonga::Record#inspect}の結果に追加。\n"
"  [groonga-dev,02048] [おんがえしさんが提案]\n"
"* grndump: インデックスのスキーマを出力するかどうかを切り替える `--dump-indexes` オプションを追加。インデックスのスキーマだけを"
"ダンプするときに有用。\n"
"* {Groonga.lock_timeout}を追加。\n"
"* {Groonga.lock_timeout=}を追加。"

msgid "## 3.1.1: 2013-12-29 {#version-3-1-1}"
msgstr ""

msgid ""
"* Supported Groonga 3.1.1.\n"
"* [groonga-database-inspect] Added `--no-tables` option for hiding\n"
"  all table information.\n"
"* [groonga-database-inspect] Added `--no-columns` option for hiding\n"
"  all column information.\n"
"* [doc] Updated English mailing list to use Groonga-talk.\n"
"  [GitHub#14] [Patch by Masafumi Yokoyama]\n"
"* {Groonga::Expression#append_operation} supports operator name.\n"
"* {Groonga::Expression#append_constant} supports operator name.\n"
"* {Groonga::Expression#append_object} supports operator name."
msgstr ""
"* Groonga 3.1.1対応。\n"
"* [groonga-database-inspect]: テーブル情報を表示しない `--no-tables` オプションを追加。\n"
"* [groonga-database-inspect]: カラム情報を表示しない `--no-columns` オプションを追加。\n"
"* [doc] 英語用メーリングリストとしてGroonga-talkを使うようにした。\n"
"  [GitHub#14] [Masafumi Yokoyamaさんがパッチ提供]\n"
"* {Groonga::Expression#append_operation} がオペレーター名に対応。\n"
"* {Groonga::Expression#append_constant} がオペレーター名に対応。\n"
"* {Groonga::Expression#append_object} がオペレーター名に対応。"

msgid "## 3.1.0: 2013-11-29 {#version-3-1-0}"
msgstr ""

msgid ""
"* Reduced build failure by automatically Groonga build.\n"
"  [Reported by SHIMADA Koji]\n"
"* Added `groonga-database-inspect` command that inspects passed database.\n"
"  [Suggested by Genki Takiuchi]\n"
"* {Groonga::Database#tables} ignores missing objects rather than raising\n"
"  an exception. Because the method is interested in only existing tables."
msgstr ""
"* 自動でGroongaをビルドする時にエラーになりにくくした。\n"
"  [しまだこうじさんが報告]\n"
"* 指定したデータベースの詳細を表示する `groonga-database-inspect` を追加。\n"
"  [Genki Takiuchiさんが提案]\n"
"* {Groonga::Database#tables} が未知のオブジェクトがあっても例外をあげずに無視するようになった。このように変更した理由は、このメ"
"ッソッドは存在しているテーブルが欲しい、という要求に応えるためのメソッドであるため、存在しないオブジェクトがあるかどうかはこのメソッドにとって重要なことでは"
"ないから。"

msgid ""
"* Fixed a bug that {Groonga::Expression#parse} doesn't accept all\n"
"  mode and operators."
msgstr "* {Groonga::Expression#parse} がすべての種類のモード・オペレーターを受け取れない問題を修正。"

msgid ""
"* SHIMADA Koji\n"
"* Genki Takiuchi"
msgstr ""
"* しまだこうじさん\n"
"* Genki Takiuchiさん"

msgid "## 3.0.9: 2013-10-29 {#version-3-0-9}"
msgstr ""

msgid ""
"* Supported Groonga 3.0.9.\n"
"* Supported showing error message on error in {Groonga::Object#remove}."
msgstr ""
"* Groonga 3.0.9対応\n"
"* {Groonga::Object#remove}でエラーが発生した時にエラーメッセージも含めるようにした。"

msgid ""
"* Fixed a crash bug that is caused by assigning `nil` as source of\n"
"  index column."
msgstr "* インデックスカラムのソースに `nil` を指定するとクラッシュする問題を修正した。"

msgid "## 3.0.8: 2013-09-29 {#version-3-0-8}"
msgstr ""

msgid ""
"* Supported groonga 3.0.8.\n"
"* Supported x64-mingw32 Ruby.\n"
"* Supported Ruby 2.1.0 preview1."
msgstr ""
"* groonga 3.0.8サポート。\n"
"* x64-mingw32 Rubyサポート。\n"
"* Ruby 2.1.0 preview1サポート。"

msgid "## 3.0.7: 2013-09-19 {#version-3-0-7}"
msgstr ""

msgid ""
"* Added {Groonga::Table::KeySupport#tokenize}. It requires groonga\n"
"  3.0.8. Groonga 3.0.8 is not released yet.\n"
"* Changed return object of {Groonga::Context#select} to groonga-client gem's\n"
"  return object. It is a backward imcompatible change. Some APIs are changed.\n"
"  For example, `drill_down` is renamed to `drilldowns`. See\n"
"  \"Groonga::Client::Response::Select\":http://rubydoc.info/gems/groonga-client/"
"Groonga/Client/Response/Select\n"
"  about rerturn object details.\n"
"** Added groonga-client gem, groogna-command gem, gqtp gem dependencies."
msgstr ""
"* {Groonga::Table::KeySupport#tokenize}を追加。groonga 3.0.8が必要だが、groonga 3.0.8はまだ"
"リリースされていない。\n"
"* {Groonga::Context#select}の戻り値オブジェクトをgroonga-client gemの戻り値オブジェクトに変更。これは非互換の変"
"更である。いくつかのAPIが変わっている。例えば、 `drill_down` は `drilldowns` になっている。戻り値オブジェクトの詳細は [Gr"
"oonga::Client::Response::Select](http://rubydoc.info/gems/groonga-client/Groon"
"ga/Client/Response/Select) を参照。\n"
"** groonga-client gem、groogna-command gem、gqtp gemに依存するようになった。"

msgid ""
"* Fixed a bug that auto groonga installation is failed.\n"
"  [GitHub#12][Patch by Keita Haga]"
msgstr "* groongaの自動インストールが失敗するバグを修正。 [GitHub#12][Keita Hagaさんがパッチ提供]"

msgid "* Keita Haga"
msgstr "* Keita Hagaさん"

msgid "## 3.0.6: 2013-09-13 {#version-3-0-6}"
msgstr ""

msgid ""
"* Supported accessing reference column that referes a table that uses\n"
"  Int8/UInt8/Int16/UInt16 key."
msgstr "* Int8/UInt8/Int16/UInt16がキーのテーブルを参照している参照型のカラムの読み書きをサポート。"

msgid "## 3.0.5: 2013-07-29 {#version-3-0-5}"
msgstr ""

msgid ""
"* [dumper] supported dumping of DoubleArrayTrie.\n"
"* Supported Int8/UInt8/Int16/UInt16 to Ruby conversion.\n"
"  [groonga-dev,01524][Reported by Masaharu YOSHIOKA]\n"
"* Added memory pool mechanism to reduce GC easily.\n"
"  {Groonga::Context#push_memory_pool} and {Groonga::Context#pop_memory_pool}\n"
"  are added.\n"
"  You can close temporary table objects automatically:"
msgstr ""

msgid ""
"      context.push_memory_pool do\n"
"        # create tempoeray table objects by select, group, sort and so on...\n"
"      end\n"
"      # created tempoeray table objects are closed automatically"
msgstr ""

msgid ""
"* Supported max int32 over Fixnum\n"
"  [Reported by xtuaok]"
msgstr ""

msgid "* [dumper] fixed a bug that no column table isn't dumped."
msgstr "* [dumper] カラムのないテーブルがダンプされない問題を修正。"

msgid ""
"* Masaharu YOSHIOKA\n"
"* xtuaok"
msgstr ""
"* 吉岡 真治さん\n"
"* xtuaokさん"

msgid "## 3.0.4: 2013-07-04 {#version-3-0-4}"
msgstr ""

msgid "* Fixed a rroogna 3.0.3 gem package for Windows."
msgstr "* Windows用のrroogna 3.0.3 gemパッケージを修正。"

msgid "## 3.0.3: 2013-07-04 {#version-3-0-3}"
msgstr ""

msgid ""
"* Required groonga >= 3.0.5.\n"
"* Added an error check for creating a result table of {Groonga::Table#select}."
"\n"
"* Added {Groonga::Operator::AND_NOT}.\n"
"* Deprecated {Groonga::Operator::BUT} because groonga deprecated it.\n"
"  Use {Groonga::Operator::AND_NOT} instead.\n"
"* Added {Groonga::Array#unblock}.\n"
"* Added `:max_n_sub_records` option to {Groonga::Table#group}.\n"
"* Added {Groonga::Table#each_sub_record}.\n"
"* Supported groonga to Ruby conversion for vector value.\n"
"* Added `:reference => true` option to {Groonga::Expression#define_variable}\n"
"  that defines reference type variable.\n"
"* Added {Groonga::Record#sub_records} that returns sub records for the record."
"\n"
"  Sub records is a {Groonga::SubRecords} instance."
msgstr ""
"* groonga >= 3.0.5を必須とした。\n"
"* {Groonga::Table#select}の結果テーブル作成時のエラーチェックを追加。\n"
"* {Groonga::Operator::AND_NOT}を追加。\n"
"* {Groonga::Operator::BUT}を非推奨にした。これはgroongaが非推奨にしたためである。\n"
"  代わりに{Groonga::Operator::AND_NOT}を使うこと。\n"
"* {Groonga::Array#unblock}を追加。\n"
"* {Groonga::Table#group}に `:max_n_sub_records` オプションを追加。\n"
"* {Groonga::Table#each_sub_record}を追加。\n"
"* groongaからベクターの値を読み込めるようにした。\n"
"* {Groonga::Expression#define_variable}に `:reference => true` オプションを追加。\n"
"  これは、参照型の変数を定義するためのものである。\n"
"* レコードのサブレコードを返す{Groonga::Record#sub_records}を追加。\n"
"  サブレコードは{Groonga::SubRecords}のインスタンスである。"

msgid ""
"* Fixed {Groonga::Expression#[]} return type. It returns {Groonga::Variable}\n"
"  instead of value itself. CAUTION: It is a backward incompatible change."
msgstr ""
"* {Groonga::Expression#[]}の返り値の型を修正。値そのものではなく{Groonga::Variable}を返すようにした。注意: こ"
"れは後方非互換の変更である。"

msgid "## 3.0.2: 2013-05-29 {#version-3-0-2}"
msgstr ""

msgid ""
"* Required groonga >= 3.0.4.\n"
"* Supported set/get a vector of Time.\n"
"* [grndump] Stopped to dump index only tables. They are needless.\n"
"* Added {Groonga::Record#to_json}.\n"
"* Added {Groonga::IndexColumn#add}.\n"
"* Added {Groonga::IndexColumn#delete}.\n"
"* Added {Groonga::IndexColumn#update}.\n"
"* Deprecated `Groonga::IndexColumn#[]=`. Use {Groonga::IndexColumn#add},\n"
"  {Groonga::IndexColumn#delete} or {Groonga::IndexColumn#update} instead.\n"
"* Added {Groonga::Table#have_n_sub_records_space?}.\n"
"* [grndump] Don't dump \"register PLUGIN\" when schema dump is disabled."
msgstr ""
"* groonga >= 3.0.4を必須にした。\n"
"* Timeのベクターを設定・取得できるようにした。\n"
"* [grndump] インデックスのみのテーブルはダンプしないようにした。これはダンプする必要がないためである。\n"
"* {Groonga::Record#to_json}を追加。\n"
"* {Groonga::IndexColumn#add}を追加。\n"
"* {Groonga::IndexColumn#delete}を追加。\n"
"* {Groonga::IndexColumn#update}を追加。\n"
"* `Groonga::IndexColumn#[]=` を非推奨にした。代わりに{Groonga::IndexColumn#add}、{Groonga::"
"IndexColumn#delete}、{Groonga::IndexColumn#update}を使うこと。\n"
"* {Groonga::Table#have_n_sub_records_space?}を追加。\n"
"* [grndump] スキーマのダンプを無効にしているときは\"register PLUGIN\"もダンプしないようにした。"

msgid ""
"* [grndump]\n"
"  Fixed a bug that reference tables may be dumpped before referenced tables."
msgstr "* [grndump] 参照されているテーブルよりも前に参照しているテーブルがダンプされることがある問題を修正。"

msgid "## 3.0.1: 2013-05-01 {#version-3-0-1}"
msgstr ""

msgid ""
"* Required groonga >= 3.0.3.\n"
"* Supported assigning weight to value. See {Groonga::Table#set_column_value},\n"
"  {Groonga::Record#initialize} and {Groonga::Record#[]=} for details.\n"
"* Renamed to {Groonga::QueryLogger.path} from {Groonga::Logger.query_log_path}"
".\n"
"* Renamed to {Groonga::QueryLogger.path=} from {Groonga::Logger.query_log_path"
"=}.\n"
"* Renamed to {Groonga::Logger.path} from {Groonga::Logger.log_path}.\n"
"* Renamed to {Groonga::Logger.path=} from {Groonga::Logger.log_path=}.\n"
"* Added missing \"Packnga >= 0.9.7\" requirement. [Reported by takkanm]"
msgstr ""
"* groonga >= 3.0.3を必須にした。\n"
"* 値に重みを指定できるようにした。詳細は{Groonga::Table#set_column_value}、{Groonga::Record#initia"
"lize}、{Groonga::Record#[]=}を参照。\n"
"* {Groonga::Logger.query_log_path}を{Groonga::QueryLogger.path}へ改名した。\n"
"* {Groonga::Logger.query_log_path=}を{Groonga::QueryLogger.path=}へ改名した。\n"
"* {Groonga::Logger.log_path}を{Groonga::Logger.path}へ改名した。\n"
"* {Groonga::Logger.log_path=}を{Groonga::Logger.path=}へ改名した。\n"
"* \"Packnga >= 0.9.7\"への依存が抜けていたので追加した。 [takkanmさんが報告]"

msgid "* Fixed a memory leak on error."
msgstr "* エラー発生時にメモリリークする問題を修正。"

msgid "* takkanm"
msgstr "* @takkanmさん"

msgid "## 3.0.0: 2013-03-29 {#version-3-0-0}"
msgstr ""

msgid ""
"* Required groonga >= 3.0.2.\n"
"* Added block support to {Groonga::Context#create_database}. If a\n"
"  block is given, created database is closed on block exit.\n"
"* [experimental] Added {Groonga::Array#push}.\n"
"* [experimental] Added {Groonga::Array#pull}.\n"
"* Added more closed object checks.\n"
"  [GitHub #8][Reported by KITAITI Makoto]\n"
"* Added block support to {Groonga::Context#restore}. If a block is\n"
"  given, command and its response are yielded."
msgstr ""
"* groonga >= 3.0.2を必須にした。\n"
"* {Groonga::Context#create_database}がブロックをサポートした。ブロックを渡すとブロックを抜ける時に作成したデータベースを"
"閉じる。\n"
"* [実験的] {Groonga::Array#push}を追加した。\n"
"* [実験的] {Groonga::Array#pull}を追加した。\n"
"* 閉じたオブジェクトのチェックを増やした。\n"
"  [GitHub #8][KITAITI Makotoさんが報告]\n"
"* {Groonga::Context#restore}がブロックをサポートした。ブロックを渡すと実行したコマンドとそのレスポンスをブロックに渡す。"

msgid "* KITAITI Makoto"
msgstr "* KITAITI Makotoさん"

msgid "## 2.1.3: 2013-01-29 {#version-2-1-3}"
msgstr ""

msgid ""
"* Removed Groonga::View removed in groonga 2.1.2.\n"
"* [doc] Added tutorial in English.\n"
"** for English:http://ranguba.org/rroonga/en/file.tutorial.html\n"
"** for Japanese:http://ranguba.org/rroonga/ja/file.tutorial.html\n"
"* [context] Added Context#restore. This method restores command dumped\n"
"  by \"grndump\" command. Please see example below:"
msgstr ""

msgid ""
"      dumped_commands = File.read(\"dump.grn\")\n"
"      context.restore(dumped_commands)"
msgstr ""

msgid ""
"* Supported new logger API in groonga. Old API isn't used anymore.\n"
"* For installing groonga with this gem:\n"
"** Stopped to install documentation about groonga. See \"Web site\":http://groon"
"ga.org/docs/ instead.\n"
"** Stopped to build static library because it isn't used by rroonga."
msgstr ""

msgid "* [dumper] Reduced needless new lines in dumped commands."
msgstr ""

msgid ""
"* For ranguba project:\n"
"** [template] Removed needless block for sponsor by rubyforge.\n"
"** [template] Removed needless piwik tag.\n"
"** [template] Fixed URLs of references in Japanese."
msgstr ""
"* ラングバプロジェクト向け：\n"
"** [template] rubyforgeスポンサーのタグを削除。\n"
"** [template] piwikのタグを削除。\n"
"** [template] 日本語のリファレンスのURLを修正。"

msgid "## 2.1.2: 2013-01-04 {#version-2-1-2}"
msgstr ""

msgid "* Fixed GC related crash. Table's domain and range are also marked."
msgstr "* GC関係のバグを削除。"

msgid "## 2.1.1: 2012-12-29 {#version-2-1-1}"
msgstr ""

msgid ""
"* Required groonga 2.1.1 because groonga 2.1.0 has a serious bug\n"
"  related to key normalization."
msgstr "* groonga 2.1.0にキーの正規化に関する重大なバグがあったため、groonga 2.1.1を必須とした。"

msgid "## 2.1.0: 2012-12-29 {#version-2-1-0}"
msgstr ""

msgid ""
"* Required groonga 2.1.0.\n"
"* Supported mass record deletion with block.\n"
"  [groonga-dev,01138][Suggested by ongaeshi]\n"
"* Added Groonga::Normalizer.normalize (experimental). It normalize string.\n"
"  e.g.)"
msgstr ""

msgid "      Groonga::Normalizer.normalize(\"AbC\") # => \"abc\""
msgstr ""

msgid ""
"  Now, it removes any spaces by default, but it will be customized soon.\n"
"* Supported :normalizer option in DoubleArrayTrie, PatriciaTrie, Hash,\n"
"  Schema when creating tables.\n"
"* [table] Added using normalizer accessor.\n"
"* [table] Used normalizer for checking key normalization is enabled or not.\n"
"* Added groonga-index-dump tool (experimental).\n"
"  This tool dumps infomations for each index from DB.\n"
"  Dumped informations are contained at \"INDEX_NAME.dump\" files in\n"
"  \"TARGET_TABLE_NAME.index_INDEX_COLUMN_NAME\".\n"
"  e.g.)"
msgstr ""

msgid ""
"      $ cat index-dump.sdf\n"
"        table_create --name Video --flags TABLE_HASH_KEY --key_type UInt32\n"
"        table_create --name Tag --flags TABLE_HASH_KEY --key_type ShortText\n"
"        column_create --table Video --name title --flags COLUMN_SCALAR --type "
"ShortText\n"
"        column_create --table Video --name tags --flags COLUMN_VECTOR --type T"
"ag\n"
"        column_create --table Tag --name index_tags --flags COLUMN_INDEX --typ"
"e Video --source tags\n"
"        load --table Video\n"
"        [\n"
"        {\"_key\":1,\"title\":\"groonga Demo\",\"tags\":[\"IT\",\"Server\",\"groonga\"]},\n"
"        {\"_key\":2,\"title\":\"Ultra Baseball\",\"tags\":[\"Sports\",\"Baseball\"]},\n"
"        ]\n"
"      $ groonga --file index-dump.sdf -n index-dump.db\n"
"      $ groonga-index-dump --output-directory=path/to/index/ index-dump.db\n"
"      $ cd path/to/index/\n"
"      $ ls Tag.index_tags\n"
"        Baseball.dump  IT.dump       Server.dump  Sports.dump  groonga.dump\n"
"      $ cat path/to/index/Tag.index_tags/groonga.dump\n"
"        index: Tag.index_tags\tterm: <groonga>\tdomain: Tag\trange: Video\thave_se"
"ction: false\thave_weight: false\thave_position: false\n"
"         weight\tposition        term_frequency\trecord\n"
"         0    2     1   Video[ 1 ].tags"
msgstr ""

msgid ""
"* Added flag options to Groonga::IndexColumn#open_cursor.\n"
"  The flag options are :with_section, :with_weight, :with_position.\n"
"  They are enabled by default if each option is specified in creating\n"
"  a index column.\n"
"* [Snippet] Showed the error message when specified context wasn't\n"
"  associated with a database by Groonga::Database#open or #create.\n"
"* [inspect] Supported to display index column related flags for index\n"
"  column only.\n"
"  \"index column related flags\" are WITH_SECTION, WITH_WEIGHT and\n"
"  WITH_POSITION.\n"
"* [inspect] Added default tokenizer and normalizer infomation.\n"
"* Supported Groonga::QueryLogger. This class is used to log query log.\n"
"  Please see its reference for detail."
msgstr ""
"* Groonga::IndexColumn#open_cursorにフラグに関するオプション（:with_section, :with_weight, :"
"with_position）を追加。\n"
"  インデックスカラムを作るときにこれらオプションを指定していると、指定したオプションをデフォルトで使用可能になります。\n"
"* [Snippet] 指定されたGroonga::Contextがデータベースと結びついていないときにエラーメッセージを表示するようにした。\n"
"* [inspect] インデックスカラム関連のフラグ（WITH_SECTION, WITH_WEIGHT, WITH_POSITION）はインデックスカラ"
"ムを表示するときにのみ表示するようにした。\n"
"* [inspect] デフォルトのトークナイザーとノーマライザーの情報を表示するようにした。\n"
"* Groonga::QueryLoggerをサポートした。このクラスはクエリログのロガーです。詳しくはリファレンスマニュアルをご覧ください。"

msgid "### Changes"
msgstr "### 変更"

msgid ""
"* Move groonga-query-log-extract to groonga-query-log.\n"
"  Please install groogna-query-log gem to use this tool.\n"
"  how to install:"
msgstr ""

msgid "      gem install groonga-query-log"
msgstr ""

msgid ""
"* Returned Groonga::Array instead of Array by Table#sort.\n"
"  [GitHub: #8][Suggested by Genki Takiuchi]\n"
"  CAUTION: This is backward incompatible change. You need to use\n"
"  record.value to get the original record.\n"
"  The following code shows how to use old style:"
msgstr ""

msgid ""
"      result_since_2_1_0 = table.sort([\"sort_key\"])\n"
"      result_before_2_1_0 = result_since_2_1_0.collect do |record|\n"
"        record.value\n"
"      end"
msgstr ""

msgid ""
"* ongaeshi\n"
"* Genki Takiuchi"
msgstr ""
"* ongaeshiさん\n"
"* Genki Takiuchiさん"

msgid "## 2.0.8: 2012-12-02 {#version-2-0-8}"
msgstr ""

msgid "* Required groonga 2.0.9."
msgstr "* groonga 2.0.9対応。"

msgid "## 2.0.7: 2012-11-29 {#version-2-0-7}"
msgstr ""

msgid ""
"* Added `Groonga::Posting#record`. This method returns the record for\n"
"  the record ID in table.\n"
"* Added `Groonga::Posting#term`. This method returns the record for the\n"
"  term ID in table.\n"
"* Supported `GRN_OBJ_KEY_VAR_SIZE` for `Groonga::Type#inspect`.\n"
"  `GRN_OBJ_KEY_CAR_SIZE` specifies its column is variable size.\n"
"* [Type] Added reader methods to `Groonga::Type` (`#size` and `#flags`).\n"
"* [Type] Added predicate methods to `Groonga::Type`.\n"
"  Added methods are `#fixed_size?`, `#variable_size?`, `#unsigned_integer?`,\n"
"  `#integer?`, `#float?` and `#geo_point?`."
msgstr ""

msgid ""
"* Removed query log related codes.\n"
"  This feature moved to groonga-query-log gem and it is relased soon."
msgstr ""
"* クエリログ関連の機能を削除した。クエリログ関連の機能はgroonga-query-logというgemに移動しました。このgemは近日中にリリースする予定"
"です。"

msgid "## 2.0.6: 2012-10-25 {#version-2-0-6}"
msgstr ""

msgid ""
"* [dump] Put index columns at the bottom (after loads).\n"
"  It is for using offline index construction.\n"
"* Added term_extract in Table#select by `table.select {|record|\n"
"  record.key.term_extract(text)}` syntax.\n"
"* Supported `:allow_leading_not` as a option of `#select`.\n"
"  You should use this option carefully. It takes a long time to search\n"
"  all records which doesn't include a word. In addition, when the\n"
"  number of records is large, to search them with this option is\n"
"  slowly."
msgstr ""
"* [dump] インデックスカラム作成のコマンドを最後（loadコマンドの後ろ）に出力するようにした。これは静的インデックス作成にするためのものです。\n"
"* 単語抽出機能をサポート。構文は `table.select {|record| record.key.term_extract(text)}` 。\n"
"* selectメソッドを使うときに:allow_leading_notオプションを使用できるようにした。このオプションで「ある単語が含まれない全てのレコー"
"ド」を検索すると検索が遅くなります。またレコードが多い時にも時間がかかるので注意して使ってください。"

msgid ""
"* Changed option name for debug build in extconf.rb from `--with-debug`\n"
"  to `--enable-debug-log`."
msgstr "* extconf.rbでデバッグ用ビルドに使うオプションを `--with-debug` から `--enable-debug-log` に変更。"

msgid "* Fixed display collapse in the references."
msgstr "* リファレンスの表示崩れを修正。"

msgid "## 2.0.5: 2012-09-28 {#version-2-0-5}"
msgstr ""

msgid ""
"* Supported groonga 2.0.7.\n"
"* Removed the workaround to install rroonga with old groonga.\n"
"* Added more error checks.\n"
"* Added Database#tables. [Suggested by @temitan]\n"
"* Supported Enumerator for #each on Database, Table, TableCursor and\n"
"  IndexCursor.\n"
"* Added WGS84GeoPoint and TokyoGeoPoint.\n"
"* [dumper] supported dumping of WGS84GeoPoint and TokyoGeoPoint.\n"
"* [dumper] worked on non UTF-8 extenal output encoding environment.\n"
"* [dumper] sorted table and column names.\n"
"* [dumper] ignored invalid byte.\n"
"* [grndump] showed the warning for invalid character.\n"
"* [grndump] supported database that is created by old groonga.\n"
"* Added `Groonga::Context#ruby_encoding`.\n"
"* Added many documents in codes but showed no references."
msgstr ""
"* groonga 2.0.7対応。\n"
"* 古いgroongaと一緒に使うときに必要な処理を削除。\n"
"* 様々なエラーチェックを追加。\n"
"* Database#tablesを追加。[@temitanさんが提案]\n"
"* Database, Table, TableCursor, IndexCursorの#eachでブロックが指定されてないときにはEnumeratorを返"
"すようにした。\n"
"* WGS84GeoPointクラスとTokyoGeoPointクラスを追加。\n"
"* [dumper] WGS84GeoPointとTokyoGeoPointのダンプに対応。\n"
"* [dumper] 外部エンコーディングがUTF-8以外の環境でも動作するようにした。\n"
"* [dumper] ダンプ時にテーブルとカラム名でソートするようにした。\n"
"* [dumper] 不正なバイトがあったときに無視するようにした。\n"
"* [grndump] 不正な文字があったときに警告を出すようにした。\n"
"* [grndump] 古いgroongaで作ったデータベースも正しくダンプできるようにした。\n"
"* `Groonga::Context#ruby_encoding` を追加。\n"
"* コード内に書かれていてリファレンスに表示されていなかったドキュメントをリファレンスに追加。"

msgid "* Added missing backslash escape for groonga command."
msgstr "* groongaコマンドにバックスラッシュがあったときにエスケープするように修正した。"

msgid "* @temitan"
msgstr "* @temtanさん"

msgid "## 2.0.4: 2012-05-02 {#version-2-0-4}"
msgstr ""

msgid "* Fixed a bug that weight of match target is ignored."
msgstr "* マッチカラムの重みが無視される問題を修正。"

msgid "## 2.0.3: 2012-05-02 {#version-2-0-3}"
msgstr ""

msgid ""
"* Supported groonga 2.0.2.\n"
"* `Groonga::Table#each` supports options that are same as\n"
"  `Groonga::Table#open_cursor`'s one.\n"
"* [grndump] added `--order-by=id` option. With this option, dumped\n"
"  records are sorted by ID instead of key. You can restore records\n"
"  without ID change if you don't delete any records. [#1341]\n"
"* Supported building on Windows with RubyInstaller for Windows with DevKit.\n"
"  [GitHub#6] [Patch by @ongaeshi]\n"
"* Supported similar search by `table.select {|record|\n"
"  record.column.similar_search(text)}` syntax."
msgstr ""
"* groonga 2.0.2対応。\n"
"* `Groonga::Table#each`で`Groonga::Table#open_cursor`と同じオプションを受け付けるようにした。\n"
"* [grndump] `--order-by=id` オプションを追加。このオプションを使うと、キーではなくIDでレコードをソートしてダンプします。もし、"
"レコードを削除していない場合はこのオプションを使うことでレコードIDを変更せずにレコードをリストアできます。 [#1341]\n"
"* RubyInstall for WindowsのDevKitを使ったWindows上でのビルドをサポート。\n"
"  [GitHub#6] [@ongaeshiさんがパッチ提供]\n"
"* 類似文書検索をサポート。構文は `table.select {|record| record.column.similar_search(text)}`"
" 。"

msgid "* Fixed a GC related crach bug."
msgstr "* GC関連ででクラッシュするバグを修正。"

msgid "* @ongaeshi"
msgstr "* ongaeshiさん"

msgid "## 2.0.2: 2012-03-29 {#version-2-0-2}"
msgstr ""

msgid ""
"* Supported groonga 2.0.1.\n"
"* Added \"logos\":http://groonga.rubyforge.org/#logo ."
msgstr ""
"* groonga 2.0.1対応。\n"
"* \"ロゴ\":http://groonga.rubyforge.org/#logo を追加。"

msgid "* Fixed a Groonga::Snipet related crach bug caused by GC."
msgstr "* Groonga::Snippetに関連したGCでクラッシュするバグを修正した。"

msgid "## 2.0.0: 2012-03-22 {#version-2-0-0}"
msgstr ""

msgid ""
"* Supported groonga 2.0.0.\n"
"* [gem][windows] Removed mswin packages."
msgstr ""
"* groonga 2.0.0対応。\n"
"* [gem][windows] mswin用のパッケージを削除した。"

msgid ""
"* [test] Fixed version test failure. [GitHub#4] [Reported by @takkanm]\n"
"* Fixed a Groonga::Expression related crach bug caused by GC.\n"
"* [doc] Fixed broken HTML output. [groonga-dev,00699]\n"
"  [Reported by Hirano]"
msgstr ""
"* [test] バージョンのテストの失敗を修正した。 [GitHub#4] [@takkanmさんが報告]\n"
"* Groonga::Expressionに関連したGCでクラッシュするバグを修正した。\n"
"* [doc] 壊れたHTML出力を修正した。 [groonga-dev,00699] \n"
"  [平野さんが報告]"

msgid ""
"* @takkanm\n"
"* Hirano"
msgstr ""
"* @takkanmさん\n"
"* 平野さん"

msgid "## 1.3.1: 2012-01-29 {#version-1-3-1}"
msgstr ""

msgid ""
"* Supported groonga 1.3.0.\n"
"* [schema] Supported Int8, Int16, UInt8 and UInt16.\n"
"* [schema] Supported TokyoGeoPoint and WGS84GeoPoint.\n"
"* [schema][dumper] Supported Boolean and more built-in types.\n"
"  [Reported by @mashiro]\n"
"* [schema] Supported type object as column type. [#1002]\n"
"* Added `Groonga::VariableSizeColumn#compressed?`. [#1004]\n"
"* Added `Groonga::Record#score=`.\n"
"* Improve performance for encoded string.\n"
"* Added `Groonga::Command::Builder.escape_value`."
msgstr ""
"* groonga 1.3.0対応。\n"
"* [schema] Int8、Int16、UInt8、UInt16に対応。\n"
"* [schema] TokyoGeoPoint、WGS84GeoPointに対応。\n"
"* [schema][dumper] Booleanや多くの組み込み型に対応。\n"
"  [@mashiroさんが報告]\n"
"* [schema] カラムの型として型オブジェクトを指定できるようになった。 [#1002]\n"
"* `Groonga::VariableSizeColumn#compressed?`を追加。 [#1004]\n"
"* `Groonga::Record#score=`を追加。\n"
"* エンコードされた文字列の扱ったときのパフォーマンスを改良。\n"
"* `Groonga::Command::Builder.escape_value`を追加。"

msgid "* @mashiro"
msgstr "* @mashiroさん"

msgid "## 1.3.0: 2011-11-29 {#version-1-3-0}"
msgstr ""

msgid ""
"* [schema] Remove also needless db.tables/ directory if it is empty.\n"
"* [schema] Remove also needless db.tables/table.columns/ directory if it is em"
"pty.\n"
"* Added query log parser.\n"
"* Added groonga-query-log-extract command.\n"
"* Added grntest log analyzer.\n"
"* Added JSON gem dependency.\n"
"* Supported groonga 1.2.8.\n"
"* Dropped groonga 1.2.7 or former support.\n"
"* Added Groonga::Table#defrag.\n"
"* Added Groonga::Table#rename.\n"
"* Added Groonga::Column#rename.\n"
"* Added Groonga::DoubleArrayTrie.\n"
"* [schema] Supported table rename.\n"
"* [schema] Supported column rename.\n"
"* [schema] Supported double array trie."
msgstr ""
"* [schema] db.tables/ディレクトリが空の場合は削除時に一緒に削除するようにした。\n"
"* [schema] db.tables/table.columns/ディレクトリが空の場合は削除時に一緒に削除するようにした。\n"
"* クエリログパーサを追加。\n"
"* groonga-query-log-extractコマンドを追加。\n"
"* grntestのログを解析するスクリプトを追加。\n"
"* JSONへの依存関係を追加。\n"
"* groonga 1.2.8対応。\n"
"* groonga1.2.7以前のサポートを削除。\n"
"* Groonga::Table#defragを追加。\n"
"* Groonga::Table#renameを追加。\n"
"* Groonga::Column#renameを追加。\n"
"* Groonga::DoubleArrayTrieを追加。\n"
"* [schema] テーブルのリネームに対応。\n"
"* [schema] カラムのリネームに対応。\n"
"* [schema] ダブル配列トライに対応。"

msgid "* [schema] Don't use named path by default for location aware DB."
msgstr "* [schema] DBを移動してもそのまま使えるようにするために、デフォルトではパスに意味のある名前をつけないようにした。"

msgid "* Fixed a crash problem on GC."
msgstr "* GC時にクラッシュする問題を修正。"

msgid "## 1.2.9: 2011-09-16"
msgstr ""

msgid "* deleted unneed object files."
msgstr "* 不要なオブジェクトファイルが入っていたのを削除。"

msgid "## 1.2.8: 2011-09-16"
msgstr ""

msgid ""
"* supported `!=` expression for column in block of `Groonga::Table#select`.\n"
"* accepted Hash like object as options.\n"
"* supported vector in dump in Ruby syntax.\n"
"* supported `GRN_CTX_PER_DB` environment variables.\n"
"  (NOTE: You should pay attention to use this variables.)"
msgstr ""
"* `Groonga::Table#select`に与えるブロックの中での`!=`メソッドに対応。\n"
"* ハッシュライクなオプションに対応。\n"
"* Ruby文法においてのベクター形式のダンプに対応。\n"
"* 環境変数`GRN_CTX_PER_DB`に対応。（注意：この環境変数を使用する際は注意して使ってください）"

msgid "## 1.2.7: 2011-08-29"
msgstr ""

msgid "* Added Groonga::Snippet#close that frees resource."
msgstr "* リソースを解放するGroonga::Snippet#closeを追加。"

msgid "* Fixed build error on Ruby 1.8.7."
msgstr "* Ruby 1.8.7でビルドできない問題を修正。"

msgid "## 1.2.6: 2011-08-29"
msgstr ""

msgid ""
"* Supported groonga 1.2.5.\n"
"* Added Groonga::Record#added? that returns true when the record is just added"
".\n"
"* Added Groonga::VariableSizeColumn#defrag? that defrags the column.\n"
"* Added Groonga::Database#defrag that defrags the all variable size columns.\n"
"* Supported column name specification by symbol."
msgstr ""
"* groonga 1.2.5対応。\n"
"* 追加直後のレコードかどうかを返す Groonga::Record#added? を追加。\n"
"* カラムをデフラグする Groonga::VariableSizeColumn#defrag? を追加。\n"
"* データベース中のすべての可変長カラムをデフラグする Groonga::Database#defrag を追加。\n"
"* シンボルでのカラム名指定に対応。"

msgid ""
"* Fixed install *.rb failure by gem install.\n"
"* Fixed some memory leaks.\n"
"* Fixed crash bug on exit."
msgstr ""
"* gem install時に*.rbのインストールに失敗する問題を修正。\n"
"* メモリリークを修正。\n"
"* 終了時にクラッシュする問題を修正。"

msgid "## 1.2.5: 2011-08-05"
msgstr ""

msgid ""
"* Re-supported tar.gz distribution.\n"
"* Added Groonga::Context#close.\n"
"* Added Groonga::Context#closed?.\n"
"* Deprecated Groonga::ObjectClosed. Use Groonga::Closed instead.\n"
"* grndump: Added --exclude-table option that specifies not dumped tables.\n"
"* dump: Removed path equality check."
msgstr ""
"* tar.gzでのパッケージ配布を再サポート。\n"
"* Groonga::Context#closeを追加。\n"
"* Groonga::Context#closed?を追加。\n"
"* Groonga::ObjectClosedを非推奨にした。代わりにGroonga::Closedを使うこと。\n"
"* grndump: ダンプしないテーブルを指定する--exclude-tableオプションを追加。\n"
"* dump: パスが等しいかどうかのチェックを削除。"

msgid ""
"* dump: Fixed wrong index table type.\n"
"* Re-supported auto groonga install."
msgstr ""
"* [dump] 間違ったインデックス用テーブルを出力する問題を修正。\n"
"* groongaの自動インストールを再サポート。"

msgid "## 1.2.4: 2011-06-29"
msgstr ""

msgid "* Supported groonga 1.2.3."
msgstr "* groonga 1.2.3対応。"

msgid ""
"* Re-supported auto groonga install.\n"
"* Added missing pkg-config gem dependency."
msgstr ""
"* groongaの自動インストールを再サポート。\n"
"* pkg-config gemへの依存関係を追加。"

msgid "## 1.2.3: 2011-06-27"
msgstr ""

msgid ""
"* remove object files in gem packages.\n"
"* fix charactor corruption in reference."
msgstr ""
"* gemパッケージに含まれてしまったオブジェクトファイル(*.o)を削除。\n"
"* 一部のリファレンスマニュアルの文字化けを修正。"

msgid "## 1.2.2: 2011-06-27"
msgstr ""

msgid ""
"* created \"Developers\" page in English.\n"
"* added description for tasks of \"html:publish\" and \"publish\"."
msgstr ""
"* 英語版の「開発者向け情報」ページを作成。\n"
"* \"html:publish\"タスクと\"publish\"に関しての説明を追加。"

msgid ""
"* Groonga::Record#attributes return same attributes object for duplicate recor"
"ds.\n"
"* added document for Groonga::Record#attributes.\n"
"* changed tool name in document page for creating document.\n"
"* moved NEWS*.rdoc and tutorial.texttile to doc/text/."
msgstr ""
"* Groonga::Record#attributesが重複したレコードが現れた際に同じattributesオブジェクトを返すようにした。\n"
"* Groonga::Record#attributesにドキュメントを追加。\n"
"* 「開発者向け情報」ページ内にあるドキュメント作成ツールを変更。\n"
"* NEWS*.rdocとtutorial.texttileをディレクトリdoc/text/に移動。"

msgid ""
"* fixed the tutorial path in index page.\n"
"* fixed the path of tutorial in index page in English.\n"
"* follow the groonga downlowd URL change. [mallowlabs]"
msgstr ""
"* インデックスページにある「チュートリアル」ページへのリンクを修正。\n"
"* インデックスページにある英語版「チュートリアル」ページへのリンクを修正。\n"
"* 新しいgroongaのダウンロードURLに対応。 [mallowlabs]"

msgid "* mallowlabs"
msgstr "* mallowlabsさん"

msgid "## 1.2.1: 2011-06-07"
msgstr ""

msgid ""
"* added document of Groonga::Table#pagination.\n"
"* added grndump in package.\n"
"* corresponded recursive reference of Records by Groonga::Record#attributes.\n"
"  (experimental) [mooz]\n"
"* Groonga::Record#attributes supported data including _score.\n"
"* corresponded Windows for 64-bit.\n"
"  (but there's not 64-bit ruby, so rroonga for 64-bit windows cannot run.)\n"
"* added Groonga::Posting.\n"
"* added :delimit, :token_delimiter for alias of TokenDelimit.\n"
"* Groonga::DatabaseDumper#dump corresponded lexicon table.\n"
"* Groonga::DatabaseDumper#dump corresponded data including plugin.\n"
"* added Groonga::IndexColumn#open_cursor. [yoshihara]\n"
"* added Groonga::IndexCursor. [yoshihara]\n"
"* added Groonga::Object#builtin?. [yoshihara]"
msgstr ""
"* Groonga::Table#paginationのドキュメントを追加。\n"
"* grndumpをパッケージに追加。\n"
"* Groonga::Record#attributesによるレコード内での再帰参照に対応した。（補足：ただし実験的実装）[mooz]\n"
"* Groonga::Record#attributesにて_scoreも含めたデータを返すようにした。\n"
"* Windowsの64bitに対応。（ただし、rubyの64bit版が存在しないため、動作環境がない）\n"
"* Groonga::Postingを追加。\n"
"* TokenDelimitのエイリアスに:delimit, :token_delimiterを追加。\n"
"* Groonga::DatabaseDumper#dumpにてlexiconテーブルのダンプに対応。\n"
"* Groonga::DatabaseDumper#dumpにてプラグインを含んだダンプに対応。\n"
"* Groonga::IndexColumn#open_cursorを追加。[yoshihara]\n"
"* Groonga::IndexCursorを追加。[yoshihara]\n"
"* Groonga::Object#builtin?を追加。[yoshihara]"

msgid ""
"* check existence of column before removing it.\n"
"* removed grn expression document."
msgstr ""
"* カラムが削除される前に、そのカラムがあるかチェックするようにした。\n"
"* ドキュメントからgrn式のページを削除。"

msgid ""
"* mooz\n"
"* yoshihara"
msgstr ""
"* moozさん\n"
"* yoshiharaさん"

msgid "## 1.2.0: 2011-04-01"
msgstr ""

msgid ""
"* Supported groonga 1.2.0.\n"
"* Added `Groonga::Accessor#local_name`.\n"
"* Added `Groonga::IndexColumn#with_section?`.\n"
"* Added `Groonga::IndexColumn#with_weight?`.\n"
"* Added `Groonga::IndexColumn#with_position?`.\n"
"* `Groonga::Schema.dump` supported groonga command format dump.\n"
"* Added grndump command.\n"
"* `Groonga::Database#each` supports order customize.\n"
"* Added `Groonga::Context#match_escalation_threshold`.\n"
"* Added `Groonga::Context#match_escalation_threshold=`.\n"
"* Improved error message.\n"
"* Supported Rubyish name like `:short_text` instead of the\n"
"  official type name like \"ShortText\" in `Groonga::Schema`."
msgstr ""

msgid "## 1.1.0: 2011-02-09"
msgstr ""

msgid ""
"* Supported groonga 1.1.0.\n"
"* Added Groonga::Plugin.register."
msgstr ""
"* groonga 1.1.0対応。\n"
"* Groonga::Plugin.registerを追加。"

msgid "## 1.0.9: 2011-01-29"
msgstr ""

msgid ""
"* Supported gem creation on Windows. [Patch by ongaeshi]\n"
"* Supported generated directory that is created by Groonga::Schema removal\n"
"  when table or column is removed.\n"
"* Added Groonga::Context#create_database.\n"
"* Added Groonga::Context#open_database.\n"
"* Added Groonga::Column#indexes.\n"
"* Supported a notation for specifying index column as match target in\n"
"  Groonga::Table#select:"
msgstr ""

msgid ""
"      table.select do |record|\n"
"        record.match(\"query\") do |match_record|\n"
"          (match_record.index(\"Terms.title\") * 1000) |\n"
"            (match_record.index(\"Terms.description\") * 100)\n"
"            match_record.content\n"
"        end\n"
"      end"
msgstr ""

msgid "* Supported prefix search in Groonga::Table#select:"
msgstr ""

msgid ""
"      table.select do |record|\n"
"        record.name.prefix_search(\"groo\")\n"
"      end"
msgstr ""

msgid "* Supported suffix search in Groonga::Table#select:"
msgstr ""

msgid ""
"      table.select do |record|\n"
"        record.name.suffix_search(\"nga\")\n"
"      end"
msgstr ""

msgid ""
"* Supported :default_tokenizer schema dump.\n"
"* Supported :key_normalize schema dump.\n"
"* Supported pseudo columns by Groonga::Table#have_column?.\n"
"* Supported pseudo columns by Groonga::Record#have_column?."
msgstr ""

msgid ""
"* Renamed Groonga::Operatoion to Groonga::Operator.\n"
"  (Groonga::Operation is deprecated but still usable.)"
msgstr "* Groonga::OperatoionをGroonga::Operatorに変更。（しばらくはGroonga::Operationも使えるが、非推奨。）"

msgid ""
"* Fixed a crash bug when not default Groonga::Context is used in\n"
"  Groonga::Table#select.\n"
"* Fixed a crash bug when an exception is occurred."
msgstr ""
"* 複数のGroonga::Contextを利用した場合にGroonga::Table#selectでクラッシュする問題を修正。\n"
"* 例外発生時にクラッシュする問題を修正。"

msgid "## 1.0.8: 2010-12-25"
msgstr ""

msgid "* Improved Groonga::Schema's n-gram tokenizer detect process."
msgstr "* Groonga::Schemaのn-gramトークナイザー検出処理を改良。"

msgid "* Fixed GC problem caused by match_target in select."
msgstr "* selectでmatch_targetを利用した場合に生きているオブジェクトもGCされる問題を修正。<"

msgid "## 1.0.7: 2010-12-19"
msgstr ""

msgid ""
"* Supported pkg-config installed by RubyGems on Ruby 1.8. [Reported by @kamipo"
"]\n"
"* Fixed a memory leak in Groonga::Table#columns."
msgstr ""
"* Ruby 1.8でRubyGemsでインストールされたpkg-configを使えるようにした。 [@kamipoさんが報告]\n"
"* Groonga::Table#columnsのメモリリークを修正。"

msgid "* @kamipo"
msgstr ""

msgid "## 1.0.5: 2010-11-29"
msgstr ""

msgid ""
"* Added snail_case type name aliases for built-in groonga types\n"
"  to Groonga::Schema."
msgstr "* Groonga::Schemaでgroongaの組み込み型をshort_textなどのように「小文字 + アンダースコア」でも指定できるようにした。"

msgid "* Fixed a crash bug on GC. [Ryo Onodera]"
msgstr "* GC時にクラッシュするバグを修正。 [Ryo Onodera]"

msgid "## 1.0.4: 2010-11-29"
msgstr ""

msgid ""
"* Supported groonga 1.0.4.\n"
"  * Added Groonga::UnsupportedCommandVersion.\n"
"* Added Groonga::Record#support_sub_records?.\n"
"* Added Groonga::Record#eql?とGroonga::Record#hash.\n"
"  (treat two the same table and the same record ID object as the same Hash key"
".)\n"
"* Supported pkg-config gem.\n"
"* Supported generic #record_id object handle for custom record object\n"
"  in Groonga::Table#select.\n"
"* Added Groonga::Record#record_id.\n"
"* Added Groonga::Table#support_key?.\n"
"* Added Groonga::Record#support_key?.\n"
"* Added Groonga::Record#support_key?.\n"
"* Added Groonga::Column#reference_key?.\n"
"* Added Groonga::Column#index_column?.\n"
"* Added Groonga::Schema#dump.\n"
"* Supported multi columns index creation in Groonga::Schema.\n"
"* Supported meaningful path in Groonga::Schema.\n"
"* Made reference table omissible when index column definition\n"
"  in Groonga::Schema.\n"
"* Added Groonga::Schema.remove_column.\n"
"* Added convenience timestamps methods to define \"created_at\" and\n"
"  \"updated_at\" columns in Groonga::Schema.\n"
"* Added Groonga::Context#support_zlib?.\n"
"* Added Groonga::Context#support_lzo?.\n"
"* Added Groonga::Database#touch.\n"
"* Added Groonga::Table#exist?.\n"
"* Added Groonga::Record#valid?.\n"
"* Added Groonga::Column#vector?.\n"
"* Added Groonga::Column#scalar?.\n"
"* Added Groonga::Record#vector_column?.\n"
"* Added Groonga::Record#scalar_column?.\n"
"* Accepted any object that has record_raw_id method for record ID required\n"
"  location. Groonga::Record isn't required.\n"
"* Added Groonga::Record#record_raw_id.\n"
"* Accepted any object that as to_ary method for reference vector column value."
msgstr ""
"* groonga 1.0.4対応。\n"
"* Groonga::UnsupportedCommandVersionを追加。\n"
"* Groonga::Record#support_sub_records?を追加。\n"
"* Groonga::Record#eql?とGroonga::Record#hashを追加。（同じテーブルの同じレコードIDのオブジェクトを同一のHash"
"キーとして扱う。）\n"
"* pkg-config gemを利用するようにした。\n"
"* Groonga::Table#select内でrecord_idメソッドを持っているメソッドはレコードとして扱うようにした。\n"
"* Groonga::Record#record_idを追加。\n"
"* Groonga::Table#support_key?を追加。\n"
"* Groonga::Record#support_key?を追加。\n"
"* Groonga::Record#support_key?を追加。\n"
"* Groonga::Column#reference_key?を追加。\n"
"* Groonga::Column#index_column?を追加。\n"
"* Groonga::Schema#dumpを追加。\n"
"* Groonga::Schemaが複数のカラムのインデックス作成に対応。\n"
"* Groonga::Schemaで定義したオブジェクトに対応するファイル名にわかりやすいファイル名を利用するようにした。\n"
"* Groonga::Schemaで参照カラムを定義時に参照先のテーブル名を省略可能になった。\n"
"* Groonga::Schema.remove_columnを追加。\n"
"* Groonga::Schemaでcreated_atカラムとupdated_atカラムを作るためのtimestamps便利メソッドを追加。\n"
"* Groonga::Context#support_zlib?を追加。\n"
"* Groonga::Context#support_lzo?を追加。\n"
"* Groonga::Database#touchを追加。\n"
"* Groonga::Table#exist?を追加。\n"
"* Groonga::Record#valid?を追加。\n"
"* Groonga::Column#vector?を追加。\n"
"* Groonga::Column#scalar?を追加。\n"
"* Groonga::Record#vector_column?を追加。\n"
"* Groonga::Record#scalar_column?を追加。\n"
"* レコードIDが必要なところにrecord_raw_idを持つオブジェクトならGroonga::Record以外も渡せるようにした。\n"
"* Groonga::Record#record_raw_idを追加。\n"
"* ベクタの参照カラムの値にArray以外でもto_aryを持つオブジェクトを設定できるようにした。"

msgid "## Changes"
msgstr "## 変更"

msgid ""
"* Used :key as the default value of `:order_by` of\n"
"  `Groonga::PatriciaTrie#open_cursor`.\n"
"* Removed a deprecated Groonga::Table::KeySupport#find.\n"
"* Used ShortText as the default key type of\n"
"  Groonga::Hash#create and Groonga::PatriciaTrie#create.\n"
"* Renamed Groonga::Schema#load to Groonga::Schema#restore.\n"
"* Supported pkg-config 1.0.7.\n"
"* Added Groonga::Column#index? and deprecated Groonga::Column#index_column?.\n"
"* Added Groonga::Column#reference? and deprecated\n"
"  Groonga::Column#reference_column?."
msgstr ""
"* `Groonga::PatriciaTrie#open_cursor`では`:order_b`yのデフォルト値として:keyを使うようにした。\n"
"* 非推奨扱いのGroonga::Table::KeySupport#findを削除。\n"
"* Groonga::Hash#createとGroonga::PatriciaTrie#createでキーの型を省略した場合はShortTextを使用する"
"ようにした。\n"
"* Groonga::Schema#loadをGroonga::Schema#restoreに改名。\n"
"* pkg-config 1.0.7対応。\n"
"* Groonga::Column#index?を追加。Groonga::Column#index_column?は非推奨。\n"
"* Groonga::Column#reference?を追加。Groonga::Column#reference_column?は非推奨。"

msgid ""
"* Fixed index for key isn't be able to define.\n"
"* Fixed a crash problem on GC."
msgstr ""
"* keyにインデックスを張れない問題を修正。\n"
"* GC時にクラッシュする問題を修正。"

msgid "## 1.0.1: 2010-09-12"
msgstr ""

msgid "* Fixed wrong flag used on creating a table. [Reported by ono matope]"
msgstr "* テーブル作成時に誤ったフラグを指定していた問題を修正。 [小野マトペさんが報告]"

msgid "* ono matope"
msgstr "* 小野マトペさん"

msgid "## 1.0.0: 2010-08-29"
msgstr ""

msgid ""
"* Supported groonga 1.0.0.\n"
"  * Added Groonga::CASError.\n"
"  * Added :order_by option to Groonga::Table#open_cursor.\n"
"  * Added Groonga::PatriciaTrie#open_prefix_cursor that creates a cursor\n"
"    to retrieve each records by prefix search.\n"
"  * Added Groonga::PatriciaTrie#open_rk_cursor that creats a cursor to\n"
"    retrieve katakana keys from roman letters and/or hiragana.\n"
"  * Added Groonga::PatriciaTrie#open_near_cursor that creates a cursor to\n"
"    retrieve records order by distance from key.\n"
"* Supported _key as index source."
msgstr ""
"* groonga 1.0.0対応。\n"
"* Groonga::CASErrorを追加。\n"
"* Groonga::Table#open_cursorに:order_byオプションを追加。\n"
"* 前方一致検索がマッチしたレコードを順に取り出すカーソルを作るGroonga::PatriciaTrie#open_prefix_cursorを追加。\n"
"* ローマ字・ひらがなでカタカナのキーを検索するカーソルを作るGroonga::PatriciaTrie#open_rk_cursorを追加。\n"
"* 値の近い順にレコードを取り出すカーソルを作るGroonga::PatriciaTrie#open_near_cursorを追加。\n"
"* インデックスのソースに_keyを指定できるようになった。"

msgid "## 0.9.5: 2010-07-20"
msgstr ""

msgid ""
"* Supported groonga 0.7.4.\n"
"* Imporoved Groonga::Table#select:\n"
"  * Supported weight match:"
msgstr ""
"* groonga 0.7.4対応。\n"
"* Groonga::Table#selectを改良:\n"
"* 重み付きマッチに対応:"

msgid ""
"    Here is an example to match source column or title column and\n"
"    title column has high score:"
msgstr ""

msgid ""
"        table.select do |record|\n"
"          (record.title * 10 | record.source) =~ \"query\"\n"
"        end"
msgstr ""

msgid "  * Supported and representation for and conditions:"
msgstr ""

msgid "    Here are examples that represents the same condition:"
msgstr ""

msgid ""
"        table.select do |record|\n"
"          conditions = []\n"
"          conditions << record.title =~ \"query\"\n"
"          conditions << record.updated_at > Time.parse(\"2010-07-29T21:14:29+09"
":00\")\n"
"          conditions\n"
"        end"
msgstr ""

msgid ""
"        table.select do |record|\n"
"          (record.title =~ \"query\") &\n"
"            (record.updated_at > Time.parse(\"2010-07-29T21:14:29+09:00\"))\n"
"        end"
msgstr ""

msgid ""
"* Provided groonga runtime version: Groonga::VERSION\n"
"* Added Groonga::Table#support_sub_records?\n"
"* Supported pagination: Groonga::Table#paginate, Groonga::Pagination"
msgstr ""

msgid "## 0.9.4: 2010-04-22"
msgstr ""

msgid "* Fixed release miss."
msgstr "* リリースミス修正。"

msgid "## 0.9.3: 2010-04-22"
msgstr ""

msgid "## 0.9.2: 2010-04-22"
msgstr ""

msgid ""
"* Supported groonga 0.1.9.\n"
"* Many."
msgstr ""
"* groonga 0.1.9対応。\n"
"* たくさん。"

msgid "## 0.9.1: 2010-02-09"
msgstr ""

msgid "* Supported groonga 0.1.6"
msgstr ""

msgid "## 0.9.0: 2010-02-09"
msgstr ""

msgid ""
"* Supported groonga 0.1.5\n"
"* Added API\n"
"  * Groonga::Object#context\n"
"  * Groonga::Record#n_sub_records\n"
"  * Groonga::Context#send\n"
"  * Groonga::Context#receive\n"
"  * Groonga::PatriciaTrie#prefix_search [Tasuku SUENAGA]\n"
"  * Groonga::Object#path [Ryo Onodera]\n"
"  * Groonga::Object#lock [Tasuku SUENAGA]\n"
"  * Groonga::Object#unlock [Tasuku SUENAGA]\n"
"  * Groonga::Object#locked? [Tasuku SUENAGA]\n"
"  * Groonga::Object#temporary?\n"
"  * Groonga::Object#persistent?\n"
"  * Groonga::ObjectClosed\n"
"  * Groonga::Context.[]\n"
"  * Groonga::Table#column_value\n"
"  * Groonga::Table#set_column_value\n"
"* Changed API\n"
"  * Groonga::Table#select, Groonga::Column#select\n"
"    * They also accept Groonga::Expression\n"
"    * Added :syntax option that specifies grn expression syntax\n"
"  * Groonga::Table#open_cursor\n"
"    * Added :offset option that specifies offset.\n"
"    * Added :limit option that specifies max number of records.\n"
"  * Changed Groonga::Expression.parse options:\n"
"    * (nil (default) -> :column) -> (nil (default) -> :query)\n"
"    * :column -> removed\n"
"    * :table -> :query\n"
"    * :table_query -> :query\n"
"    * :expression -> :script\n"
"    * :language -> :script\n"
"  * Groonga::Table#define_column, Groonga::Table#define_index_column\n"
"    * Defined column becomes persistent table by default\n"
"  * Groonga::Table#[] -> Groonga::Table#value\n"
"  * Groonga::Table#[]= -> Groonga::Table#set_value\n"
"  * Groonga::Table#find -> Groonga::Table#[]\n"
"  * Groonga::Table#find -> obsolete\n"
"  * Groonga::Table#[]= -> removed\n"
"  * Groonga::Table::KeySupport#[]= is alias of Groonga::Table::KeySupport#add\n"
"  * Changed exception class to Groonga::NoSuchColumn from\n"
"    Groonga::InvalidArgument when Groonga::Record accesses nonexistent\n"
"    a column.\n"
"* Bug fixes\n"
"  * Fixed a bug that context isn't passed to schema [dara]\n"
"  * Fixed a bug that Groonga::PatriciaTrie#tag_keys doesn't return\n"
"    that last text. [Ryo Onodera]\n"
"* Added --with-debug option to extconf.rb for debug build.\n"
"* Fixed a bug that Ruby 1.9.1 may fail extconf.rb."
msgstr ""
"* groonga 0.1.5対応\n"
"* APIを追加\n"
"* Groonga::Object#context\n"
"* Groonga::Record#n_sub_records\n"
"* Groonga::Context#send\n"
"* Groonga::Context#receive\n"
"* Groonga::PatriciaTrie#prefix_search [Tasuku SUENAGA]\n"
"* Groonga::Object#path [Ryo Onodera]\n"
"* Groonga::Object#lock [Tasuku SUENAGA]\n"
"* Groonga::Object#unlock [Tasuku SUENAGA]\n"
"* Groonga::Object#locked? [Tasuku SUENAGA]\n"
"* Groonga::Object#temporary?\n"
"* Groonga::Object#persistent?\n"
"* Groonga::ObjectClosed\n"
"* Groonga::Context.[]\n"
"* Groonga::Table#column_value\n"
"* Groonga::Table#set_column_value\n"
"* APIを変更。\n"
"* Groonga::Table#select, Groonga::Column#select\n"
"* Groonga::Expressionも受け付けるようになった\n"
"* grn式のシンタックスを指定する:syntaxオプションの追加\n"
"* Groonga::Table#open_cursor\n"
"* 開始位置を指定する:offsetオプションの追加\n"
"* 最大レコード数を指定する:limitオプションの追加\n"
"* Groonga::Expression.parseオプションの変更:\n"
"* (nil (default) → :column) → (nil (default) → :query)\n"
"* :column → 削除\n"
"* :table → :query\n"
"* :table_query → :query\n"
"* :expression → :script\n"
"* :language → :script\n"
"* Groonga::Table#define_column, Groonga::Table#define_index_column\n"
"* 永続テーブルをデフォルトにした\n"
"* Groonga::Table#[] → Groonga::Table#value\n"
"* Groonga::Table#[]= → Groonga::Table#set_value\n"
"* Groonga::Table#find → Groonga::Table#[]\n"
"* Groonga::Table#find → obsolete\n"
"* Groonga::Table#[]= → 削除\n"
"* Groonga::Table::KeySupport#[]=はGroonga::Table::KeySupport#addの別名\n"
"* Groonga::Recordで存在しないカラムにアクセスしたときの例外をGroonga::InvalidArgumentからGroonga::NoSu"
"chColumnに変更\n"
"* Bug fixes\n"
"* スキーマにコンテキストが伝搬されない問題の修正 [dara]\n"
"* Groonga::PatriciaTrie#tag_keysが最後のテキストを返さない問題の修正 [Ryo Onodera]\n"
"* extconf.rbにデバッグモードでビルドする--with-debugオプションを追加\n"
"* Ruby 1.9.1でextconf.rbが失敗する問題の修正"

msgid ""
"* dara\n"
"* Ryo Onodera\n"
"* Tasuku SUENAGA"
msgstr ""
"* daraさん\n"
"* Ryo Onoderaさん\n"
"* Tasuku SUENAGAさん"

msgid "## 0.0.7: 2009-10-02"
msgstr ""

msgid ""
"* Supported groonga 0.1.4\n"
"* Added API\n"
"  * Groonga::PatriciaTrie#scan\n"
"  * Groonga::PatriciaTrie#tag_keys\n"
"  * Groonga::Expression#snippet\n"
"  * Groonga::Object#append\n"
"  * Groonga::Object#prepend"
msgstr ""
"* groonga 0.1.4対応\n"
"* APIを追加\n"
"  * Groonga::PatriciaTrie#scan\n"
"  * Groonga::PatriciaTrie#tag_keys\n"
"  * Groonga::Expression#snippet\n"
"  * Groonga::Object#append\n"
"  * Groonga::Object#prepend"

msgid "## 0.0.6: 2009-07-31"
msgstr ""

msgid ""
"* Supported groonga 0.1.1.\n"
"* Fixed documents [id:mat_aki]\n"
"* Supported groonga expression for searching.\n"
"* Added API\n"
"  * Groonga::Table#union!\n"
"  * Groonga::Table#intersect!\n"
"  * Groonga::Table#differene!\n"
"  * Groonga::Table#merge!\n"
"* Provided tar.gz [id:m_seki]\n"
"* Fixed memory leaks"
msgstr ""
"* groonga 0.1.1対応\n"
"* ドキュメントの修正 [id:mat_aki]\n"
"* Groonga::Table#selectでのgrn式対応\n"
"* APIを追加\n"
"  * Groonga::Table#union!\n"
"  * Groonga::Table#intersect!\n"
"  * Groonga::Table#differene!\n"
"  * Groonga::Table#merge!\n"
"  * tar.gzも提供 [id:m_seki]\n"
"* メモリリークの修正"

msgid "## 0.0.3: 2009-07-18"
msgstr ""

msgid ""
"* Added Groonga::Table::KeySupport#has_key? [#26145] [Tasuku SUENAGA]\n"
"* Groonga::Record#[] raises an exception for nonexistent\n"
"  column name. [#26146] [Tasuku SUENAGA]\n"
"* Supported 32bit environment [niku]\n"
"* Added a test for N-gram index search [dara]\n"
"* Added APIs\n"
"  * Groonga::Record#incemrent!\n"
"  * Groonga::Record#decemrent!\n"
"  * Groonga::Record#lock\n"
"  * Groonga::Table#lock\n"
"  * Groonga::Schema: A DSL for schema definition\n"
"  * Groonga::Expression"
msgstr ""
"* Groonga::Table::KeySupport#has_key?の追加 [#26145] [Tasuku SUENAGA]\n"
"* カラム名が存在しない場合はGroonga::Record#[]が例外をあげるように変更。 [#26146] [Tasuku SUENAGA]\n"
"* 32ビット環境をサポート [niku]\n"
"* N-gramインデックスサーチのテストを追加 [dara]\n"
"* APIを追加\n"
"  * Groonga::Record#incemrent!\n"
"  * Groonga::Record#decemrent!\n"
"  * Groonga::Record#lock\n"
"  * Groonga::Table#lock\n"
"  * Groonga::Schema: スキーマ定義用DSL\n"
"  * Groonga::Expression"

msgid "## 0.0.2: 2009-06-04"
msgstr ""

msgid ""
"* Supported groonga 0.0.8 [mori]\n"
"* Improved preformance: cache key, value, domain and range\n"
"* Improved API\n"
"* Added documents\n"
"* Supported Ruby 1.9\n"
"* Bug fixes:\n"
"  * Fixed install process [Tasuku SUENAGA]\n"
"  * Fixed memory leaks"
msgstr ""
"* groonga 0.0.8対応 [mori]\n"
"* 性能向上: キー、値、ドメイン、レンジをキャッシュ\n"
"* APIを改良\n"
"* ドキュメントを追加\n"
"* Ruby 1.9対応\n"
"* Bug fixes:\n"
"* Fixed install process [Tasuku SUENAGA]\n"
"* メモリリークの修正"

msgid "## 0.0.1: 2009-04-30"
msgstr ""

msgid "* Initial release!"
msgstr "* 最初のリリース！"

msgid "# Release"
msgstr ""

msgid "This document describes how to release Rroonga."
msgstr "Rroongaのリリース方法について説明します。"

msgid "## 1. Summarize the changes for this release"
msgstr ""

msgid "### Show the commits since the latest release"
msgstr ""

msgid "    % git log -p --reverse <the latest release version>..HEAD"
msgstr ""

msgid "For example:"
msgstr ""

msgid "    % git log -p --reverse 4.0.3..HEAD"
msgstr ""

msgid "Or"
msgstr ""

msgid "[Commits on GitHub](https://github.com/ranguba/rroonga/commits/master)"
msgstr ""

msgid "### Extract the commits related to users"
msgstr ""

msgid "#### Including"
msgstr ""

msgid ""
"* Changed specifications\n"
"* Added new features\n"
"* ..."
msgstr ""

msgid "#### Excluding"
msgstr ""

msgid ""
"* Refactorings\n"
"* Tests\n"
"* ..."
msgstr ""

msgid "### Categorize"
msgstr ""

msgid ""
"* Improvements: new features, improved behavior, ...\n"
"* Fixes: fixed bugs, ..."
msgstr ""

msgid ""
"If a contributor name is in a commit log, create \"Thanks\" group and write the "
"name to the group."
msgstr ""

msgid "### Template for a new release for news.textile"
msgstr ""

msgid "    ## X.X.X: YYYY-MM-DD {#version-x-x-x}"
msgstr ""

msgid "    ### Improvements"
msgstr "    ### 改善"

msgid "    * ..."
msgstr ""

msgid "    ### Fixes"
msgstr "    ### 修正"

msgid "    ### Thanks"
msgstr "    ### 感謝"

msgid "## 2. Translate"
msgstr ""

msgid "### 2-1. Update PO"
msgstr ""

msgid "Update PO files (e.g.: ja.po) by the following command:"
msgstr ""

msgid "    $ rake reference:po:update"
msgstr ""

msgid "### 2-2. Edit PO"
msgstr ""

msgid "Then, edit PO files:"
msgstr ""

msgid ""
"* Edit msgid and msgstr.\n"
"* Search fuzzy.\n"
"  * Edit if necessary.\n"
"  * Then, remove fuzzy."
msgstr ""

msgid "## 3. Upload gem to RubyGems.org"
msgstr ""

msgid "### 3-1. Bump version if need"
msgstr ""

msgid ""
"Change `RB_GRN_MAJOR_VERSION`, `RB_GRN_MINOR_VERSION` and `RB_GRN_MICRO_VERSIO"
"N`\n"
"to the same version of the latest Groonga."
msgstr ""

msgid "    $ $EDITOR ext/groonga/rb-grn.h"
msgstr ""

msgid "### 3-2. Release"
msgstr ""

msgid "    $ rake release"
msgstr ""

msgid "### 3-3. Bump version"
msgstr ""

msgid ""
"Increment `RB_GRN_MICRO_VERSION`.\n"
"If current `RB_GRN_MICRO_VERSION` is `9`, increment `RB_GRN_MINOR_VERSION` and"
" reset `RB_GRN_MICRO_VERSION` to `0`."
msgstr ""

msgid "## 4. Update ranguba.org"
msgstr ""

msgid "### 4-1. Update the latest version and release date"
msgstr ""

msgid "Update version and release date in ranguba.org (index.html、ja/index.html)."
msgstr ""

msgid "First, clone ranguba.org repository by the following command:"
msgstr ""

msgid ""
"    $ cd ..\n"
"    $ git clone git@github.com:ranguba/ranguba.org.git\n"
"    $ cd ranguba.org"
msgstr ""

msgid ""
"    $ cd ../ranguba.org\n"
"    $ git pull"
msgstr ""

msgid "Second, update the latest version and release date:"
msgstr ""

msgid "    $ $EDITOR _config.yml"
msgstr ""

msgid "### 4-2. Update reference manual"
msgstr ""

msgid "First, copy references to reference html directory in ranguba.org:"
msgstr ""

msgid ""
"    $ cd ../rroonga\n"
"    $ rake release:references:upload"
msgstr ""

msgid "Second, commit and push the html directory:"
msgstr ""

msgid ""
"    $ cd ../ranguba.org\n"
"    $ git add .\n"
"    $ git commit\n"
"    $ git push"
msgstr ""

msgid "## 5. Update BloGroonga (blog)"
msgstr ""

msgid ""
"Please refer to [Groonga document](https://groonga.org//docs/contribution/deve"
"lopment/release.html#blogroonga) \n"
"for how to update BloGroonga."
msgstr ""

msgid "## 6. Announce"
msgstr ""

msgid ""
"* [GitHub Discussions](https://github.com/ranguba/rroonga/discussions/categori"
"es/releases) (English/Japanese)\n"
"* [Twitter](https://twitter.com/groonga) (English/Japanese)\n"
"* [Facebook](https://ja-jp.facebook.com/groonga/) (English/Japanese)\n"
"* ruby-talk (English)\n"
"  * e.g.: http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/428992\n"
"* ruby-list (Japanese)\n"
"  * e.g.: http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/50025"
msgstr ""

msgid "# Tutorial"
msgstr "# チュートリアル"

msgid "This page introduce how to use Rroonga via a simple application making."
msgstr "このページでは簡単なアプリケーションの作成を通してRroongaの操作方法を紹介します。"

msgid "You can install Rroonga in your compter with RubyGems."
msgstr "RroongaはRubyGemsでインストールできます。"

msgid "## Create Database"
msgstr "## データベースの作成"

msgid ""
"Let's create database for simple bookmark application.\n"
"Please execute irb with loading Rroonga with this command:"
msgstr "簡単なブックマークアプリケーション用のデータベースを作ってみます。以下のようにRroongaを読み込んでirbを起動します。"

msgid ""
"    % irb --simple-prompt -r groonga\n"
"    >>"
msgstr ""

msgid "Then, try to create database in a file."
msgstr "それでは、ファイルを指定してデータベースを作成します。"

msgid ""
"    >> Groonga::Database.create(:path => \"/tmp/bookmark.db\")\n"
"    => #<Groonga::Database ...>"
msgstr ""

msgid ""
"From now, the created database is used implicitly.\n"
"You don't have to be aware of it after you created a database first."
msgstr "ここで作成したデータベースは、これ以降、暗黙のうちに利用されます。最初にデータベースを作成したら特に意識する必要はありません。"

msgid "## Define table"
msgstr "## テーブルを定義"

msgid "Groonga supports 4 types of tables."
msgstr "Groongaには以下の4種類のテーブルがあります。"

msgid ""
"Groonga::Hash\n"
":   Hash table. It manages records via each primary key. It supports\n"
"    very quickly exact match search."
msgstr ""

msgid ""
"Groonga::PatriciaTrie\n"
":   Patricia Trie. It supports some search such as predictive search and\n"
"    common prefix search, but it provides a little slowly exact match search\n"
"    than Groonga::Hash. It provides cursor to take records in ascending\n"
"    or descending order."
msgstr ""

msgid ""
"Groonga::DoubleArrayTrie\n"
":   Double Array Trie. It requires large spaces rather than other\n"
"    tables, but it can update key without ID change. It provides exract\n"
"    match search, predictive search and common prefix search and cursor\n"
"    like Groonga::PatriciaTrie."
msgstr ""

msgid ""
"Groonga::Array\n"
":   Array. It doesn't have primary keys. It manages records by ID."
msgstr ""
"Groonga::Array\n"
":   配列。主キーの存在しないテーブルです。レコードはIDによって識別します。"

msgid ""
"Now, you use Groonga::Hash and create the table named `Items`. The type\n"
"of its primary key is String."
msgstr "ここではハッシュテーブルを利用して、 `Items` という名前のテーブルを作成します。キーは文字列とします。"

msgid ""
"    >> Groonga::Schema.create_table(\"Items\", :type => :hash)\n"
"    => [...]"
msgstr ""

msgid ""
"You have `Items` table by this code.\n"
"You can refer the defined table with Groonga.[] like below:"
msgstr "これで `Items` という名前のテーブルが作成できました。定義したテーブルはGroonga.[]で参照できます。"

msgid ""
"    >> items = Groonga[\"Items\"]\n"
"    => #<Groonga::Hash ...>"
msgstr ""

msgid ""
"You can treat it like Hash.\n"
"For example, let's type `items.size` to get the number of records in\n"
"the table."
msgstr "テーブルはRubyのHashのように扱えます。例えば、以下のように `items.size` でテーブルに登録されているレコードの件数を取得できます。"

msgid ""
"    >> items.size\n"
"    => 0"
msgstr ""

msgid "## Add records"
msgstr "## レコードを追加"

msgid "Let's add records to `Items` table."
msgstr "`Items` テーブルにレコードを追加します。"

msgid ""
"    >> items.add(\"http://en.wikipedia.org/wiki/Ruby\")\n"
"    => #<Groonga::Record ...>\n"
"    >> items.add(\"http://www.ruby-lang.org/\")\n"
"    => #<Groonga::Record ...>"
msgstr ""

msgid "Please check the number of records. It increases from 0 to 2."
msgstr "件数を確認すると確かに0件から2件増えています。<"

msgid ""
"    >> items.size\n"
"    => 2"
msgstr ""

msgid "If you can get record by primary key, type like below:"
msgstr "主キーを指定してレコードを取り出す時には以下のようにします。"

msgid ""
"    >> items[\"http://en.wikipedia.org/wiki/Ruby\"]\n"
"    => #<Groonga::Record ...>"
msgstr ""

msgid "## Full text search"
msgstr "## 全文検索を行う"

msgid "Let's add item's title to full text search."
msgstr "各itemのタイトル文字列を登録して、全文検索できるようにしてみましょう。"

msgid "first, you add the `Text` type column \"`title`\" to `Items` table."
msgstr "まず `Items` テーブルに `title` という名前のカラムを追加します。ここでは、 `Text` 型のデータを持つカラムとして定義します。"

msgid ""
"    >> Groonga::Schema.change_table(\"Items\") do |table|\n"
"    ?>     table.text(\"title\")\n"
"    >>   end\n"
"    => [...]"
msgstr ""

msgid ""
"Defined columns is named as `#{TABLE_NAME}.#{COLUMN_NAME}`.\n"
"You can refer them with {Groonga.[]} as same as tables."
msgstr ""
"定義したカラムは `#{テーブル名}.#{カラム名}` という名前になります。\n"
"テーブルと同じように {Groonga.[]} で参照できます。"

msgid ""
"    >> title_column = Groonga[\"Items.title\"]\n"
"    => #<Groonga::VariableSizeColumn ...>"
msgstr ""

msgid ""
"Secondly, let's add the table containing terms from splited from texts.\n"
"Then you define the `Terms` for it."
msgstr ""
"次に、全文検索するために、文字列を分解して得られる各単語を格納するためのテーブルを別途用意します。ここでは `Terms` という名前でテーブルを定義します"
"。"

msgid ""
"    >> Groonga::Schema.create_table(\"Terms\",\n"
"    ?>                              :type => :patricia_trie,\n"
"    ?>                              :normalizer => :NormalizerAuto,\n"
"    ?>                              :default_tokenizer => \"TokenBigram\")"
msgstr ""

msgid ""
"You specify `:default_tokenzier => \"TokenBigram\"` for \"Tokenizer\" in\n"
"the above code.\n"
"\"Tokenizer\" is the object to split terms from texts. The default value\n"
"for it is none.\n"
"Full text search requires a tokenizer, so you specify \"Bigram\", a type\n"
"of N-gram.\n"
"Full text search with N-gram uses splited N characters and their\n"
"position in texts. \"N\" in N-gram specifies the number of each terms.\n"
"Groonga supports Unigram (N=1), Bigram (N=2) and Trigram (N=3)."
msgstr ""
"ここでは、トークナイザとして `:default_tokenzier => \"TokenBigram\"` を指定しています。トークナイザとは文字列を単語に分"
"解するオブジェクトのことです。デフォルトではトークナイザは指定されていません。全文検索を利用するためにはトークナイザを指定する必要があるので、ここではN-g"
"ramの一種であるバイグラムを指定しています。\n"
"\n"
"N-gramを利用した全文検索では、分解したN文字とその出現位置を利用して全文検索を行います。N-gramのNは文字列を何文字毎に分解するかの文字数になりま"
"す。Groongaは1文字で分解するユニグラム、2文字のバイグラム、3文字のトリグラムをサポートしています。"

msgid ""
"You also specify `:normalizer => :NormalizerAuto` to search texts with\n"
"ignoring the case."
msgstr "また、大文字小文字の区別なく検索するために `:normalizer => :NormalizerAuto` も指定しています。"

msgid ""
"Now, you ready table for terms, so you define the index of\n"
"`Items.tiltle` column."
msgstr "単語格納用テーブルの準備ができたので、 `Items` テーブルの `title` カラムに対するインデックスを定義します。"

msgid ""
"    >> Groonga::Schema.change_table(\"Terms\") do |table|\n"
"    ?>     table.index(\"Items.title\")\n"
"    >>   end\n"
"    => [...]"
msgstr ""

msgid ""
"You may feel a few unreasonable code. The index of `Items` table's\n"
"column is defined as the column in `Terms`."
msgstr "少し違和感を感じるかもしれませんが、 `Items` テーブルのカラムに対するインデックスは、 `Terms` テーブルのカラムとして定義します。"

msgid ""
"When a record is added to `Items`, groonga adds records associated\n"
"each terms in it to `Terms` automatically."
msgstr "`Items` にレコードが登録されると、その中に含まれる単語に該当するレコードが `Terms` に自動的に追加されるようになります。"

msgid ""
"`Terms` is a few particular table, but you can add some columns to term\n"
"table such as `Terms` and manage many attributes of each terms. It is\n"
"very useful to process particular search."
msgstr ""
"`Terms` は、文書に含まれる語彙に相当する、やや特殊なテーブルだと言えます。しかし、他のテーブルと同様に語彙テーブルには自由にカラムを追加し、単語毎の"
"様々な属性を管理することができます。これはある種の検索処理を行う際には非常に便利に機能します。"

msgid ""
"Now, you finished table definition.\n"
"Let's put some values to `title` of each record you added before."
msgstr "これでテーブルの定義は完了です。先ほど登録した各レコードの `title` カラムに値をセットします。"

msgid ""
"    >> items[\"http://en.wikipedia.org/wiki/Ruby\"].title = \"Ruby\"\n"
"    => \"Ruby\"\n"
"    >> items[\"http://www.ruby-lang.org/\"].title = \"Ruby Programming Language\"\n"
"    \"Ruby Programming Language\""
msgstr ""

msgid "Now, you can do full text search like above:"
msgstr "ここまでのコードより、以下のようにして検索することができます。"

msgid ""
"    >> ruby_items = items.select {|record| record.title =~ \"Ruby\"}\n"
"    => #<Groonga::Hash ..., normalizer: (nil)>"
msgstr ""

msgid ""
"Groonga returns the search result as Groonga::Hash.\n"
"Keys in this hash table is records of hitted `Items`."
msgstr "検索結果はGroonga::Hashで返されます。ハッシュのキーに見つかった `Items` のレコードが入っています。"

msgid ""
"    >> ruby_items.collect {|record| record.key.key}\n"
"    => [\"http://en.wikipedia.org/wiki/Ruby\", \"http://www.ruby-lang.org/\"]"
msgstr ""

msgid ""
"In above example, you get records in `Items` with `record.key`, and\n"
"keys of them with `record.key.key`."
msgstr ""
"上の例では `record.key` で `Items` のレコードを取得して、さらにそのキーを指定して（ `record.key.key` ）で `Ite"
"ms` のキーを返しています。"

msgid "You can access a refered key in records briefly with `record[\"_key\"]`."
msgstr "`record[\"_key\"]` でアクセスすると自動的に参照しているレコードを辿っていき、参照先のキーにアクセスできます。"

msgid ""
"    >> ruby_items.collect {|record| record[\"_key\"]}\n"
"    => [\"http://en.wikipedia.org/wiki/Ruby\", \"http://www.ruby-lang.org/\"]"
msgstr ""

msgid "## Improve the simple bookmark application"
msgstr "## シンプルなブックマークアプリの拡張"

msgid ""
"Let's try to improve this simple application a little. You can create\n"
"bookmark application for multi users and they can comment to each\n"
"bookmarks."
msgstr "ここまでで作った単機能のアプリケーションをもう少し拡張して、複数のユーザが、それぞれにコメントを記入できるブックマークアプリケーションにしてみましょう。"

msgid "First, you add tables for users and for comments like below:"
msgstr "まず、ユーザ情報とコメント情報を格納するテーブルを追加して、下図のようなテーブル構成にします。"

msgid "![Sample schema](images/sample-schema.png)"
msgstr ""

msgid "Let's add the table for users, `Users`."
msgstr "まず、 ユーザ情報を格納する `Users` テーブルを追加します。"

msgid ""
"    >> Groonga::Schema.create_table(\"Users\", :type => :hash) do |table|\n"
"    ?>     table.text(\"name\")\n"
"    >>   end\n"
"    => [...]"
msgstr ""

msgid "Next, let's add the table for comments as `Comments`."
msgstr "次に、コメントの情報を格納する `Comments` テーブルを追加します。"

msgid ""
"    >> Groonga::Schema.create_table(\"Comments\") do |table|\n"
"    ?>     table.reference(\"item\")\n"
"    >>   table.reference(\"author\", \"Users\")\n"
"    >>   table.text(\"content\")\n"
"    >>   table.time(\"issued\")\n"
"    >>   end\n"
"    => [...]"
msgstr ""

msgid ""
"Then you define the index of `content` column in `Comments` for full\n"
"text search."
msgstr "`Comments` テーブルの `content` カラムを全文検索できるようにインデックスを定義します。"

msgid ""
"    >> Groonga::Schema.change_table(\"Terms\") do |table|\n"
"    ?>     table.index(\"Comments.content\")\n"
"    >>   end\n"
"    => [...]"
msgstr ""

msgid "You finish table definition by above code."
msgstr "これでテーブルが定義できました。"

msgid "Secondly, you add some users to `Users`."
msgstr "続いてユーザを何人か `Users` に追加します。"

msgid ""
"    >> users = Groonga[\"Users\"]\n"
"    => #<Groonga::Hash ...>\n"
"    >> users.add(\"alice\", :name => \"Alice\")\n"
"    => #<Groonga::Record ...>\n"
"    >> users.add(\"bob\", :name => \"Bob\")\n"
"    => #<Groonga::Record ...>"
msgstr ""

msgid ""
"Now, let's write the process to bookmark by a user.\n"
"You assume that the user, `moritan`, bookmark a page including\n"
"infomation related Ruby."
msgstr ""
"ここで、実際にユーザがブックマークを貼る時の処理を実行してみましょう。ユーザ `moritan` が、Ruby関連のとあるページをブックマークしたと想定しま"
"す。"

msgid "First, you check if the page has been added `Items` already."
msgstr "まず対象のページが `Items` テーブルに登録済かどうか調べます。"

msgid ""
"    >> items.has_key?(\"http://www.ruby-doc.org/\")\n"
"    => false"
msgstr ""

msgid "The page hasn't been added, so you add it to `Items`."
msgstr "未登録でした。なので、まず当該ページを `Items` に登録します。"

msgid ""
"    >> items.add(\"http://www.ruby-doc.org/\",\n"
"    ?>           :title => \"Ruby-Doc.org: Documenting the Ruby Language\")\n"
"=> #<Groonga::Record ...>"
msgstr ""

msgid ""
"Next, you add the record to `Comments`. This record contains this page\n"
"as its `item` column."
msgstr "次に、登録したitemを `item` カラムの値に指定して `Comments` にレコードを登録します。"

msgid ""
"    >> require \"time\"\n"
"    => true\n"
"    >> comments = Groonga[\"Comments\"]\n"
"    => #<Groonga::Array ...>\n"
"    >> comments.add(:item => \"http://www.ruby-doc.org/\",\n"
"    ?>              :author => \"alice\",\n"
"    ?>              :content => \"Ruby documents\",\n"
"    ?>              :issued => Time.parse(\"2010-11-20T18:01:22+09:00\"))\n"
"    => #<Groonga::Record ...>"
msgstr ""

msgid "## Define methods for this process"
msgstr "## メソッド化"

msgid "For usefull, you define methods for above processes."
msgstr "このあとの利便性のため、上記の一連の手続きをメソッドにまとめてみます。"

msgid ""
"    >> @items = items\n"
"    => #<Groonga::Hash ...>\n"
"    >> @comments = comments\n"
"    => #<Groonga::Array ...>\n"
"    >> def add_bookmark(url, title, author, content, issued)\n"
"    >>   item = @items[url] || @items.add(url, :title => title)\n"
"    >>   @comments.add(:item => item,\n"
"    ?>                 :author => author,\n"
"    ?>                 :content => content,\n"
"    ?>                 :issued => issued)\n"
"    >>   end\n"
"    => nil"
msgstr ""

msgid ""
"You assign `items` and `comments` to each instance variable, so you can\n"
"use them in `add_bookmark` method."
msgstr "`items` と `comments` をインスタンス変数に代入しているのはメソッド内からでも見えるようにするためです。"

msgid "`add_bookmark` executes processes like below:"
msgstr "`add_bookmark` は以下のような手順を実行しています。"

msgid ""
"* Check if the record associated the page exists in `Items` table.\n"
"* If not, add the record to it.\n"
"* Add the record to `Comments` table."
msgstr ""
"* `Items` テーブルに該当ページのレコードがあるかどうか調べる。\n"
"* レコードがなければ追加する。\n"
"* `Comments` テーブルにレコードを登録する。"

msgid "With this method, lets bookmark some pages."
msgstr "作成したメソッドを呼び出していくつかブックマークを登録してみましょう。"

msgid ""
"    >> add_bookmark(\"https://rubygems.org/\",\n"
"    ?>              \"RubyGems.org | your community gem host\", \"alice\", \"Ruby g"
"ems\",\n"
"    ?>              Time.parse(\"2010-10-07T14:18:28+09:00\"))\n"
"    => #<Groonga::Record ...>\n"
"    >> add_bookmark(\"http://ranguba.org/\",\n"
"    ?>              \"Fulltext search by Ruby with groonga - Ranguba\", \"bob\",\n"
"    ?>              \"Ruby groonga fulltextsearch\",\n"
"    ?>              Time.parse(\"2010-11-11T12:39:59+09:00\"))\n"
"    => #<Groonga::Record ...>\n"
"    >> add_bookmark(\"http://www.ruby-doc.org/\",\n"
"    ?>              \"ruby-doc\", \"bob\", \"ruby documents\",\n"
"    ?>              Time.parse(\"2010-07-28T20:46:23+09:00\"))\n"
"    => #<Groonga::Record ...>"
msgstr ""

msgid "## Full text search part 2"
msgstr "## 全文検索その2"

msgid "Let's do full text search for added records."
msgstr "登録したレコードに対して全文検索を実行してみます。"

msgid ""
"    >> records = comments.select do |record|\n"
"    ?>     record[\"content\"] =~ \"Ruby\"\n"
"    >>   end\n"
"    => #<Groonga::Hash ...>\n"
"    >> records.each do |record|\n"
"    ?>     comment = record\n"
"    >>   p [comment.id,\n"
"    ?>       comment.issued,\n"
"    ?>       comment.item.title,\n"
"    ?>       comment.author.name,\n"
"    ?>       comment.content]\n"
"    >>   end\n"
"    [1, 2010-11-20 18:01:22 +0900, \"Ruby-Doc.org: Documenting the Ruby Languag"
"e\", \"Alice\", \"Ruby documents\"]\n"
"    [2, 2010-10-07 14:18:28 +0900, \"RubyGems.org | your community gem host\", \""
"Alice\", \"Ruby gems\"]\n"
"    [3, 2010-11-11 12:39:59 +0900, \"Fulltext search by Ruby with groonga - Ran"
"guba\", \"Bob\", \"Ruby groonga fulltextsearch\"]\n"
"    [4, 2010-07-28 20:46:23 +0900, \"Ruby-Doc.org: Documenting the Ruby Languag"
"e\", \"Bob\", \"ruby documents\"]"
msgstr ""

msgid ""
"You can access the columns with the same name method as each them.\n"
"These methods suport to access the complex data type.\n"
"(In usually RDB, you should namage JOIN tables, `Items`, `Comments`,\n"
"`Users`.)"
msgstr ""
"カラム名と同じメソッドでカラムへのアクセスできます。複合データ型の要素も再帰的に辿ることができます。（同様の出力を普通のRDBで実現するためには、 `Ite"
"ms` テーブル、 `Comments` テーブル、 `Users` テーブルのJOIN操作が必要になります。）"

msgid ""
"The search is finished when the first sentence in this codes. The\n"
"results of this search is the object as records set."
msgstr "上の式の中で、肝心の検索処理は、第一引数の式を評価する時点で完了していて、レコードセットオブジェクトとしてメモリに蓄積されています。"

msgid ""
"    >> records\n"
"    #<Groonga::Hash ..., size: <4>>"
msgstr ""

msgid ""
"You can arrange this records set before output.\n"
"For example, sort these records in the descending order by date."
msgstr ""
"レコードセットは、出力する前に様々に加工することができます。\n"
"以下は、日付で降順にソートしてから出力した例です。"

msgid ""
"    >> records.sort([{:key => \"issued\", :order => \"descending\"}]).each do |rec"
"ord|\n"
"    ?>     comment = record\n"
"    >>   p [comment.id,\n"
"    ?>       comment.issued,\n"
"    ?>       comment.item.title,\n"
"    ?>       comment.author.name,\n"
"    ?>       comment.content]\n"
"    >>   end\n"
"    [1, 2010-11-20 18:01:22 +0900, \"Ruby-Doc.org: Documenting the Ruby Languag"
"e\", \"Alice\", \"Ruby documents\"]\n"
"    [2, 2010-11-11 12:39:59 +0900, \"Fulltext search by Ruby with groonga - Ran"
"guba\", \"Bob\", \"Ruby groonga fulltextsearch\"]\n"
"    [3, 2010-10-07 14:18:28 +0900, \"RubyGems.org | your community gem host\", \""
"Alice\", \"Ruby gems\"]\n"
"    [4, 2010-07-28 20:46:23 +0900, \"Ruby-Doc.org: Documenting the Ruby Languag"
"e\", \"Bob\", \"ruby documents\"]\n"
"    => [...]"
msgstr ""

msgid "Let's group the result by each item for easy view."
msgstr "同じitemが何度も出てくると検索結果が見にくいので、item毎にグループ化してみます。"

msgid ""
"    >> records.group(\"item\").each do |record|\n"
"    ?>     item = record.key\n"
"    >>   p [record.n_sub_records,\n"
"    ?>       item.key,\n"
"    ?>       item.title]\n"
"    >>   end\n"
"    [2, \"http://www.ruby-doc.org/\", \"Ruby-Doc.org: Documenting the Ruby Langua"
"ge\"]\n"
"    [1, \"https://rubygems.org/\", \"RubyGems.org | your community gem host\"]\n"
"    [1, \"http://ranguba.org/\", \"Fulltext search by Ruby with groonga - Ranguba"
"\"]\n"
"    => nil"
msgstr ""

msgid ""
"`n_sub_records` is the number of records in each group.\n"
"It is similar value as count() function of a query including \"GROUP\n"
"BY\" in SQL."
msgstr ""
"`n_sub_records` というのはグループ化した単位に含まれるレコードの件数を示します。SQLで言えば、GROUP BY句を含むクエリのcount関"
"数のような働きです。"

msgid "## more complex search"
msgstr "## 少し複雑な検索"

msgid "Now, you challenge the more useful search."
msgstr "さらに実用的な検索を考えてみましょう。"

msgid "You should calcurate goodness of fit of search explicitly."
msgstr "ブックマークが大量に蓄積されるに従って、より的確に適合度を算出する必要性に迫られます。"

msgid ""
"You can use `Items.title` and `Comments.content` as search targets now.\n"
"`Items.title` is the a few reliable information taken from each\n"
"original pages. On the other hands, `Comments.content` is the less\n"
"reliable information because this depends on users of bookmark\n"
"application."
msgstr ""
"今のところ検索対象として利用できるのは `Items.title` と `Comments.content` ですが、 `Items.title` は元ペー"
"ジから得られるやや信頼できる情報なのに対して、 `Comments.content` はブックマークユーザが任意に設定できる情報で、やや信憑性に乏しいと言え"
"ます。しかし、再現率を確保するためにはユーザのコメントも是非対象に含めたいところです。"

msgid "Then, you search records with this policy:"
msgstr "そこで、以下のようなポリシーで検索を行うことにします。"

msgid ""
"* Search item matched `Items.title` or `Comments.content`.\n"
"* Add 10 times heavier weight to socres of each record matched\n"
"  `Items.title` than ones of `Comments.comment`.\n"
"* If multi `comment` of one item are matched keyword, specify the sum\n"
"  of scores of each `coments` as score of the item."
msgstr ""

msgid "On this policy, you try to type below:"
msgstr "以下のようにして、commentとitemとそれぞれに対する検索結果を求めます。"

msgid ""
"    >> ruby_comments = @comments.select {|record| record.content =~ \"Ruby\"}\n"
"    => #<Groonga::Hash ..., size: <4>\n"
"    >> ruby_items = @items.select do |record|\n"
"    ?>     target = record.match_target do |match_record|\n"
"    ?>       match_record.title * 10\n"
"    >>     end\n"
"    >>   target =~ \"Ruby\"\n"
"    >>   end\n"
"    #<Groonga::Hash ..., size: <4>>"
msgstr ""

msgid ""
"You group the results of *ruby_comments* in each item and union\n"
"*ruby_items* ."
msgstr "*ruby_comments* の結果をitem毎にグループ化し、*ruby_items* と対応させて出力します。"

msgid ""
"    >> ruby_items = ruby_comments.group(\"item\").union!(ruby_items)\n"
"    #<Groonga::Hash ..., size: <5>>\n"
"    >> ruby_items.sort([{:key => \"_score\", :order => \"descending\"}]).each do |"
"record|\n"
"    >>   p [record.score, record.title]\n"
"    >> end\n"
"    [22, \"Ruby-Doc.org: Documenting the Ruby Language\"]\n"
"    [11, \"Fulltext search by Ruby with groonga - Ranguba\"]\n"
"    [10, \"Ruby Programming Language\"]\n"
"    [10, \"Ruby\"]\n"
"    [1, \"RubyGems.org | your community gem host\"]"
msgstr ""

msgid "Then, you get the result."
msgstr "これで目的の結果が得られました。"

msgid ""
"キー、値、スコアなど種々の値へのアクセスをカプセル化した\n"
"オブジェクト。 {Groonga::Table#column} で取得できる。"
msgstr ""

# Groonga::ArrayCursor
msgid ""
"{Groonga::Array} に登録されているレコードを順番に取り出すため\n"
"のオブジェクト。利用できるメソッドは {Groonga::TableCursor} を\n"
"参照。"
msgstr ""

msgid ""
"各レコードがキーに関連付けられていないテーブル。レコードは\n"
"IDで識別する。"
msgstr ""

# @since
msgid "7.1.1"
msgstr ""

# Groonga::ColumnCache
msgid "This is a class for accelerating column value read."
msgstr ""

# Groonga::ColumnCache
msgid "{Groonga::FixSizeColumn} is only supported for now."
msgstr ""

msgid ""
"テーブルに情報を付加するためのオブジェクト。テーブルに複\n"
"数のカラムを定義することによりレコード毎に複数の情報を付\n"
"加することができる。"
msgstr ""

msgid "カラムには大きく分けて3種類ある。"
msgstr ""

# Groonga::Column
msgid ""
"- {Groonga::FixSizeColumn} :=\n"
"  固定長のデータを格納するカラム。 =:\n"
"- {Groonga::VariableSizeColumn} :=\n"
"  可変長のデータを格納するカラム。 =:\n"
"- {Groonga::IndexColumn} :=\n"
"  転置インデックスを格納するカラム。全文検索や参照元レコー\n"
"  ドの検索を行う場合はこのカラムを使用する。 =:"
msgstr ""

msgid ""
"固定長データ用カラム・可変長データ用カラムは1つのデータだ\n"
"けを格納するか複数のデータを格納するかを選ぶことができる。\n"
"1つのデータの場合はスカラ値、複数のデータの場合はスカラー\n"
"値を格納するという。"
msgstr ""

msgid ""
"カラムは名前を持ち、1つのテーブルでは同じカラム名を持つカ\n"
"ラムを複数定義することはできない。"
msgstr ""

# Groonga::Conf
msgid ""
"This class manages database global configurations. Each\n"
"configuration is key and value pair."
msgstr ""

msgid ""
"groonga全体に渡る情報を管理するオブジェクト。通常のアプリ\n"
"ケーションでは1つのコンテキストを作成し、それを利用する。\n"
"複数のコンテキストを利用する必要はない。"
msgstr ""

# Groonga::Context
msgid ""
"デフォルトで使用されるコンテキストは\n"
"{Groonga::Context.default} でアクセスできる。コンテキ\n"
"ストを指定できる箇所でコンテキストの指定を省略したり +nil+\n"
"を指定した場合は {Groonga::Context.default} が利用さ\n"
"れる。"
msgstr ""

msgid ""
"また、デフォルトのコンテキストは必要になると暗黙のうちに\n"
"作成される。そのため、コンテキストを意識することは少ない。"
msgstr ""

msgid ""
"暗黙のうちに作成されるコンテキストにオプションを指定する\n"
"場合は {Groonga::Context.default_options=} を使用\n"
"する。"
msgstr ""

# Groonga::DataColumn
msgid ""
"The superclass for data columns such as {Groonga::FixSizeColumn}\n"
"and {Groonga::VariableSizeColumn}."
msgstr ""

msgid "テーブルの集合を管理するためのオブジェクト。"
msgstr ""

msgid ""
"コンテキストに結びつけて使用する。通常、アプリケーション\n"
"毎に1つのコンテキストを利用するので、データベースも1つだ\n"
"け利用する。コンテキストと違い、データベースは暗黙のうち\n"
"に作成されないので明示的に作成する必要がある。"
msgstr ""

# @since
msgid "7.0.2"
msgstr ""

# Groonga::DefaultCache
msgid "This module provides the default cache related features."
msgstr ""

# Groonga::DoubleArrayTrieCursor
msgid ""
"{Groonga::DoubleArrayTrie} に登録されているレコードを順番に取り\n"
"出すためのオブジェクト。利用できるメソッドは\n"
"{Groonga::TableCursor} と {Groonga::TableCursor::KeySupport} を\n"
"参照。"
msgstr ""

msgid ""
"It's a table that manages records by double array\n"
"trie. It can change key without ID change. This feature\n"
"is supported by only Groonga::DoubleArrayTrie. But it\n"
"requires large spaces rather than other tables. It is\n"
"used by {Groonga::Database} for key management\n"
"internally. It's reasonable choice because number of\n"
"tables and columns in {Groonga::Database} (number of their\n"
"names equals to number of keys to be managed by\n"
"Groonga::DoubleArrayTrie) will be less than number of\n"
"records of user defined tables."
msgstr ""

msgid ""
"Groonga::DoubleArrayTrie supports exact match search,\n"
"predictive search and common prefix search like\n"
"{Groonga::PatriciaTrie} . It also supports cursor API."
msgstr ""

msgid ""
"オブジェクトにエンコーディング関連の機能を提供するモジュー\n"
"ル。"
msgstr ""

msgid ""
"groongaがサポートしてるエンコーディングが定義されてい\n"
"るモジュール。"
msgstr ""

msgid "エンコーディングの指定方法は以下の通り。"
msgstr ""

# Groonga::Encoding
msgid ""
"- +nil+ :=\n"
"    コンテキストと関連付けられているオブジェクトの場合（多\n"
"  くの場合）はコンテキストのエンコーディングを使用。"
msgstr ""

# Groonga::Encoding
msgid ""
"  それ以外のオブジェクトの場合（コンテキスト自身など）は\n"
"  groongaのビルド時に指定したエンコーディング\n"
"  （ {Groonga::Encoding::DEFAULT} ）を使用 =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:default+ :=\n"
"    groongaのビルド時に指定したエンコーディングを使用。\n"
"  {Groonga::Encoding::DEFAULT} =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:none+ :=\n"
"    エンコーディングを指定しない。{Groonga::Encoding::NONE} =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:euc_jp+ :=\n"
"    EUC-JPを使用。{Groonga::Encoding::EUC_JP} =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- @\"euc-jp\"@ :=\n"
"    +:euc_jp+と同じ。 =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:utf8+ :=\n"
"    UTF-8を使用。{Groonga::Encoding::UTF8} =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- @\"utf-8\"@ :=\n"
"    +:utf8+と同じ。 =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:sjis+ :=\n"
"    Shift_JISを使用。{Groonga::Encoding::SJIS} =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:shift_jis+ :=\n"
"    +:sjis+と同じ。 =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- @\"shift-jis\"@ :=\n"
"    +:sjis+と同じ。 =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:latin1+ :=\n"
"    Latin-1を使用。{Groonga::Encoding::LATIN1} =:"
msgstr ""

# Groonga::Encoding
msgid ""
"- +:koi8r+ :=\n"
"    KOI8-Rを使用。{Groonga::Encoding::KOI8R} =:"
msgstr ""

msgid "rroongaが発生する例外のスーパークラス。"
msgstr ""

msgid "1.2.3"
msgstr ""

msgid ""
"groongaレベルでは破棄されているが、Rubyレベルでは生き\n"
"ているオブジェクトにアクセスすると発生する。"
msgstr ""

# @deprecated
msgid "Use {Closed} instead since 1.2.3."
msgstr ""

msgid "存在しないカラムにアクセスすると発生する。"
msgstr ""

msgid "データの終端に達したときに発生する。"
msgstr ""

msgid "未知のエラーが発生したときに発生する。"
msgstr ""

msgid "操作が許可されていないときに発生する。"
msgstr ""

msgid "ファイルまたはディレクトリがないときに発生する。"
msgstr ""

msgid "プロセスがないときに発生する。"
msgstr ""

msgid "関数の実行中に中断されたときに発生する。"
msgstr ""

msgid "入出力エラーが起きたときに発生する。"
msgstr ""

msgid "デバイスまたはアドレスがないときに発生する。"
msgstr ""

msgid "引数の数が多すぎるときに発生する。"
msgstr ""

msgid "実行ファイルのフォーマットに問題があるときに発生する。"
msgstr ""

msgid "ファイルディスクリプタに問題があるときに発生する。"
msgstr ""

msgid "子プロセスがないときに発生する。"
msgstr ""

msgid "一時的にリソースを利用できないときに発生する。"
msgstr ""

msgid "領域が足りないときに発生する。"
msgstr ""

msgid "許可がないときに発生する。"
msgstr ""

msgid "アドレスに問題があるときに発生する。"
msgstr ""

msgid "リソースが使用中のときに発生する。"
msgstr ""

msgid "ファイルが存在しているときに発生する。"
msgstr ""

msgid "リンクに問題があるときに発生する。"
msgstr ""

msgid "デバイスがないときに発生する。"
msgstr ""

msgid "ディレクトリではないときに発生する。"
msgstr ""

msgid "ディレクトリのときに発生する。"
msgstr ""

msgid "引数に問題があるときに発生する。"
msgstr ""

msgid "システム全体で開いているファイルが多すぎるときに発生する。"
msgstr ""

msgid "開いているファイルが多すぎるときに発生する。"
msgstr ""

msgid "IO制御に問題があるときに発生する。"
msgstr ""

msgid "ファイルが大きすぎるときに発生する。"
msgstr ""

msgid "デバイスに空いている領域がないときに発生する。"
msgstr ""

msgid "seekに問題があるときに発生する。"
msgstr ""

msgid "ファイルシステムが読込専用のときに発生する。"
msgstr ""

msgid "リンクが多すぎるときに発生する。"
msgstr ""

msgid "パイプが壊れているときに発生する。"
msgstr ""

msgid "対象領域に問題があるときに発生する。"
msgstr ""

msgid "結果が多すぎるときに発生する。"
msgstr ""

msgid "リソースのデッドロックを回避したときに発生する。"
msgstr ""

msgid "メモリが足りないときに発生する。"
msgstr ""

msgid "ファイル名が長すぎるときに発生する。"
msgstr ""

msgid "ロックがないときに発生する。"
msgstr ""

msgid "関数を実装していないときに発生する。"
msgstr ""

msgid "ディレクトリが空でないときに発生する。"
msgstr ""

msgid "バイト列に問題があるときに発生する。"
msgstr ""

msgid "ソケットが初期化されていないときに発生する。"
msgstr ""

msgid "操作がブロックする可能性があるときに発生する。"
msgstr ""

msgid "アドレスを利用できないときに発生する。"
msgstr ""

msgid "ネットワークに問題があるときに発生する。"
msgstr ""

msgid "バッファがないときに発生する。"
msgstr ""

msgid "ソケットが接続済みのときに発生する。"
msgstr ""

msgid "ソケットが接続されていないときに発生する。"
msgstr ""

msgid "ソケットがすでに閉じられているときに発生する。"
msgstr ""

msgid "操作がタイムアウトしたときに発生する。"
msgstr ""

msgid "接続を拒否されたときに発生する。"
msgstr ""

msgid "範囲外のときに発生する。"
msgstr ""

msgid "トークナイザーに問題があったときに発生する。"
msgstr ""

msgid "ファイルに問題があったときに発生する。"
msgstr ""

msgid "フォーマットに問題があったときに発生する。"
msgstr ""

msgid "オブジェクトに問題があったときに発生する。"
msgstr ""

msgid "シンボリックリンクが多すぎるときに発生する。"
msgstr ""

msgid "ソケットではないときに発生する。"
msgstr ""

msgid "操作がサポートされていないときに発生する。"
msgstr ""

msgid "アドレスが使用中のときに発生する。"
msgstr ""

msgid "ZLibに問題があるときに発生する。"
msgstr ""

# Groonga::LZ4Error
msgid "LZ4に問題があるときに発生する。"
msgstr ""

msgid "スタックオーバーフロー時に発生する。"
msgstr ""

msgid "構文に問題があるときに発生する。"
msgstr ""

msgid "再試行回数が最大数に達したときに発生する。"
msgstr ""

msgid "互換性のないファイルフォーマットを読み込んだときに発生する。"
msgstr ""

msgid "更新操作が許可されていないのに更新操作を行ったときに発生する。"
msgstr ""

msgid "offset値が小さすぎるときに発生する。"
msgstr ""

msgid "offset値が大きすぎるときに発生する。"
msgstr ""

msgid "limit値が小さすぎるときに発生する。"
msgstr ""

msgid "CAS（Compare and Swap）が失敗したときに発生する。"
msgstr ""

msgid "未サポートのコマンドバージョンを指定したときに発生する。"
msgstr ""

msgid "2.1.0"
msgstr ""

# Groonga::NormalizerError
msgid "It is used when a normalizer causes an error."
msgstr ""

# @since
msgid "4.0.6"
msgstr ""

# Groonga::TokenFilterError
msgid "It is used when a token filter causes an error."
msgstr ""

# @since
msgid "5.0.0"
msgstr ""

# Groonga::CommandError
msgid "It is used when a command causes an error."
msgstr ""

# Groonga::PluginError
msgid "It is used when a plugin causes an error."
msgstr ""

# @since
msgid "5.0.1"
msgstr ""

# Groonga::ScorerError
msgid "It is used when a scorer causes an error."
msgstr ""

# @since
msgid "6.0.2"
msgstr ""

# Groonga::Cancel
msgid "It is used when a processing is canceled."
msgstr ""

# @since
msgid "6.0.4"
msgstr ""

# Groonga::WindowFunctionError
msgid "It is used when window function causes an error."
msgstr ""

# @since
msgid "6.1.3"
msgstr ""

# Groonga::ZstdError
msgid "It is used when Zstd causes an error."
msgstr ""

msgid "検索条件やデータベースへの操作を表現するオブジェクト。"
msgstr ""

msgid "固定長データ用のカラム。"
msgstr ""

# Groonga::Flushable
msgid "It provides the ability to flush data on memory to disk."
msgstr ""

# Groonga::HashCursor
msgid ""
"{Groonga::Hash} に登録されているレコードを順番に取り出すため\n"
"のオブジェクト。利用できるメソッドは {Groonga::TableCursor}\n"
"と {Groonga::TableCursorKeySupport} を参照。"
msgstr ""

msgid ""
"各レコードをキーで管理するテーブル。キーと完全一致するレ\n"
"コードを非常に高速に検索できる。"
msgstr ""

# @overload
msgid "tag|overload|builtin?"
msgstr ""

# @param [Integer, Record]
# @param [Integer]
msgid "tag|param|id"
msgstr ""

# @param [Integer] id
msgid "The ID to be confirmed."
msgstr ""

# @return [Boolean]
msgid "`true` if the `id` is builtin, `false` otherwise."
msgstr ""

# @since
msgid "6.0.5"
msgstr ""

# @overload
msgid "tag|overload|builtin_type?"
msgstr ""

# @return [Boolean]
msgid "`true` if the `id` is builtin_type, `false` otherwise."
msgstr ""

# @since
msgid "6.0.9"
msgstr ""

msgid ""
"転置索引エントリを格納するカラム。このカラムを利用するこ\n"
"とにより高速な全文検索を実現できる。"
msgstr ""

msgid ""
"テーブルにGroonga::IndexColumnを定義する方法は\n"
"{Groonga::Table#define_index_column} を参照。"
msgstr ""

msgid "groongaから出力されるログを記録するためのクラス。"
msgstr ""

# Groonga::Name
msgid "This module provides object name related features."
msgstr ""

msgid "It normalizes string."
msgstr "文字列を正規化するクラスです。"

# Groonga::Object
msgid ""
"rroongaが提供するクラスのベースとなるクラス。\n"
"{Groonga::Context} と {Groonga::Logger} 以外はGroonga::Objectを継\n"
"承している。"
msgstr ""

# Groonga::PatriciaTrieCursor
msgid ""
"{Groonga::PatriciaTrie} に登録されているレコードを順番に取り\n"
"出すためのオブジェクト。利用できるメソッドは\n"
"{Groonga::TableCursor} と {Groonga::TableCursor::KeySupport} を\n"
"参照。"
msgstr ""

msgid ""
"各レコードをパトリシアトライで管理するテーブル。ハッシュ\n"
"テーブルに比べて完全一致検索の速度がやや遅いが、前方一致\n"
"検索・共通接頭辞探索などの検索ができる。またカーソルを用\n"
"いてキーの昇降順にレコードを取り出すことができる。"
msgstr ""

msgid ""
"プラグイン。現在のところ、Rubyでgroongaのプラグインを作成\n"
"することはできず、Cで作成された既存のプラグインを登録する\n"
"ことができるだけです。"
msgstr ""

# Groonga::QueryLogger
msgid "A class for logging query log."
msgstr ""

# Groonga::RequestCanceler
msgid "This module provides API for canceling requests."
msgstr ""

# Groonga::RequestTimerID
msgid "This class represents request timer ID. It's used with request timer."
msgstr ""

# Groonga::RequestTimer
msgid ""
"This module provides API for canceling requests after the specified\n"
"time."
msgstr ""

msgid "スニペット（検索語周辺のテキスト）を生成するためのオブジェクト。"
msgstr ""

msgid ""
"主キーを持つテーブル用のカーソルであるGroonga::HashCursor\n"
"とGroonga::PatriciaTrieCursorに主キーの機能を提供するモジ\n"
"ュール。"
msgstr ""

msgid ""
"テーブルに登録されているレコードを順番に取り出すための\n"
"オブジェクト。 {Groonga::Table#open_cursor} で生成できる。"
msgstr ""

msgid ""
"主キーを持つテーブルである {Groonga::Hash} と\n"
"{Groonga::PatriciaTrie} に主キーの機能を提供するモジュール。"
msgstr ""

# Groonga::Table
msgid ""
"This class is base class which represents Rroonga's table.\n"
"{Groonga::Array} , {Groonga::Hash} , {Groonga::PatriciaTrie}\n"
"are extended from this class."
msgstr ""
"Rroongaが提供するテーブルのベースとなるクラス。このクラス\n"
"から {Groonga::Array} , {Groonga::Hash} , {Groonga::PatriciaTrie}\n"
"が継承されている。"

# Groonga::Thread
msgid "It's a namespace for thread related features."
msgstr ""

msgid ""
"groongaのテーブルの主キーや、カラムの値の型のためのオブジェ\n"
"クト。型として使用可能なものはgroongaで予め定義済みの型、ユ\n"
"ーザが定義する型、またはユーザが定義したテーブル。"
msgstr ""

# Groonga::VariableSizeColumn
msgid ""
"A column for variable size data like text family types and vector\n"
"column."
msgstr ""

msgid "{Groonga::Expression} で使われる変数。"
msgstr ""

# Groonga::WindowsEventLogger
msgid "It's a module for using Windows Event Log as log output."
msgstr ""

# Groonga
msgid ""
"Copyright (C) 2015  Masafumi Yokoyama <yokoyama@clear-code.com>\n"
"Copyright (C) 2009-2016  Kouhei Sutou <kou@clear-code.com>"
msgstr ""

msgid ""
"This library is free software; you can redistribute it and/or\n"
"modify it under the terms of the GNU Lesser General Public\n"
"License version 2.1 as published by the Free Software Foundation."
msgstr ""

msgid ""
"This library is distributed in the hope that it will be useful,\n"
"but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n"
"Lesser General Public License for more details."
msgstr ""

msgid ""
"You should have received a copy of the GNU Lesser General Public\n"
"License along with this library; if not, write to the Free Software\n"
"Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA"
msgstr ""

msgid ""
"BUILD_VERSIONを\".\"で結合して<tt>\"メジャーバージョン.マ\n"
"イナーバージョン.マイクロバージョン\"</tt>という形式の\n"
"文字列にしたもの。"
msgstr ""

msgid "Format version."
msgstr ""
"VERSIONを\".\"で結合して、<tt>”メジャーバージョン.マイナーバージョン.マイクロバージョン”</tt>という形式の文字列にしたもの。もしVERS"
"IONにタグが含まれる場合、<tt>”メジャーバージョン.マイナーバージョン.マイクロバージョン-タグ”</tt>という形式の文字列になる。"

# @return [String]
msgid ""
"If Groonga::VERSION has tag,\n"
"@MAJOR.MINOR.MICRO-TAG@. Otherwise, @MAJOR.MINOR.MICRO@."
msgstr ""

msgid ""
"BINDINGS_VERSIONを\".\"で結合して<tt>\"メジャーバージョン.マ\n"
"イナーバージョン.マイクロバージョン\"</tt>という形式の文\n"
"字列にしたもの。"
msgstr ""

msgid ""
"call-seq:\n"
"  Groonga[name] -> Groonga::Object or nil\n"
"  Groonga[id]   -> Groonga::Object or nil"
msgstr ""

msgid "便利メソッド。Groonga::Context.default[name]と同じ。"
msgstr ""

# @deprecated
msgid "since 6.0.0. Use {Groonga::Column#find_indexes} instead."
msgstr ""

# @param [Groonga::Operator::XXX]
msgid "tag|param|operator"
msgstr ""

# @param [Groonga::Operator] operator
msgid "(Groonga::Operator::MATCH)"
msgstr ""

# @return [Array<Groonga::IndexColumn>]
msgid ""
"Indexes on `column` which can\n"
"execute `operator`."
msgstr ""

msgid "1.0.9"
msgstr ""

msgid ""
"_path_ にある既存のデータベースを開く。ブロックを指定した場\n"
"合はブロックに開いたデータベースを渡し、ブロックを抜けると\n"
"きに閉じる。"
msgstr ""

# Groonga::Context#create_database
msgid ""
"This is convenience method. It wraps {Groonga::Database.create}\n"
"for the context."
msgstr ""

# @overload
msgid "tag|overload|create_database"
msgstr ""

# @example
msgid "tag|example|Creating a new temporary database"
msgstr ""

# @example Creating a new temporary database
msgid "temporary_database = context.create_database"
msgstr ""

# @return [Groonga::Database]
msgid "A new temporary database."
msgstr ""

# @example
msgid "tag|example|Creating a new temporary database with block"
msgstr ""

# @example Creating a new temporary database with block
msgid ""
"context.create_database do |temporary_database|\n"
"  # ...\n"
"end"
msgstr ""

# @return
msgid "Returned value from the block."
msgstr ""

# @yield [database]
msgid ""
"Yields a newly created temporary database\n"
"for the context. The database is available only in the\n"
"block."
msgstr ""

# @yieldparam [Groonga::Database]
msgid "tag|yieldparam|database"
msgstr ""

# @yieldparam [Groonga::Database] database
msgid ""
"A newly created\n"
"temporary database for the context."
msgstr ""

# @yieldreturn [Object]
msgid ""
"The returned value from the block is the\n"
"returned value from this method."
msgstr ""

# @example
msgid "tag|example|Creating a new persistent database to _\"/tmp/db.groonga\"_"
msgstr ""

# @example Creating a new persistent database to _"/tmp/db.groonga"_
msgid "database = context.create_database(\"/tmp/db.groonga\")"
msgstr ""

# @param [String, nil]
msgid "tag|param|path"
msgstr ""

# @param [String] path
msgid ""
"Database path for a new persistent\n"
"database."
msgstr ""

# @return [Groonga::Database]
msgid ""
"A new persistent database for the\n"
"context."
msgstr ""

# @example
msgid ""
"tag|example|Creating a new persistent database to _\"/tmp/db.groonga\"_ database"
" with block"
msgstr ""

# @example Creating a new persistent database to _"/tmp/db.groonga"_ database with block
msgid ""
"context.create_database(\"/tmp/db.groonga\") do |persistent_database|\n"
"  # ...\n"
"end"
msgstr ""

# @yield [database]
msgid ""
"Yields a newly created persistent database\n"
"for the context. The database is available only in the\n"
"block."
msgstr ""

# @yieldparam [Groonga::Database] database
msgid ""
"A newly created\n"
"persistent database for the context."
msgstr ""

# Groonga::Context#create_database
msgid "Creates a new temproary database for the context."
msgstr ""

# Groonga::Context#create_database
msgid ""
"Creates a new temproary database for the context. The database\n"
"is closed after the passed block is finished."
msgstr ""

# Groonga::Context#create_database
msgid "Creates a new persistent database for the context to the _path_."
msgstr ""

# Groonga::Context#create_database
msgid ""
"Creates a new persistent database for the context to the\n"
"_path_. The database is closed after the passed block is\n"
"finished."
msgstr ""

msgid ""
"groongaのプラグインディレクトリにあるプラグイン _name_\n"
"を登録する。 _path_ を指定するとプラグインディレクトリ以\n"
"外にあるプラグインを登録することができる。"
msgstr ""

# Groonga::Context#unregister_plugin
msgid "Unregister a registered `name` plugin."
msgstr ""

# Groonga::Context#unregister_plugin
msgid ""
"You can unregister `name` plugin by name if\n"
"`name` plugin is installed to plugin directory."
msgstr ""

# Groonga::Context#unregister_plugin
msgid "You can also specify the path of `name` plugin explicitly."
msgstr ""

# @param [String or Symbol]
msgid "tag|param|name"
msgstr ""

# @example
msgid "tag|example|Unregister a registerd plugin by name."
msgstr ""

# @example Unregister a registerd plugin by name.
msgid ""
"context.register_plugin(\"token_filters/stop_word\")\n"
"context.unregister_plugin(\"token_filters/stop_word\")"
msgstr ""

# @example
msgid "tag|example|Unregister a registerd plugin by path."
msgstr ""

# @example Unregister a registerd plugin by path.
msgid ""
"context.register_plugin(\"token_filters/stop_word\")\n"
"context.unregister_plugin(\"/usr/local/lib/groonga/plugins/token_filters/stop_w"
"ord.so\")"
msgstr ""

# @overload
msgid "tag|overload|unregister_plugin"
msgstr ""

# @param [String] name
msgid "The plugin name."
msgstr ""

# @param [String] path
msgid "The path to plugin."
msgstr ""

# Groonga::Context#unregister_plugin
msgid "Unregister a registerd plugin by name."
msgstr ""

# Groonga::Context#unregister_plugin
msgid "Unregister a registerd plugin by path."
msgstr ""

msgid ""
"_table_ から指定した条件にマッチするレコードの値を取得\n"
"する。 _table_ はテーブル名かテーブルオブジェクトを指定\n"
"する。"
msgstr ""

msgid "_options_ に指定できるキーは以下の通り。"
msgstr ""

# @option
msgid "tag|option|options"
msgstr ""

msgid "tag|param|options"
msgstr ""

msgid ""
"The name and value\n"
"pairs. Omitted names are initialized as the default value."
msgstr "オプションを設定するハッシュ。指定されなかったオプションはデフォルト値が使われます。"

# Groonga::Context#restore
msgid "Restore commands dumped by \"grndump\" command."
msgstr ""

# Groonga::Context#restore
msgid "If block is given, a response is yielded."
msgstr ""

# @example
msgid "tag|example|Restore dumped commands as a String object."
msgstr ""

# @example
msgid ""
"dumped_commands = File.read(\"dump.grn\")\n"
"context.restore(dumped_commands)"
msgstr ""

# @example
msgid "tag|example|Restore dumped commands from a File object."
msgstr ""

# @example Restore dumped commands from a File object.
msgid ""
"File.open(\"dump.grn\") do |file|\n"
"  context.restore(file)\n"
"end"
msgstr ""

# @example
msgid "tag|example|Restore dumped commands and reports result."
msgstr ""

# @example Restore dumped commands and reports result.
msgid ""
"dumped_commands = File.read(\"dump.grn\")\n"
"context.restore(dumped_commands) do |command, response|\n"
"  puts(\"#{command} -> #{response}\")\n"
"end"
msgstr ""

# @param [String]
msgid "tag|param|dumped_commands"
msgstr ""

# @param [#each_line] dumped_commands
msgid ""
"commands dumped by grndump.\n"
"It can be a String object or any objects like an IO object such\n"
"as a File object. It should have #each_line that iterates a\n"
"line."
msgstr ""

# @yield [command, response]
msgid "Yields a sent command and its response if block is given."
msgstr ""

# @yieldparam [String]
msgid "tag|yieldparam|command"
msgstr ""

# @yieldparam [String] command
msgid "A sent command."
msgstr ""

# @yieldparam [String]
msgid "tag|yieldparam|response"
msgstr ""

# @yieldparam [String] response
msgid "A response for a command."
msgstr ""

# Groonga::Context#push_memory_pool
msgid ""
"Pushes a new memory pool to the context. Temporary objects that\n"
"are created between pushing a new memory pool and popping the\n"
"new memory pool are closed automatically when popping the new\n"
"memory pool."
msgstr ""

# Groonga::Context#push_memory_pool
msgid ""
"It is useful for request and response style applications. These\n"
"style applications can close temporary objects between a request\n"
"and resopnse pair. There are some merits for closing temporary\n"
"objects explicilty rather than closing implicitly by GC:"
msgstr ""

# Groonga::Context#push_memory_pool
msgid ""
"  * Less memory consumption\n"
"  * Faster"
msgstr ""

# Groonga::Context#push_memory_pool
msgid ""
"The \"less memory consumption\" merit is caused by temporary\n"
"objects are closed each request and response pair. The max\n"
"memory consumption in these applications is the same as the max\n"
"memory consumption in a request and response pair. If temporary\n"
"objects are closed by GC, the max memory consumption in these\n"
"applications is the same as the max memory consumption between\n"
"the current GC and the next GC. These applications process many\n"
"request and response pairs during two GCs."
msgstr ""

# Groonga::Context#push_memory_pool
msgid ""
"The \"faster\" merit is caused by reducing GC. You can reduce GC,\n"
"your application run faster because GC is a heavy process. You\n"
"can reduce GC because memory consumption is reduced."
msgstr ""

# Groonga::Context#push_memory_pool
msgid "You can nest {#push_memory_pool} and {#pop_memory_pool} pair."
msgstr ""

# @example
msgid "tag|example|Pushes a new memory pool with block"
msgstr ""

# @example Pushes a new memory pool with block
msgid ""
"adults = nil\n"
"context.push_memory_pool do\n"
"  users = context[\"Users\"]\n"
"  adults = users.select do |user|\n"
"    user.age >= 20\n"
"  end\n"
"  p adults.temporary? # => true\n"
"  p adults.closed?    # => false\n"
"end\n"
"p adults.closed?      # => true"
msgstr ""

# @example
msgid "tag|example|Pushes a new memory pool without block"
msgstr ""

# @example Pushes a new memory pool without block
msgid ""
"adults = nil\n"
"context.push_memory_pool\n"
"users = context[\"Users\"]\n"
"adults = users.select do |user|\n"
"  user.age >= 20\n"
"end\n"
"p adults.temporary? # => true\n"
"p adults.closed?    # => false\n"
"context.pop_memory_pool\n"
"p adults.closed?    # => true"
msgstr ""

# @example
msgid "tag|example|Nesting push and pop pair"
msgstr ""

# @example Nesting push and pop pair
msgid ""
"adults = nil\n"
"context.push_memory_pool do\n"
"  users = context[\"Users\"]\n"
"  adults = users.select do |user|\n"
"    user.age >= 20\n"
"  end\n"
"  grouped_adults = nil\n"
"  context.push_memory_pool do\n"
"    grouped_adults = adults.group([\"hobby\"])\n"
"    p grouped_adults.temporary? # => true\n"
"    p grouped_adults.closed?    # => false\n"
"  end\n"
"  p grouped_adults.closed?      # => true\n"
"  p adults.temporary?           # => true\n"
"  p adults.closed?              # => false\n"
"end\n"
"p adults.closed?                # => true"
msgstr ""

# @overload
msgid "tag|overload|push_memory_pool"
msgstr ""

# @return [Object]
msgid "The value returned by the block."
msgstr ""

# @yield
msgid ""
"[]\n"
"Yields the block. Temporary objects created in the block\n"
"are closed automatically when the block is exited."
msgstr ""

# @yieldreturn [Object]
msgid ""
"It is the return value of this\n"
"method call."
msgstr ""

# @since
msgid "3.0.5"
msgstr ""

# Groonga::Context#push_memory_pool
msgid ""
"Pushes a new memory pool to the context. You need to pop the\n"
"memory pool explicitly by yourself."
msgstr ""

# Groonga::Context#push_memory_pool
msgid ""
"Closes temporary objects created in the given block\n"
"automatically."
msgstr ""

# Groonga::Context#pop_memory_pool
msgid "Pops the pushed memory pool."
msgstr ""

# @see
msgid "tag|see|push_memory_pool"
msgstr ""

# @api
msgid "private"
msgstr ""

# @deprecated
msgid "since 5.1.1. Use {Groonga::Context#config} instead."
msgstr ""

# @return [Groonga::Conf]
msgid ""
"The database level configuration sets of\n"
"this context."
msgstr ""

# @since
msgid "5.0.9"
msgstr ""

# @since
msgid "5.1.1"
msgstr ""

# @return [CommandExecutor]
msgid "a new instance of CommandExecutor"
msgstr ""

# Groonga::DatabaseInspector
msgid ""
"It is a class that inspects database. You can know details metadata\n"
"of the database."
msgstr ""

# @param [Database]
msgid "tag|param|database"
msgstr ""

# @param [Database] database
msgid "The database to be inspected."
msgstr ""

# @param [Options] options
msgid "The options to custom this inspector behavior."
msgstr ""

# @return [DatabaseInspector]
msgid "a new instance of DatabaseInspector"
msgstr ""

# Groonga::DatabaseInspector#report
msgid "Report inspected result of the database."
msgstr ""

# @param [#write]
msgid "tag|param|output"
msgstr ""

# @param [#write] output
msgid ""
"(nil) The output of inspected result.\n"
"If it is @nil@, @$stdout@ is used."
msgstr ""

# Groonga::DatabaseInspector::Options
msgid "It is a class that keeps options for {DatabaseInspector}."
msgstr ""

# @return [Boolean]
msgid ""
"(true) Shows information about tables if true,\n"
"doesn't show it otherwise."
msgstr ""

# @return [Boolean]
msgid ""
"(true) Shows information about columns if true,\n"
"doesn't show it otherwise. If {#show_tables?} is false, information\n"
"about columns isn't always shown."
msgstr ""

# @return [Options]
msgid "a new instance of Options"
msgstr ""

# @return [Reporter]
msgid "a new instance of Reporter"
msgstr ""

msgid "tables defined in the database."
msgstr ""

# @return [Array<String>]
msgid "registered plugin paths."
msgstr ""

msgid "データベースの内容をgrn式形式の文字列として出力するクラス。"
msgstr ""

# Groonga::DatabaseDumper.dump
msgid "Dump database"
msgstr ""

# Groonga::DatabaseDumper.dump
msgid "TODO: document options paramter"
msgstr ""

msgid "a new instance of DatabaseDumper"
msgstr ""

msgid ""
"スキーマの内容をRubyスクリプトまたはgrn式形式の文字列と\n"
"して出力するクラス。"
msgstr ""

msgid "a new instance of SchemaDumper"
msgstr ""

msgid "a new instance of BaseSyntax"
msgstr ""

msgid "a new instance of TableDumper"
msgstr ""

# @param
# @param [Object]
msgid "tag|param|value"
msgstr ""

msgid "Returns the value of attribute table."
msgstr ""

# @param value
msgid "the value to set the attribute query to."
msgstr ""

msgid "Returns the value of attribute query."
msgstr ""

msgid "Sets the attribute query"
msgstr ""

# @param value
msgid "the value to set the attribute syntax to."
msgstr ""

msgid "Returns the value of attribute syntax."
msgstr ""

msgid "Sets the attribute syntax"
msgstr ""

# @param value
msgid "the value to set the attribute allow_pragma to."
msgstr ""

msgid "Returns the value of attribute allow_pragma."
msgstr ""

# Groonga::ExpressionBuildable#allow_pragma=
msgid "Sets the attribute allow_pragma"
msgstr ""

# @param value
msgid "the value to set the attribute allow_column to."
msgstr ""

msgid "Returns the value of attribute allow_column."
msgstr ""

# Groonga::ExpressionBuildable#allow_column=
msgid "Sets the attribute allow_column"
msgstr ""

# @param value
msgid "the value to set the attribute allow_update to."
msgstr ""

msgid "Returns the value of attribute allow_update."
msgstr ""

# Groonga::ExpressionBuildable#allow_update=
msgid "Sets the attribute allow_update"
msgstr ""

# @param value
msgid "the value to set the attribute allow_leading_not to."
msgstr ""

msgid "Returns the value of attribute allow_leading_not."
msgstr ""

# Groonga::ExpressionBuildable#allow_leading_not=
msgid "Sets the attribute allow_leading_not"
msgstr ""

# @param value
msgid "the value to set the attribute default_column to."
msgstr ""

msgid "Returns the value of attribute default_column."
msgstr ""

# Groonga::ExpressionBuildable#default_column=
msgid "Sets the attribute default_column"
msgstr ""

msgid "a new instance of ExpressionBuilder"
msgstr ""

msgid "a new instance of SetExpressionBuilder"
msgstr ""

msgid "a new instance of AndExpressionBuilder"
msgstr ""

msgid "a new instance of OrExpressionBuilder"
msgstr ""

# @return [AndNotExpressionBuilder]
msgid "a new instance of AndNotExpressionBuilder"
msgstr ""

msgid "a new instance of ColumnValueExpressionBuilder"
msgstr ""

msgid "a new instance of MatchTargetExpressionBuilder"
msgstr ""

msgid "a new instance of BinaryExpressionBuilder"
msgstr ""

msgid "a new instance of EqualExpressionBuilder"
msgstr ""

msgid "a new instance of NotEqualExpressionBuilder"
msgstr ""

msgid "a new instance of MatchExpressionBuilder"
msgstr ""

# @return [RegexpExpressionBuilder]
msgid "a new instance of RegexpExpressionBuilder"
msgstr ""

msgid "a new instance of LessExpressionBuilder"
msgstr ""

msgid "a new instance of LessEqualExpressionBuilder"
msgstr ""

msgid "a new instance of GreaterExpressionBuilder"
msgstr ""

msgid "a new instance of GreaterEqualExpressionBuilder"
msgstr ""

msgid "a new instance of PlusExpressionBuilder"
msgstr ""

msgid "a new instance of MinusExpressionBuilder"
msgstr ""

msgid "a new instance of StarExpressionBuilder"
msgstr ""

msgid "a new instance of SlashExpressionBuilder"
msgstr ""

msgid "a new instance of ModExpressionBuilder"
msgstr ""

msgid "a new instance of SubExpressionBuilder"
msgstr ""

msgid "a new instance of PrefixSearchExpressionBuilder"
msgstr ""

msgid "a new instance of SuffixSearchExpressionBuilder"
msgstr ""

# @return [SimilarSearchExpressionBuilder]
msgid "a new instance of SimilarSearchExpressionBuilder"
msgstr ""

msgid "a new instance of TermExtractExpressionBuilder"
msgstr ""

# @return [CallExpressionBuilder]
msgid "a new instance of CallExpressionBuilder"
msgstr ""

msgid "a new instance of RecordExpressionBuilder"
msgstr ""

msgid "a new instance of ColumnExpressionBuilder"
msgstr ""

msgid "the value to set the attribute latitude to."
msgstr "緯度の値を返す。"

msgid "the value to set the attribute longitude to."
msgstr "経度の値を返す。"

msgid "Returns the value of attribute latitude."
msgstr "緯度の値を返す。"

msgid "Sets the attribute latitude"
msgstr "緯度の値を返す。"

msgid "Returns the value of attribute longitude."
msgstr "経度の値を返す。"

msgid "Sets the attribute longitude"
msgstr "経度の値を返す。"

# Groonga::GeoPoint#initialize
# Groonga::TokyoGeoPoint#to_wgs84
msgid "TODO: write document"
msgstr ""

# @overload
msgid "tag|overload|initialize"
msgstr ""

msgid "a new instance of GeoPoint"
msgstr ""

msgid ""
"TokyoGeoPoint <-> WGS84GeoPoint is based on\n"
"http://www.jalan.net/jw/jwp0200/jww0203.do"
msgstr ""

# Groonga::TokyoGeoPoint#to_wgs84
msgid ""
"  jx: longitude in degree in Tokyo Geodetic System.\n"
"  jy: latitude in degree in Tokyo Geodetic System.\n"
"  wx: longitude in degree in WGS 84.\n"
"  wy: latitude in degree in WGS 84."
msgstr ""

# Groonga::TokyoGeoPoint#to_wgs84
msgid ""
"  jy = wy * 1.000106961 - wx * 0.000017467 - 0.004602017\n"
"  jx = wx * 1.000083049 + wy * 0.000046047 - 0.010041046"
msgstr ""

# Groonga::TokyoGeoPoint#to_wgs84
msgid ""
"  wy = jy - jy * 0.00010695 + jx * 0.000017464 + 0.0046017\n"
"  wx = jx - jy * 0.000046038 - jx * 0.000083043 + 0.010040"
msgstr ""

msgid "tag|see|TokyoGeoPoint#to_wgs84"
msgstr ""

msgid "a new instance of EnvironmentEvent"
msgstr ""

msgid "Returns the value of attribute jobs."
msgstr ""

msgid "a new instance of JobsStartEvent"
msgstr ""

msgid "the value to set the attribute id to."
msgstr ""

msgid "the newly set value"
msgstr ""

# @return [Object]
msgid "the current value of id"
msgstr ""

msgid "the value to set the attribute command to."
msgstr ""

# @return [Object]
msgid "the current value of command"
msgstr ""

msgid "the value to set the attribute relative_start_time to."
msgstr "緯度の値を返す。"

# @return [Object]
msgid "the current value of relative_start_time"
msgstr ""

msgid "the value to set the attribute relative_end_time to."
msgstr ""

# @return [Object]
msgid "the current value of relative_end_time"
msgstr ""

msgid "the value to set the attribute result to."
msgstr ""

# @return [Object]
msgid "the current value of result"
msgstr ""

msgid "Sets the attribute id"
msgstr ""

msgid "Returns the value of attribute id"
msgstr ""

msgid "Sets the attribute command"
msgstr ""

msgid "Returns the value of attribute command"
msgstr "commandの値を返す"

msgid "Sets the attribute relative_start_time"
msgstr ""

msgid "Returns the value of attribute relative_start_time"
msgstr ""

msgid "Sets the attribute relative_end_time"
msgstr ""

msgid "Returns the value of attribute relative_end_time"
msgstr ""

msgid "Sets the attribute result"
msgstr ""

msgid "Returns the value of attribute result"
msgstr ""

msgid "Returns the value of attribute job."
msgstr ""

msgid "Returns the value of attribute latency."
msgstr ""

msgid "Returns the value of attribute elapsed."
msgstr ""

msgid "Returns the value of attribute qps."
msgstr ""

msgid "Returns the value of attribute min."
msgstr ""

msgid "Returns the value of attribute max."
msgstr ""

msgid "Returns the value of attribute n_queries."
msgstr ""

msgid "a new instance of JobSummaryEvent"
msgstr ""

msgid "Returns the value of attribute summaries."
msgstr ""

msgid "a new instance of JobsEndEvent"
msgstr ""

msgid "a new instance of Parser"
msgstr ""

msgid "a new instance of IndexColumnDumper"
msgstr ""

msgid "Returns the value of attribute column."
msgstr ""

msgid "Returns the value of attribute section."
msgstr ""

# @return [Index]
msgid "a new instance of Index"
msgstr ""

# @deprecated
msgid ""
"since 3.0.1. Use {Groonga::Logger.path}\n"
"instead."
msgstr ""

# @deprecated
msgid ""
"since 3.0.1. Use {Groonga::Logger.path=}\n"
"instead."
msgstr ""

# @deprecated
msgid ""
"since 3.0.1. Use {Groonga::QueryLogger.path}\n"
"instead."
msgstr ""

# @deprecated
msgid ""
"since 3.0.1. Use {Groonga::QueryLogger.path=}\n"
"instead."
msgstr ""

# @return [FileLogger]
msgid "a new instance of FileLogger"
msgstr ""

# @return [CallbackLogger]
msgid "a new instance of CallbackLogger"
msgstr ""

# @return [MemoryPool]
msgid "a new instance of MemoryPool"
msgstr ""

msgid "指定したページ番号。"
msgstr ""

msgid "有効なページ。Range。"
msgstr ""

msgid "a new instance of TooSmallPage"
msgstr ""

msgid "a new instance of TooLargePage"
msgstr ""

msgid "指定したページサイズ。"
msgstr ""

msgid "有効なページサイズ。Range。"
msgstr ""

msgid "a new instance of TooSmallPageSize"
msgstr ""

msgid ""
"ページネーション用便利メソッド。ページネーションをした\n"
"い場合は {#sort} よりも #paginate の方が便利。"
msgstr ""

msgid ""
"説明文（descriptionカラム）を「Ruby」で全文検索し、\n"
"検索結果をスコアの高い順にソートして、10項目ずつ表示する\n"
"場合は以下のようになる。"
msgstr ""

# Groonga::Table#paginate
msgid ""
"<pre>\n"
"!!!ruby\n"
"query = \"Ruby\"\n"
"entries = Groonga[\"entries\"]\n"
"selected_entries = entries.select do |record|\n"
"  entry.description =~ query\n"
"end\n"
"paged_entries = selected_entries.paginate([[\"_score\", :desc]],\n"
"                                          :page => 1,\n"
"                                          :size => 10)\n"
"</pre>"
msgstr ""

# Groonga::Table#paginate
msgid ""
"{#sort} と違い、返される {Table} オブジェクトには\n"
"{Pagination} モジュールがextendされており、\n"
"以下のようにページネーション情報を取得できる。"
msgstr ""

# Groonga::Table#paginate
msgid ""
"<pre>\n"
"!!!ruby\n"
"puts \"#{paged_entries.n_records}件ヒット\"\n"
"puts \"#{paged_entries.start_offset}-#{paged_entries.end_offset}件を表示\"\n"
"paged_entries.each do |entry|\n"
"  puts entry.description\n"
"end\n"
"</pre>"
msgstr ""

# Groonga::Table#paginate
msgid ""
"_sort_keys_ には ソートに用いる情報を指定する。\n"
"指定の仕方は {#sort} と同様なので、詳細は {#sort} を参照。"
msgstr ""

msgid "_options_ に指定可能な値は以下の通り。"
msgstr ""

msgid "ページネーション機能を追加するモジュール。"
msgstr ""

msgid ""
"ページ番号やレコードが何番目かは0ベースではなく1ベースで\n"
"あることに注意すること。"
msgstr ""

msgid "現在のページ番号。"
msgstr ""

msgid "1ページあたりのレコード数。"
msgstr ""

msgid "全ページ数。"
msgstr ""

msgid "全レコード数。"
msgstr ""

msgid "2ページ以上ある場合は +true+ を返す。"
msgstr ""

msgid "最初のページ番号。常に1を返す。"
msgstr ""

msgid "現在のページが最初のページなら +true+ を返す。"
msgstr ""

msgid "最後のページ番号。"
msgstr ""

msgid "現在のページが最後のページなら +true+ を返す。"
msgstr ""

msgid "次のページがあるなら +true+ を返す。"
msgstr ""

msgid ""
"次のページ番号を返す。次のページがない場合は +nil+\n"
"を返す。"
msgstr ""

msgid "前のページがあるなら +true+ を返す。"
msgstr ""

msgid ""
"前のページ番号を返す。前のページがない場合は +nil+\n"
"を返す。"
msgstr ""

msgid "1ページあたりのレコード数を返す。"
msgstr ""

msgid ""
"現在のページに含まれているレコードのうち、先頭のレコー\n"
"ドが何番目のレコードかを返す。0ベースではなく1ベースで\n"
"あることに注意。つまり、最初のレコードは0番目のレコー\n"
"ドではなく、1番目のレコードになる。"
msgstr ""

msgid "レコードが1つもない場合は +nil+ を返す。"
msgstr ""

msgid ""
"現在のページに含まれているレコードのうち、最後のレコー\n"
"ドが何番目のレコードかを返す。0ベースではなく1ベースで\n"
"あることに注意。つまり、最初のレコードは0番目のレコー\n"
"ドではなく、1番目のレコードになる。"
msgstr ""

msgid "最初のページから最後のページまでを含んだRangeを返す。"
msgstr ""

msgid "tag|example|10ページある場合は以下を返す。"
msgstr ""

msgid "1..10"
msgstr ""

msgid ""
"_text_ を走査し、レコードのキーとマッチする部分文字列ごとに\n"
"そのレコードが _record_ として、その部分文字列が _word_ として、\n"
"ブロックが呼び出される。ブロックから返された文字列が元の部\n"
"分文字列と置換される。全てのヒットに対してのその置換処理が\n"
"行われた文字列が返される。"
msgstr ""

# @example
msgid ""
"include ERB::Util\n"
"Groonga::Context.default_options = {:encoding => \"utf-8\"}\n"
"words = Groonga::PatriciaTrie.create(:key_type => \"ShortText\",\n"
"                                     :normalizer => \"NormalizerAuto\")\n"
"words.add('ｶﾞｯ')\n"
"words.add('ＭＵＴＥＫＩ')\n"
"\n"
"text = 'muTEki マッチしない <> ガッ'\n"
"other_text_handler = Proc.new do |string|\n"
"  h(string)\n"
"end\n"
"options = {\n"
"  :other_text_handler => other_text_handler,\n"
"}\n"
"words.tag_keys(text, options) do |record, word|\n"
"  \"<span class=\\\"keyword\\\">#{h(word)}(#{h(record.key)})</span>\n"
"\"\n"
"end\n"
"# =>\n"
"# \"<span class=\\\"keyword\\\">muTEki(muteki)</span>\n"
"\" +\n"
"# \" マッチしない &lt;&gt; \" +\n"
"# \"<span class=\\\"keyword\\\">ガッ(ガッ)</span>\n"
"\""
msgstr ""

msgid "This class keeps posting information."
msgstr ""

msgid "The record ID."
msgstr ""

msgid "The section ID."
msgstr ""

msgid "The term ID."
msgstr ""

msgid "The position."
msgstr ""

msgid "The term frequency."
msgstr ""

msgid "The weight."
msgstr ""

msgid "The number of rest posting information for the term ID."
msgstr ""

msgid "The table of the record ID."
msgstr ""

msgid "The table of the term ID."
msgstr ""

msgid "Creates a new Posting."
msgstr ""

msgid "The new Posting."
msgstr ""

msgid "Updates all values."
msgstr ""

msgid "tag|option|parameters"
msgstr ""

msgid "tag|param|parameters"
msgstr ""

msgid "1.2.1"
msgstr ""

msgid "Returns Hash created from attributes."
msgstr ""

msgid ""
"The record for the record ID.\n"
"If table isn't assosiated, nil is returned."
msgstr ""

msgid "2.0.6"
msgstr ""

msgid ""
"The record for the term ID.\n"
"If lexicon isn't assosiated, nil is returned."
msgstr ""

# Groonga::QueryLogger::Flags.parse
msgid "TODO: Document me."
msgstr ""

msgid "a new instance of FileQueryLogger"
msgstr ""

msgid "a new instance of CallbackQueryLogger"
msgstr ""

msgid "レコードが所属するテーブル"
msgstr ""

msgid ""
"_table_ の _id_ に対応するレコードを作成する。 _values_ には各\n"
"カラムに設定する値を以下のような形式で指定する。"
msgstr ""

msgid ""
"<pre>\n"
"!!!ruby\n"
"[\n"
" [\"カラム名\", 値],\n"
" [\"カラム名\", 値],\n"
" ...,\n"
"]\n"
"</pre>"
msgstr ""

# Groonga::Record#initialize
msgid ""
"Each value is set by {#[]=}. See {#[]=} how to set weight for a\n"
"value."
msgstr ""

msgid "a new instance of Record"
msgstr ""

msgid ""
"_record_ と _other_ が同じテーブルに属していて、さらに、\n"
"同じレコードIDを持つなら +true+ を返し、そうでなければ\n"
"+false+ を返す。"
msgstr ""

msgid "{Groonga::Record#==} と同じ。"
msgstr ""

msgid ""
"同じテーブルの同じIDのレコードに対しては常に同じハッシュ\n"
"値を返す。"
msgstr ""

msgid "このレコードの _column_name_ で指定されたカラムの値を返す。"
msgstr ""

# Groonga::Record#[]=
msgid "Sets column value of the record."
msgstr ""

# @overload
msgid "tag|overload|[]="
msgstr ""

# @example
msgid "tag|example|Set a new value"
msgstr ""

# @example Set a new value
msgid "user[\"age\"] = 29"
msgstr ""

# @param [String]
msgid "tag|param|column_name"
msgstr ""

# @param [String] column_name
msgid "The column name."
msgstr ""

# @param [Object] value
msgid "The column value. Weight of the value is 0."
msgstr ""

# @example
msgid "tag|example|Set a new value with weight \"2\""
msgstr ""

# @example Set a new value with weight "2"
msgid "user[\"tags\"] = [{:value => \"groonga\", :weight => 2}]"
msgstr ""

# @option
msgid "tag|option|value_with_weight"
msgstr ""

# @param [::Hash]
msgid "tag|param|value_with_weight"
msgstr ""

# @param [::Hash] value_with_weight
msgid "The column value with weight."
msgstr ""

# @see
msgid "tag|see|Groonga::Table#set_column_value"
msgstr ""

msgid ""
"このレコードの _column_name_ で指定されたカラムの値の最後に\n"
"_value_ を追加する。"
msgstr ""

msgid ""
"このレコードの _column_name_ で指定されたカラムの値の最初に\n"
"_value_ を追加する。"
msgstr ""

msgid ""
"_record_ が所属するテーブルで主キーを使える場合は +true+\n"
"を返し、使えない場合は +false+ を返す。"
msgstr ""

# Groonga::Record#support_value?
msgid "created with value type, @false@ otherwise."
msgstr ""

# @return [Boolean]
msgid "@true@ if the table that the record belongs to is"
msgstr ""

msgid ""
"名前が _name_ のカラムがレコードの所属するテーブルで定義され\n"
"ているなら +true+ を返す。"
msgstr ""

# Groonga::Record#reference_column?
msgid "名前が _name_ のカラムが参照カラムであるなら +true+ を返す。"
msgstr ""

# Groonga::Record#index_column?
msgid ""
"名前が _name_ のカラムが索引カラム\n"
"（ {Groonga::IndexColumn} ）であるなら +true+ を返す。"
msgstr ""

msgid "名前が _name_ のカラムの値がベクターであるなら +true+ を返す。"
msgstr ""

msgid "1.0.5"
msgstr ""

msgid "名前が _name_ のカラムの値がスカラーであるなら +true+ を返す。"
msgstr ""

# Groonga::Record#search
msgid ""
"名前が _name_ の {Groonga::IndexColumn} の search メソッドを呼ぶ。\n"
"_query_ と _options_ はそのメソッドにそのまま渡される。詳しく\n"
"は {Groonga::IndexColumn#search} を参照。"
msgstr ""

msgid "レコードの主キーを返す。"
msgstr ""

# Groonga::Record#key
msgid ""
"_record_ が所属するテーブルが {Groonga::Array} の場合は常\n"
"に +nil+ を返す。"
msgstr ""

msgid "レコードを一意に識別するための情報を返す。"
msgstr ""

# Groonga::Record#record_id
msgid ""
"_record_ が所属するテーブルが {Groonga::Array} の場合はID\n"
"を返し、それ以外の場合は主キーを返す。"
msgstr ""

msgid "レコードのIDを返す。"
msgstr ""

msgid ""
"レコードのスコア値を返す。検索結果として生成されたテーブル\n"
"のみに定義される。"
msgstr ""

msgid "Sets score. Score column exists only search result table."
msgstr ""

# @param [Integer]
msgid "tag|param|new_score"
msgstr ""

msgid "The new score."
msgstr ""

# Groonga::Record#support_score?
msgid ""
"{Groonga::Record#score} が利用できる場合は `true` を\n"
"返す。"
msgstr ""

msgid ""
"主キーの値が同一であったレコードの件数を返す。検索結果とし\n"
"て生成されたテーブルのみに定義される。"
msgstr ""

msgid ""
"{Groonga::Record#support_sub_records?} でこの値を利用でき\n"
"るかがわかる。"
msgstr "Groonga::Record#support_sub_records?を追加。"

msgid ""
"{Groonga::Record#n_sub_records} が利用できる場合は +true+ を\n"
"返す。"
msgstr ""

# Groonga::Record#max
msgid ""
"The maximum integer value from integer values in grouped records.\n"
"It can be used when specifying _:calc_target_ and _:calc_types_\n"
"to {Groonga::Table#group}."
msgstr ""

# @return [Integer]
msgid "The maximum integer value from integer values in grouped records."
msgstr ""

# Groonga::Record#min
msgid ""
"The minimum integer value from integer values in grouped records.\n"
"It can be used when specifying _:calc_target_ and _:calc_types_\n"
"to {Groonga::Table#group}."
msgstr ""

# @return [Integer]
msgid "The minimum integer value from integer values in grouped records."
msgstr ""

# Groonga::Record#sum
msgid ""
"The sum of integer values in grouped records.\n"
"It can be used when specifying _:calc_target_ and _:calc_types_\n"
"to {Groonga::Table#group}."
msgstr ""

# @return [Integer]
msgid "The sum of integer values in grouped records."
msgstr ""

# Groonga::Record#average
msgid ""
"The average of integer/float values in grouped records.\n"
"It can be used when specifying _:calc_target_ and _:calc_types_\n"
"to {Groonga::Table#group}."
msgstr ""

# @return [Float]
msgid "The average of integer/float values in grouped records."
msgstr ""

msgid "レコードの値を返す。"
msgstr ""

msgid "レコードの値を設定する。既存の値は上書きされる。"
msgstr ""

# Groonga::Record#increment!
msgid ""
"このレコードの _name_ で指定されたカラムの値を _delta_ だけ増\n"
"加する。 _delta_ が +nil+ の場合は1増加する。"
msgstr ""

# Groonga::Record#decrement!
msgid ""
"このレコードの _name_ で指定されたカラムの値を _delta_ だけ減\n"
"少する。 _delta_ が +nil+ の場合は1減少する。"
msgstr ""

msgid "レコードが所属するテーブルの全てのカラムを返す。"
msgstr ""

msgid ""
"レコードが所属しているテーブルで定義されているインデックス\n"
"型のカラムでない全カラムを対象とし、カラムの名前をキーとし\n"
"たこのレコードのカラムの値のハッシュを返す。"
msgstr ""

msgid "return same attributes object if duplicate records exist."
msgstr ""

# @return [String]
msgid "the record formatted as JSON."
msgstr ""

# Groonga::Record#delete
msgid "Delete the record."
msgstr ""

# Groonga::Record#rename
msgid ""
"Renames key of the record. Only available for\n"
"{Groonga::DoubleArrayTrie} table."
msgstr ""

# @since
msgid "4.0.5"
msgstr ""

msgid ""
"レコードが所属するテーブルをロックする。ロックに失敗した場\n"
"合は {Groonga::ResourceDeadlockAvoided} 例外が発生する。"
msgstr ""

msgid "ブロックを指定した場合はブロックを抜けたときにunlockする。"
msgstr ""

msgid "利用可能な _option_ は以下の通り。"
msgstr ""

msgid "レコードが所属するテーブルのロックを解除する。"
msgstr ""

msgid "利用可能なオプションは現在は無い。"
msgstr ""

# Groonga::Record#clear_lock
msgid "Forces to clear lock of the table to which the record belongs."
msgstr ""

# Groonga::Record#locked?
msgid ""
"Checks whether the table to which the record belongs is locked\n"
"or not."
msgstr ""

# @return [Boolean]
msgid ""
"`true` if the table to which the record\n"
"belongs is locked, `false` otherwise."
msgstr ""

msgid "レコードが持つIDが有効なIDであれば +true+ を返す。"
msgstr ""

# @return [SubRecords]
msgid "Sub records of the record."
msgstr ""

msgid "Returns the value of attribute attributes."
msgstr ""

msgid "a new instance of AttributeHashBuilder"
msgstr ""

msgid "groongaのスキーマ（データ構造）を管理するクラス。"
msgstr ""

# Groonga::Schema
msgid ""
"{Groonga::Schema} を使うことにより簡単にテーブルやカラムを\n"
"追加・削除することができる。"
msgstr ""

# Groonga::Schema
msgid ""
"![Sample schema](https://raw.githubusercontent.com/ranguba/rroonga/master/doc/"
"images/sample-schema.png)"
msgstr ""

msgid "tag|example|上図のようなスキーマを定義する場合は以下のようになる。"
msgstr ""

# @example 上図のようなスキーマを定義する場合は以下のようになる。
msgid ""
"Groonga::Schema.define do |schema|\n"
"  schema.create_table(\"Items\") do |table|\n"
"    table.short_text(\"title\")\n"
"  end\n"
"\n"
"  schema.create_table(\"Users\") do |table|\n"
"    table.short_text(\"name\")\n"
"  end\n"
"\n"
"  schema.create_table(\"comments\") do |table|\n"
"    table.reference(\"item\", \"Items\")\n"
"    table.reference(\"author\", \"Users\")\n"
"    table.text(\"content\")\n"
"    table.time(\"issued\")\n"
"  end\n"
"end"
msgstr ""

msgid "スキーマ操作で発生する例外のスーパークラス。"
msgstr ""

msgid "テーブルが存在しないときに発生する。"
msgstr ""

msgid "Returns the value of attribute name."
msgstr ""

msgid "a new instance of TableNotExists"
msgstr ""

msgid "カラムが存在しないときに発生する。"
msgstr ""

msgid "a new instance of ColumnNotExists"
msgstr ""

msgid ""
"すでに存在するテーブルと違うオプションでテーブルを作ろ\n"
"うとしたときに発生する。"
msgstr ""

msgid "Returns the value of attribute options."
msgstr ""

msgid "a new instance of TableCreationWithDifferentOptions"
msgstr ""

msgid ""
"すでに存在するカラムと違うオプションでテーブルを作ろ\n"
"うとしたときに発生する。"
msgstr ""

msgid "a new instance of ColumnCreationWithDifferentOptions"
msgstr ""

msgid "未知のインデックス対象テーブルを指定したときに発生する。"
msgstr ""

msgid "a new instance of UnknownIndexTargetTable"
msgstr ""

msgid "未知のインデックス対象を指定したときに発生する。"
msgstr ""

msgid "Returns the value of attribute targets."
msgstr ""

msgid "a new instance of UnknownIndexTarget"
msgstr ""

msgid "未知のオプションを指定したときに発生する。"
msgstr ""

msgid "Returns the value of attribute unknown_keys."
msgstr ""

msgid "Returns the value of attribute available_keys."
msgstr ""

msgid "a new instance of UnknownOptions"
msgstr ""

msgid "未知のテーブルの種類を指定したときに発生する。"
msgstr ""

msgid "Returns the value of attribute type."
msgstr ""

msgid "Returns the value of attribute available_types."
msgstr ""

msgid "a new instance of UnknownTableType"
msgstr ""

msgid "参照先のテーブルを推測できないときに発生する。"
msgstr ""

msgid "Returns the value of attribute tried_table_names."
msgstr ""

msgid "a new instance of UnguessableReferenceTable"
msgstr ""

msgid ""
"スキーマを定義する。ブロックには {Groonga::Schema} オブ\n"
"ジェクトがわたるので、そのオブジェクトを利用してスキー\n"
"マを定義する。以下の省略形。"
msgstr ""

# Groonga::Schema.define
msgid ""
"<pre>\n"
"!!!ruby\n"
"schema = Groonga::Scheme.new(options)\n"
"# ...\n"
"schema.define\n"
"</pre>"
msgstr ""

msgid "名前が _name_ のテーブルを作成する。以下の省略形。"
msgstr ""

# Groonga::Schema.create_table
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.create_table(name, options) do |table|\n"
"    # ...\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

msgid ""
"ブロックには {Groonga::Schema::TableDefinition} オブジェ\n"
"クトがわたるので、そのオブジェクトを利用してテーブル\n"
"の詳細を定義する。"
msgstr ""

# @overload
msgid "tag|overload|create_table"
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"Create a table that manages records by ID when you specify\n"
"`:array` to `:type`."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"Create a table that manages record keys by hash table when\n"
"you specify `:hash` to `:type`."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"Create a table that manages record keys by patricia trie\n"
"when you specify `:patricia_trie` to `:type`."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"Create a table that manages record keys by double array trie\n"
"when you specify `:double_array_trie` to `:type`."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"You can identify a record only by record ID. You can't use\n"
"key because key doesn't exist in the table."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"You can identify a record by key. The table is most fast\n"
"table for finding a record by key. But the table doesn't\n"
"support advanced key search features such as common prefix\n"
"search and range search."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"You can identify a record by key. The table is most small\n"
"table. The table supports advanced key search features such\n"
"as prefix search and range search. The table is suitable for\n"
"lexicon of full-text search and index of range search."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"You can identify a record by key. The table is fast table\n"
"for finding a record by key. But the table is large. The\n"
"table supports advanced key search features such as prefix\n"
"search and range search."
msgstr ""

msgid "名前が _name_ のテーブルを削除する。"
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"See description of `TABLE_NO_KEY` at [Groonga documentation\n"
"of tables](http://groonga.org/docs/reference/tables.html)\n"
"for details."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"See description of `TABLE_HASH_KEY` at [Groonga documentation\n"
"of tables](http://groonga.org/docs/reference/tables.html)\n"
"for details."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"See description of `TABLE_PAT_KEY` at [Groonga documentation\n"
"of tables](http://groonga.org/docs/reference/tables.html)\n"
"for details."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"The table is the only table that supports renaming key. The\n"
"table is used in Groonga database to manage object names\n"
"such as `ShortText` and `TokenBigram`."
msgstr ""

# Groonga::Schema#create_table
# Groonga::Schema.create_table
msgid ""
"See description of `TABLE_DAT_KEY` at [Groonga documentation\n"
"of tables](http://groonga.org/docs/reference/tables.html)\n"
"for details."
msgstr ""

msgid "名前が _name_ のテーブルを変更する。以下の省略形。"
msgstr ""

# Groonga::Schema.change_table
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.change_table(name, options) do |table|\n"
"    # ...\n"
"  end\n"
"end\n"
"</pre>"
msgstr ""

msgid "(See Groonga::Schema#rename_table)"
msgstr ""

msgid "This is a syntax sugar of the following code:"
msgstr ""

# Groonga::Schema.rename_table
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.rename_table(current_name, new_name, options)\n"
"end\n"
"</pre>"
msgstr ""

msgid "以下と同様:"
msgstr ""

# Groonga::Schema.remove_column
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.change_table(table_name) do |table|\n"
"  table.remove_column(column_name)\n"
"end\n"
"</pre>"
msgstr ""

msgid "This is a syntax sugar of the following:"
msgstr ""

# Groonga::Schema.rename_column
msgid ""
"<pre>\n"
"!!!ruby\n"
"Groonga::Schema.define do |schema|\n"
"  schema.rename_column(table_name,\n"
"                       current_column_name, new_column_name)\n"
"end\n"
"</pre>"
msgstr ""

msgid ""
"スキーマの内容を文字列をRubyスクリプト形式またはgrn式\n"
"形式で返す。デフォルトはRubyスクリプト形式である。\n"
"Rubyスクリプト形式で返された値は\n"
"{Groonga::Schema.restore} することによりスキーマ内に組み\n"
"込むことができる。"
msgstr ""

msgid "dump.rb:"
msgstr ""

# Groonga::Schema.dump
msgid ""
"<pre>\n"
"!!!ruby\n"
"File.open(\"/tmp/groonga-schema.rb\", \"w\") do |schema|\n"
"  dumped_text = Groonga::Schema.dump\n"
"end\n"
"</pre>"
msgstr ""

msgid "restore.rb:"
msgstr ""

# Groonga::Schema.dump
msgid ""
"<pre>\n"
"!!!ruby\n"
"dumped_text = Groonga::Schema.dump\n"
"Groonga::Database.create(:path => \"/tmp/new-db.grn\")\n"
"Groonga::Schema.restore(dumped_text)\n"
"</pre>"
msgstr ""

msgid ""
"grn式形式で返された値はgroongaコマンドで読み込むこと\n"
"ができる。"
msgstr ""

# Groonga::Schema.dump
msgid ""
"<pre>\n"
"!!!ruby\n"
"File.open(\"/tmp/groonga-schema.grn\", \"w\") do |schema|\n"
"  dumped_text = Groonga::Schema.dump(:syntax => :command)\n"
"end\n"
"</pre>"
msgstr ""

msgid ""
"<pre>\n"
"!!!text\n"
"% groonga db/path < /tmp/groonga-schema.grn\n"
"</pre>"
msgstr ""

# Groonga::Schema.restore
msgid "{Groonga::Schema.dump} で文字列化したスキーマを組み込む。"
msgstr ""

msgid "スキーマ定義を開始する。"
msgstr ""

msgid "a new instance of Schema"
msgstr ""

msgid "定義されたスキーマ定義を実際に実行する。"
msgstr ""

# Groonga::Schema#load
# Groonga::Schema#restore
msgid "{Groonga::Schema#dump} で返されたスキーマの内容を読み込む。"
msgstr ""

# Groonga::Schema#restore
msgid ""
"読み込まれた内容は {#define} を呼び出すまでは実行されない\n"
"ことに注意すること。"
msgstr ""

# Groonga::Schema#load
msgid ""
"読み込まれた内容は {#define} を呼び出すまでは実行されない\n"
"ことに注意すること。\n"
"for backward compatibility.\n"
"TODO: remove this at the next major release."
msgstr ""

msgid ""
"スキーマの内容を文字列で返す。返された値は\n"
"{Groonga::Schema#restore} することによりスキーマ内に組み込むことができる。"
msgstr ""

msgid "名前が _name_ のテーブルを作成する。"
msgstr ""

# Groonga::Schema#create_table
msgid ""
"テーブルの作成は {#define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

# Groonga::Schema#remove_table
msgid ""
"テーブルの削除は# {define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

msgid "名前が _name_ のテーブルを変更する。"
msgstr ""

# Groonga::Schema#change_table
msgid ""
"テーブルの変更は {#define} を呼び出すまでは実行されないこ\n"
"とに注意すること。"
msgstr ""

msgid "Renames _current_name_ table to _new_name."
msgstr "テーブルの名前を _current_name_ から _new_name_ に変更します。 "

msgid ""
"Note that table renaming will will not be performed\n"
"until {#define} is called."
msgstr "{#define} が呼ばれるまで名前の変更は実行されないことに注意してください。"

# Groonga::Schema#remove_column
msgid ""
"<pre>\n"
"!!!ruby\n"
"schema.change_table(table_name) do |table|\n"
"  table.remove_column(column_name)\n"
"end\n"
"</pre>"
msgstr ""

msgid "It is a syntax sugar of the following:"
msgstr ""

# Groonga::Schema#rename_column
msgid ""
"<pre>\n"
"!!!ruby\n"
"schema.change_table(table_name) do |table|\n"
"  table.rename_column(current_column_name, new_column_name)\n"
"end\n"
"</pre>"
msgstr ""

# Groonga::Schema::TableDefinition
msgid ""
"スキーマ定義時に {Groonga::Schema.create_table} や\n"
"{Groonga::Schema#create_table} からブロックに渡されてくる\n"
"オブジェクト"
msgstr ""

msgid "テーブルの名前"
msgstr ""

msgid "a new instance of TableDefinition"
msgstr ""

# Groonga::Schema::TableDefinition#column
msgid "名前が _name_ で型が _type_ のカラムを作成する。"
msgstr ""

msgid "名前が _name_ のカラムを削除します。"
msgstr ""

# Groonga::Schema::TableDefinition#remove_column
msgid "_options_ に指定可能な値はありません(TODO _options_ は不要?)。"
msgstr ""

# Groonga::Schema::TableDefinition#rename_column
msgid "Renames _current_name_ column to _new_name_ column."
msgstr ""

msgid ""
"The name and value\n"
"pairs. Omitted names are initialized as the default\n"
"value."
msgstr "オプションを設定するハッシュ。指定されなかったオプションはデフォルト値が使われます。"

msgid ""
"_target_table_ の _target_column_ を対象とするインデック\n"
"スカラムを作成します。複数のカラムを指定することもで\n"
"きます。"
msgstr ""

msgid ""
"_target_column_full_name_ で指定するときはテーブル名\n"
"とカラム名を\".\"でつなげます。"
msgstr ""

msgid ""
"例えば、「Users」テーブルの「name」カラムのインデックスカラムを\n"
"指定する場合はこうなります。"
msgstr ""

# @example
msgid "table.index(\"Users.name\")"
msgstr ""

# @param [::Hash]
# @param [Array]
msgid "tag|param|args"
msgstr ""

# @param [Array] args
msgid ""
"インデックスカラム作成時に指定できるオプション。\n"
"ハッシュを使って次の要素を指定することができる。\n"
"\n"
"- :name :=\n"
"  インデックスカラムのカラム名を任意に指定する。 =:\n"
"- :force :=\n"
"  +true+ を指定すると既存の同名のカラムが\n"
"  存在していても、強制的に新しいカラムを作成する。 =:\n"
"- :path :=\n"
"  カラムを保存するパス。 =:\n"
"- :persistent :=\n"
"  +true+ を指定すると永続カラムとなる。\n"
"  +:path+ を省略した場合は自動的にパスが付加される。 =:\n"
"- :with_section :=\n"
"  +true+ を指定すると転置索引にsection(段落情報)を\n"
"  合わせて格納する。未指定または +nil+ を指定した場合、\n"
"  複数のカラムを指定すると自動的に有効になる。 =:\n"
"- :with_weight :=\n"
"  +true+ を指定すると転置索引にweight情報を合わせて\n"
"  格納する。 =:\n"
"- :with_position :=\n"
"  +true+ を指定すると転置索引に出現位置情報を合わせて\n"
"  格納する。未指定または +nil+ を指定した場合、テーブル\n"
"  がトークナイザー利用している場合は自動的に有効になる。\n"
"  +TokenDelimit+ など全文検索用ではないトークナイザーを\n"
"  使う場合は明示的に +false+ を指定することで使用リソース\n"
"  を少なくできる。=:"
msgstr ""

msgid ""
"_target_table_ の _target_column_ を対象とするインデッ\n"
"クスカラムを削除します。"
msgstr ""

msgid ""
"例えば、「Users」テーブルの「name」カラムのインデックスカラムを\n"
"削除する場合はこうなります。"
msgstr ""

# @example
msgid "table.remove_index(\"Users.name\")"
msgstr ""

msgid ""
"{ :name => target_column }と指定す\n"
"ることでインデックスカラムの任意のカラム名を指定することができる。"
msgstr ""

msgid "Defines a 8 bit signed integer column named @name@."
msgstr "@name@ という名前8ビット符号付き整数のカラムを定義します。"

msgid "the column name"
msgstr ""

msgid "({}) the options"
msgstr ""

msgid "tag|see|#column"
msgstr ""

msgid "#column for available options."
msgstr ""

msgid "Defines a 16 bit signed integer column named @name@."
msgstr "@name@ という名前16ビット符号付き整数のカラムを定義します。"

msgid "名前が _name_ の32bit符号付き整数のカラムを作成する。"
msgstr ""

msgid ""
"_options_ に指定可能な値は\n"
"{Groonga::Schema::TableDefinition#column} を参照。"
msgstr ""

msgid "名前が _name_ の64bit符号付き整数のカラムを作成する。"
msgstr ""

msgid "Defines a 8 bit unsigned integer column named @name@."
msgstr "@name@ という名前8ビット符号なし整数のカラムを定義します。"

msgid "Defines a 16 bit unsigned integer column named @name@."
msgstr "@name@ という名前16ビット符号なし整数のカラムを定義します。<"

msgid "名前が _name_ の32bit符号なし整数のカラムを作成する。"
msgstr ""

msgid "名前が _name_ の64bit符号なし整数のカラムを作成する。"
msgstr ""

msgid ""
"名前が _name_ のieee754形式の64bit浮動小数点数のカラム\n"
"を作成する。"
msgstr ""

msgid ""
"名前が _name_ の64bit符号付き整数で1970年1月1日0時0分\n"
"0秒からの経過マイクロ秒数を格納するカラムを作成する。"
msgstr ""

# Groonga::Schema::TableDefinition#timestamps
msgid ""
"以下と同様:\n"
"<pre>\n"
"!!!ruby\n"
"table.time(\"updated_at\")\n"
"table.time(\"created_at\")\n"
"</pre>"
msgstr ""

msgid ""
"名前が _name_ の4Kbyte以下の文字列を格納できるカラムを\n"
"作成する。"
msgstr ""

msgid ""
"名前が _name_ の64Kbyte以下の文字列を格納できるカラムを\n"
"作成する。"
msgstr ""

msgid ""
"名前が _name_ の2Gbyte以下の文字列を格納できるカラムを\n"
"作成する。"
msgstr ""

msgid ""
"名前が _name_ で _table_ のレコードIDを格納する参照カラ\n"
"ムを作成する。"
msgstr ""

msgid ""
"_table_ が省略された場合は _name_ の複数形が使われる。\n"
"例えば、 _name_ が\"user\"な場合は _table_ は\"users\"になる。"
msgstr ""

msgid "名前が _name_ の真偽値を格納できるカラムを作成する。"
msgstr ""

msgid ""
"Defines a geo point in Tokyo geodetic system column\n"
"named @name@."
msgstr ""

msgid ""
"Defines a geo point in WGS 84 (World Geodetic System) column\n"
"named @name@."
msgstr ""

msgid "a new instance of TableRemoveDefinition"
msgstr ""

msgid "a new instance of TableRenameDefinition"
msgstr ""

# @param value
msgid "the value to set the attribute name to."
msgstr ""

# @param value
msgid "the value to set the attribute type to."
msgstr ""

msgid "Sets the attribute name"
msgstr ""

msgid "Sets the attribute type"
msgstr ""

msgid "a new instance of ColumnDefinition"
msgstr ""

msgid "a new instance of ColumnRemoveDefinition"
msgstr ""

# @param value
msgid "the value to set the attribute current_name to."
msgstr ""

# @param value
msgid "the value to set the attribute new_name to."
msgstr ""

msgid "Returns the value of attribute current_name."
msgstr ""

msgid "Sets the attribute current_name"
msgstr ""

msgid "Returns the value of attribute new_name."
msgstr ""

msgid "Sets the attribute new_name"
msgstr ""

msgid "a new instance of ColumnRenameDefinition"
msgstr ""

# @param value
msgid "the value to set the attribute target_table to."
msgstr ""

# @param value
msgid "the value to set the attribute target_columns to."
msgstr ""

msgid "Returns the value of attribute target_table."
msgstr ""

msgid "Sets the attribute target_table"
msgstr ""

msgid "Returns the value of attribute target_columns."
msgstr ""

# Groonga::Schema::IndexColumnDefinition#target_columns=
msgid "Sets the attribute target_columns"
msgstr ""

msgid "a new instance of IndexColumnDefinition"
msgstr ""

# Groonga::SubRecords
msgid ""
"Represents sub records of a {Record}. Grouped result set by\n"
"{Table#group} only has sub records."
msgstr ""

# Groonga::SubRecords
msgid "{SubRecords} acts like an ::Array."
msgstr ""

# @param [Record] record
# Groonga::SubRecords#record
msgid "The record that has this sub records."
msgstr ""

# Groonga::SubRecords#initialize
msgid "Creates a sub records container for the _record_."
msgstr ""

# Groonga::SubRecords#initialize
msgid ""
"Normally, users don't need to instantiate {SubRecords}\n"
"directly. {Record#sub_records} creates and returns a\n"
"{SubRecords}."
msgstr ""

# @param [Record]
msgid "tag|param|record"
msgstr ""

# @return [SubRecords]
msgid "a new instance of SubRecords"
msgstr ""

# @yield [record]
msgid "Gives a sub record to the block."
msgstr ""

# @yieldparam [Record]
msgid "tag|yieldparam|record"
msgstr ""

msgid "A sub record."
msgstr "サブレコード。"

# @return [Array<Record>]
msgid "Sub records as ::Array."
msgstr ""

# Groonga::SubRecords#to_ary
msgid "Acts as ::Array"
msgstr ""

# @param [Integer]
msgid "tag|param|index"
msgstr ""

# @param [Integer] index
msgid "A 0-origin index."
msgstr ""

# @return [Record]
msgid "A sub record at _index_."
msgstr ""
